{
	"id": "adf67b4c45e0f066d652b7f62c720cc8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/TransferSelectorNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport {TheTransferSelector} from \"./trans/interface/TheTransFerSelector.sol\";\n\ncontract TransferSelectorNFT is TheTransferSelector, Ownable {\n    // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    // 721 protocol address\n    address public immutable TRANSFER_MANAGER_ERC721;\n\n    //1155 transfer protocol address\n    address public immutable TRANSFER_MANAGER_ERC1155;\n\n    // manager address mapping\n    mapping(address => address) public transferManagerSelectorForCollection;\n\n    event CollectionTransferManagerAdded(address indexed collection, address indexed transferManager);\n    event CollectionTransferManagerRemoved(address indexed collection);\n\n    //  initialize the transfer manager addresses of 1155 and 721\n    constructor(address _transferManagerERC721, address _transferManagerERC1155) {\n        TRANSFER_MANAGER_ERC721 = _transferManagerERC721;\n        TRANSFER_MANAGER_ERC1155 = _transferManagerERC1155;\n    }\n\n    //\n    // tion addCollectionTransferManager\n    //  @Description: Add a designated transfer contract for a collection\n    //  @param address\n    //  @param address\n    //  @return external\n    //\n    function addCollectionTransferManager(address collection, address transferManager) external onlyOwner {\n        require(collection != address(0), \" Collection cannot be null address\");\n        require(transferManager != address(0), \"TransferManager cannot be null address\");\n        // Confirm collection is not null and transfer manager is not null\n\n        transferManagerSelectorForCollection[collection] = transferManager;\n\n        emit CollectionTransferManagerAdded(collection, transferManager);\n    }\n\n    //\n    // tion removeCollectionTransferManager\n    //  @Description: Delete a collection transfer contract\n    //  @param address\n    //  @return external\n    //\n    function removeCollectionTransferManager(address collection) external onlyOwner {\n        require(\n            transferManagerSelectorForCollection[collection] != address(0),\n            \"Collection has no transfer manager\"\n        );\n\n        transferManagerSelectorForCollection[collection] = address(0);\n\n        emit CollectionTransferManagerRemoved(collection);\n    }\n\n    // Confrim the transfer manager for a collection\n    function checkTransferManagerForToken(address collection) external view override returns (address transferManager) {\n        // If there is designated manager contract, then return\n        transferManager = transferManagerSelectorForCollection[collection];\n\n        // If there is not designated manager contract, decide using collection's API\n        if (transferManager == address(0)) {\n            if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {\n                transferManager = TRANSFER_MANAGER_ERC721;\n            } else if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)) {\n                transferManager = TRANSFER_MANAGER_ERC1155;\n            }\n        }\n\n        return transferManager;\n    }\n}\n"
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheTransferSelector {\n    function checkTransferManagerForToken(address collection) external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/TransferSelectorNFT.sol": {
				"TransferSelectorNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_transferManagerERC721",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_transferManagerERC1155",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "transferManager",
									"type": "address"
								}
							],
							"name": "CollectionTransferManagerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "CollectionTransferManagerRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRANSFER_MANAGER_ERC1155",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRANSFER_MANAGER_ERC721",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "transferManager",
									"type": "address"
								}
							],
							"name": "addCollectionTransferManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkTransferManagerForToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "transferManager",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "removeCollectionTransferManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "transferManagerSelectorForCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/TransferSelectorNFT.sol\":287:3312  contract TransferSelectorNFT is TheTransferSelector, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/Manager/TransferSelectorNFT.sol\":1058:1260  constructor(address _transferManagerERC721, address _transferManagerERC1155) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Manager/TransferSelectorNFT.sol\":1145:1193  TRANSFER_MANAGER_ERC721 = _transferManagerERC721 */\n  swap2\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/Manager/TransferSelectorNFT.sol\":1203:1253  TRANSFER_MANAGER_ERC1155 = _transferManagerERC1155 */\n  and\n  0xa0\n  mstore\n    /* \"contracts/Manager/TransferSelectorNFT.sol\":287:3312  contract TransferSelectorNFT is TheTransferSelector, Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_16:\n    /* \"contracts/Manager/TransferSelectorNFT.sol\":287:3312  contract TransferSelectorNFT is TheTransferSelector, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n  0x00\n  assignImmutable(\"0x566674f71911cd3b7cbc2fd66353711d31aaa96f269440d186374a017f53f324\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":287:3312  contract TransferSelectorNFT is TheTransferSelector, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xbc6bc0cd\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xcc159493\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb1357ddd\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x38928956\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x38928956\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4216a753\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x7053fb79\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x25c6a895\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x33bf6156\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1466:1973  function addCollectionTransferManager(address collection, address transferManager) external onlyOwner {... */\n    tag_3:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":468:524  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_4:\n      tag_21\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":654:720   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":642:721   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":624:722   */\n      dup2\n      mstore\n        /* \"#utility.yul\":612:614   */\n      0x20\n        /* \"#utility.yul\":597:615   */\n      add\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":468:524  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":651:700  address public immutable TRANSFER_MANAGER_ERC1155 */\n    tag_5:\n      tag_25\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":909:951   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":897:952   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":879:953   */\n      dup2\n      mstore\n        /* \"#utility.yul\":867:869   */\n      0x20\n        /* \"#utility.yul\":852:870   */\n      add\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":651:700  address public immutable TRANSFER_MANAGER_ERC1155 */\n      tag_23\n        /* \"#utility.yul\":733:959   */\n      jump\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":738:809  mapping(address => address) public transferManagerSelectorForCollection */\n    tag_6:\n      tag_25\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2145:2517  function removeCollectionTransferManager(address collection) external onlyOwner {... */\n    tag_7:\n      tag_17\n      tag_35\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_17\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_25)\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":559:607  address public immutable TRANSFER_MANAGER_ERC721 */\n    tag_10:\n      tag_25\n      immutable(\"0x566674f71911cd3b7cbc2fd66353711d31aaa96f269440d186374a017f53f324\")\n      dup2\n      jump\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":380:435  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_11:\n      tag_21\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2576:3310  function checkTransferManagerForToken(address collection) external view override returns (address transferManager) {... */\n    tag_12:\n      tag_25\n      tag_49\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_17\n      tag_53\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1466:1973  function addCollectionTransferManager(address collection, address transferManager) external onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1586:1610  collection != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1578:1649  require(collection != address(0), \" Collection cannot be null address\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1357:1359   */\n      0x20\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1578:1649  require(collection != address(0), \" Collection cannot be null address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1339:1360   */\n      mstore\n        /* \"#utility.yul\":1396:1398   */\n      0x22\n        /* \"#utility.yul\":1376:1394   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1369:1399   */\n      mstore\n        /* \"#utility.yul\":1435:1469   */\n      0x20436f6c6c656374696f6e2063616e6e6f74206265206e756c6c206164647265\n        /* \"#utility.yul\":1415:1433   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1408:1470   */\n      mstore\n        /* \"#utility.yul\":1506:1510   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1486:1504   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1479:1511   */\n      mstore\n        /* \"#utility.yul\":1528:1547   */\n      0x84\n      add\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1578:1649  require(collection != address(0), \" Collection cannot be null address\") */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1667:1696  transferManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1659:1739  require(transferManager != address(0), \"TransferManager cannot be null address\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1760:1762   */\n      0x20\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1659:1739  require(transferManager != address(0), \"TransferManager cannot be null address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1742:1763   */\n      mstore\n        /* \"#utility.yul\":1799:1801   */\n      0x26\n        /* \"#utility.yul\":1779:1797   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1772:1802   */\n      mstore\n        /* \"#utility.yul\":1838:1872   */\n      0x5472616e736665724d616e616765722063616e6e6f74206265206e756c6c2061\n        /* \"#utility.yul\":1818:1836   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1811:1873   */\n      mstore\n        /* \"#utility.yul\":1909:1917   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1889:1907   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1882:1918   */\n      mstore\n        /* \"#utility.yul\":1935:1954   */\n      0x84\n      add\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1659:1739  require(transferManager != address(0), \"TransferManager cannot be null address\") */\n      tag_60\n        /* \"#utility.yul\":1558:1960   */\n      jump\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1659:1739  require(transferManager != address(0), \"TransferManager cannot be null address\") */\n    tag_62:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1825:1873  transferManagerSelectorForCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1825:1861  transferManagerSelectorForCollection */\n      0x01\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1825:1873  transferManagerSelectorForCollection[collection] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1825:1891  transferManagerSelectorForCollection[collection] = transferManager */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap5\n      dup7\n      and\n      swap5\n      dup6\n      or\n      swap1\n      sstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1907:1966  CollectionTransferManagerAdded(collection, transferManager) */\n      mload\n      0xda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b62\n      swap2\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1825:1873  transferManagerSelectorForCollection[collection] */\n      swap1\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1907:1966  CollectionTransferManagerAdded(collection, transferManager) */\n      log3\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":1466:1973  function addCollectionTransferManager(address collection, address transferManager) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2145:2517  function removeCollectionTransferManager(address collection) external onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2256:2318  transferManagerSelectorForCollection[collection] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2256:2304  transferManagerSelectorForCollection[collection] */\n      dup2\n      dup2\n      and\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2316:2317  0 */\n      0x00\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2256:2304  transferManagerSelectorForCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2256:2292  transferManagerSelectorForCollection */\n      0x01\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2256:2304  transferManagerSelectorForCollection[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2235:2378  require(... */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2167:2169   */\n      0x20\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2235:2378  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2149:2170   */\n      mstore\n        /* \"#utility.yul\":2206:2208   */\n      0x22\n        /* \"#utility.yul\":2186:2204   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2179:2209   */\n      mstore\n        /* \"#utility.yul\":2245:2279   */\n      0x436f6c6c656374696f6e20686173206e6f207472616e73666572206d616e6167\n        /* \"#utility.yul\":2225:2243   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2218:2280   */\n      mstore\n        /* \"#utility.yul\":2316:2320   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2296:2314   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2289:2321   */\n      mstore\n        /* \"#utility.yul\":2338:2357   */\n      0x84\n      add\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2235:2378  require(... */\n      tag_60\n        /* \"#utility.yul\":1965:2363   */\n      jump\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2235:2378  require(... */\n    tag_68:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2389:2437  transferManagerSelectorForCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2448:2449  0 */\n      0x00\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2389:2437  transferManagerSelectorForCollection[collection] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2389:2425  transferManagerSelectorForCollection */\n      0x01\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2389:2437  transferManagerSelectorForCollection[collection] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2389:2450  transferManagerSelectorForCollection[collection] = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2466:2510  CollectionTransferManagerRemoved(collection) */\n      mload\n      0x8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f\n      swap2\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2448:2449  0 */\n      swap1\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2466:2510  CollectionTransferManagerRemoved(collection) */\n      log2\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2145:2517  function removeCollectionTransferManager(address collection) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2576:3310  function checkTransferManagerForToken(address collection) external view override returns (address transferManager) {... */\n    tag_50:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2783:2831  transferManagerSelectorForCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup3\n      and\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2666:2689  address transferManager */\n      0x00\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2783:2831  transferManagerSelectorForCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2783:2819  transferManagerSelectorForCollection */\n      0x01\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2783:2831  transferManagerSelectorForCollection[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      dup1\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2928:3271  if (transferManager == address(0)) {... */\n      tag_90\n      jumpi\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2981:3039  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3019:3038  INTERFACE_ID_ERC721 */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2981:3039  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":624:722   */\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2981:3018  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":597:615   */\n      0x24\n      add\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2981:3039  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2977:3261  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {... */\n      iszero\n      tag_84\n      jumpi\n      pop\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3077:3100  TRANSFER_MANAGER_ERC721 */\n      immutable(\"0x566674f71911cd3b7cbc2fd66353711d31aaa96f269440d186374a017f53f324\")\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2576:3310  function checkTransferManagerForToken(address collection) external view override returns (address transferManager) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2977:3261  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721)) {... */\n    tag_84:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3125:3184  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3163:3183  INTERFACE_ID_ERC1155 */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3125:3184  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":624:722   */\n      mstore\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3125:3162  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":597:615   */\n      0x24\n      add\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3125:3184  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_89:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3121:3261  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)) {... */\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3222:3246  TRANSFER_MANAGER_ERC1155 */\n      immutable(\"0xbf08d8a2d7c7780024ba6e6dbe12d3d5a5a747ea3071fca63d8a2ede50d3472a\")\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":3121:3261  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)) {... */\n    tag_90:\n        /* \"contracts/Manager/TransferSelectorNFT.sol\":2576:3310  function checkTransferManagerForToken(address collection) external view override returns (address transferManager) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2852:2854   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2834:2855   */\n      mstore\n        /* \"#utility.yul\":2891:2893   */\n      0x26\n        /* \"#utility.yul\":2871:2889   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2864:2894   */\n      mstore\n        /* \"#utility.yul\":2930:2964   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2910:2928   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2903:2965   */\n      mstore\n        /* \"#utility.yul\":3001:3009   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2981:2999   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2974:3010   */\n      mstore\n        /* \"#utility.yul\":3027:3046   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_60\n        /* \"#utility.yul\":2650:3052   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3259:3261   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3241:3262   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3278:3296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3271:3301   */\n      mstore\n        /* \"#utility.yul\":3337:3371   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3317:3335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3310:3372   */\n      mstore\n        /* \"#utility.yul\":3389:3407   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_60\n        /* \"#utility.yul\":3057:3413   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_107:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":215:475   */\n    tag_19:\n        /* \"#utility.yul\":283:289   */\n      0x00\n        /* \"#utility.yul\":291:297   */\n      dup1\n        /* \"#utility.yul\":344:346   */\n      0x40\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":323:330   */\n      dup6\n        /* \"#utility.yul\":319:342   */\n      sub\n        /* \"#utility.yul\":315:347   */\n      slt\n        /* \"#utility.yul\":312:364   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":360:361   */\n      0x00\n        /* \"#utility.yul\":357:358   */\n      dup1\n        /* \"#utility.yul\":350:362   */\n      revert\n        /* \"#utility.yul\":312:364   */\n    tag_112:\n        /* \"#utility.yul\":383:412   */\n      tag_113\n        /* \"#utility.yul\":402:411   */\n      dup4\n        /* \"#utility.yul\":383:412   */\n      tag_107\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":373:412   */\n      swap2\n      pop\n        /* \"#utility.yul\":431:469   */\n      tag_114\n        /* \"#utility.yul\":465:467   */\n      0x20\n        /* \"#utility.yul\":454:463   */\n      dup5\n        /* \"#utility.yul\":450:468   */\n      add\n        /* \"#utility.yul\":431:469   */\n      tag_107\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":421:469   */\n      swap1\n      pop\n        /* \"#utility.yul\":215:475   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":964:1150   */\n    tag_31:\n        /* \"#utility.yul\":1023:1029   */\n      0x00\n        /* \"#utility.yul\":1076:1078   */\n      0x20\n        /* \"#utility.yul\":1064:1073   */\n      dup3\n        /* \"#utility.yul\":1055:1062   */\n      dup5\n        /* \"#utility.yul\":1051:1074   */\n      sub\n        /* \"#utility.yul\":1047:1079   */\n      slt\n        /* \"#utility.yul\":1044:1096   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1089:1090   */\n      dup1\n        /* \"#utility.yul\":1082:1094   */\n      revert\n        /* \"#utility.yul\":1044:1096   */\n    tag_118:\n        /* \"#utility.yul\":1115:1144   */\n      tag_119\n        /* \"#utility.yul\":1134:1143   */\n      dup3\n        /* \"#utility.yul\":1115:1144   */\n      tag_107\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1105:1144   */\n      swap4\n        /* \"#utility.yul\":964:1150   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2368:2645   */\n    tag_83:\n        /* \"#utility.yul\":2435:2441   */\n      0x00\n        /* \"#utility.yul\":2488:2490   */\n      0x20\n        /* \"#utility.yul\":2476:2485   */\n      dup3\n        /* \"#utility.yul\":2467:2474   */\n      dup5\n        /* \"#utility.yul\":2463:2486   */\n      sub\n        /* \"#utility.yul\":2459:2491   */\n      slt\n        /* \"#utility.yul\":2456:2508   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2504:2505   */\n      0x00\n        /* \"#utility.yul\":2501:2502   */\n      dup1\n        /* \"#utility.yul\":2494:2506   */\n      revert\n        /* \"#utility.yul\":2456:2508   */\n    tag_124:\n        /* \"#utility.yul\":2536:2545   */\n      dup2\n        /* \"#utility.yul\":2530:2546   */\n      mload\n        /* \"#utility.yul\":2589:2594   */\n      dup1\n        /* \"#utility.yul\":2582:2595   */\n      iszero\n        /* \"#utility.yul\":2575:2596   */\n      iszero\n        /* \"#utility.yul\":2568:2573   */\n      dup2\n        /* \"#utility.yul\":2565:2597   */\n      eq\n        /* \"#utility.yul\":2555:2615   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":2611:2612   */\n      0x00\n        /* \"#utility.yul\":2608:2609   */\n      dup1\n        /* \"#utility.yul\":2601:2613   */\n      revert\n\n    auxdata: 0xa26469706673582212208b6b33f029138aa5672cad8e4e5318625a04557372a7024769cd9b4a4f10420364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_198": {
									"entryPoint": null,
									"id": 198,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 79,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:491:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:5"
															},
															"nodeType": "YulIf",
															"src": "115:70:5"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:5"
															},
															"nodeType": "YulIf",
															"src": "304:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:5",
														"type": ""
													}
												],
												"src": "196:293:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561001057600080fd5b50604051610b03380380610b0383398101604081905261002f916100bb565b6100383361004f565b6001600160a01b039182166080521660a0526100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100b657600080fd5b919050565b600080604083850312156100ce57600080fd5b6100d78361009f565b91506100e56020840161009f565b90509250929050565b60805160a0516109e261012160003960008181610145015261073f015260008181610200015261066501526109e26000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063715018a611610081578063bc6bc0cd1161005b578063bc6bc0cd14610222578063cc15949314610249578063f2fde38b1461025c57600080fd5b8063715018a6146101d55780638da5cb5b146101dd578063b1357ddd146101fb57600080fd5b806338928956116100b257806338928956146101405780634216a7531461018c5780637053fb79146101c257600080fd5b806325c6a895146100ce57806333bf6156146100e3575b600080fd5b6100e16100dc366004610935565b61026f565b005b61010a7fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6101677f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610137565b61016761019a366004610968565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6100e16101d0366004610968565b61043e565b6100e161056e565b60005473ffffffffffffffffffffffffffffffffffffffff16610167565b6101677f000000000000000000000000000000000000000000000000000000000000000081565b61010a7f80ac58cd0000000000000000000000000000000000000000000000000000000081565b610167610257366004610968565b610582565b6100e161026a366004610968565b610764565b61027761081b565b73ffffffffffffffffffffffffffffffffffffffff821661031f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f20436f6c6c656374696f6e2063616e6e6f74206265206e756c6c20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166103c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f5472616e736665724d616e616765722063616e6e6f74206265206e756c6c206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610316565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b629190a35050565b61044661081b565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260016020526040902054166104fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f436f6c6c656374696f6e20686173206e6f207472616e73666572206d616e616760448201527f65720000000000000000000000000000000000000000000000000000000000006064820152608401610316565b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055517f8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f9190a250565b61057661081b565b610580600061089c565b565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260016020526040902054168061075f576040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8316906301ffc9a790602401602060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061098a565b1561068957507f0000000000000000000000000000000000000000000000000000000000000000919050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8316906301ffc9a790602401602060405180830381865afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610737919061098a565b1561075f57507f00000000000000000000000000000000000000000000000000000000000000005b919050565b61076c61081b565b73ffffffffffffffffffffffffffffffffffffffff811661080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610316565b6108188161089c565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610316565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461075f57600080fd5b6000806040838503121561094857600080fd5b61095183610911565b915061095f60208401610911565b90509250929050565b60006020828403121561097a57600080fd5b61098382610911565b9392505050565b60006020828403121561099c57600080fd5b8151801515811461098357600080fdfea26469706673582212208b6b33f029138aa5672cad8e4e5318625a04557372a7024769cd9b4a4f10420364736f6c63430008110033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB03 CODESIZE SUB DUP1 PUSH2 0xB03 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBB JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x80 MSTORE AND PUSH1 0xA0 MSTORE PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7 DUP4 PUSH2 0x9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE5 PUSH1 0x20 DUP5 ADD PUSH2 0x9F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x9E2 PUSH2 0x121 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x145 ADD MSTORE PUSH2 0x73F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x200 ADD MSTORE PUSH2 0x665 ADD MSTORE PUSH2 0x9E2 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xCC159493 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xB1357DDD EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38928956 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x38928956 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x4216A753 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x7053FB79 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x25C6A895 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167 JUMP JUMPDEST PUSH2 0x167 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x764 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x81B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20436F6C6C656374696F6E2063616E6E6F74206265206E756C6C206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665724D616E616765722063616E6E6F74206265206E756C6C2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xDA166BE6BA0EBB71BE3F83E7D669765DE552EA08978BFE3E3E42D54174111B62 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x446 PUSH2 0x81B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C656374696F6E20686173206E6F207472616E73666572206D616E6167 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE MLOAD PUSH32 0x8C3BF4BABC197F3DB0E7EC65AAF23FC0EFB0E689436AEEA8514C3F01FD97841F SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x576 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x580 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST ISZERO PUSH2 0x689 JUMPI POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x713 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST ISZERO PUSH2 0x75F JUMPI POP PUSH32 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76C PUSH2 0x81B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x316 JUMP JUMPDEST PUSH2 0x818 DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x316 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x951 DUP4 PUSH2 0x911 JUMP JUMPDEST SWAP2 POP PUSH2 0x95F PUSH1 0x20 DUP5 ADD PUSH2 0x911 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x983 DUP3 PUSH2 0x911 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH12 0x33F029138AA5672CAD8E4E53 XOR PUSH3 0x5A0455 PUSH20 0x72A7024769CD9B4A4F10420364736F6C63430008 GT STOP CALLER ",
							"sourceMap": "287:3025:3:-:0;;;1058:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;-1:-1:-1;;;;;1145:48:3;;;;;1203:50;;;287:3025;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;287:3025:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_161": {
									"entryPoint": null,
									"id": 161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TRANSFER_MANAGER_ERC1155_168": {
									"entryPoint": null,
									"id": 168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TRANSFER_MANAGER_ERC721_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2075,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2204,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addCollectionTransferManager_239": {
									"entryPoint": 623,
									"id": 239,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@checkTransferManagerForToken_321": {
									"entryPoint": 1410,
									"id": 321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeCollectionTransferManager_272": {
									"entryPoint": 1086,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1390,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferManagerSelectorForCollection_172": {
									"entryPoint": null,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1892,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_143e774f04588be005b913fd46455b3258b959ce60e774d00ea14fad122814b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_840fc9424318c1b0da18c5496aafd5971f152438e2e75bfe421990c84f300d21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b1a3f606f6fccb074e6148f7e2515983e0e117c6ed56b219e6e79b336e2bae9c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3415:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:5"
															},
															"nodeType": "YulIf",
															"src": "111:93:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "302:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "348:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "357:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "360:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "350:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "350:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "350:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "323:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "319:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "319:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "344:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:32:5"
															},
															"nodeType": "YulIf",
															"src": "312:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "373:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "402:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "383:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "421:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "454:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "465:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "431:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "421:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "260:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "271:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "283:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "291:6:5",
														"type": ""
													}
												],
												"src": "215:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "579:149:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "589:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "601:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "597:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "589:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "631:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "646:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "654:66:5",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "642:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:79:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:98:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "624:98:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "548:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "559:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "570:4:5",
														"type": ""
													}
												],
												"src": "480:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "834:125:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "844:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "856:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "867:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "852:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "844:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "886:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "901:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "909:42:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "897:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "897:55:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "879:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:74:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "879:74:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "803:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "814:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "825:4:5",
														"type": ""
													}
												],
												"src": "733:226:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1034:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1080:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1089:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1092:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1082:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1082:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1082:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1055:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1064:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1051:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:32:5"
															},
															"nodeType": "YulIf",
															"src": "1044:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1105:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1134:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1115:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1105:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1000:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1011:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1023:6:5",
														"type": ""
													}
												],
												"src": "964:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1329:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1346:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1357:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1339:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1391:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1376:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1376:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1396:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1369:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1369:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1369:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1419:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1430:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1415:18:5"
																	},
																	{
																		"hexValue": "20436f6c6c656374696f6e2063616e6e6f74206265206e756c6c206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1435:34:5",
																		"type": "",
																		"value": " Collection cannot be null addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1408:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1506:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1479:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1520:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1532:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1528:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1520:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_143e774f04588be005b913fd46455b3258b959ce60e774d00ea14fad122814b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1306:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1320:4:5",
														"type": ""
													}
												],
												"src": "1155:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1732:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1742:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1783:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1794:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1779:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1799:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1772:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1772:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1822:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1833:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1818:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:18:5"
																	},
																	{
																		"hexValue": "5472616e736665724d616e616765722063616e6e6f74206265206e756c6c2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1838:34:5",
																		"type": "",
																		"value": "TransferManager cannot be null a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1811:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1811:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1893:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1904:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1889:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1889:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1909:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1882:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1882:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1927:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1939:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1935:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1927:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b1a3f606f6fccb074e6148f7e2515983e0e117c6ed56b219e6e79b336e2bae9c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1709:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1723:4:5",
														"type": ""
													}
												],
												"src": "1558:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2139:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2156:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2167:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2149:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2201:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2186:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2186:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2206:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2179:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2229:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2240:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:18:5"
																	},
																	{
																		"hexValue": "436f6c6c656374696f6e20686173206e6f207472616e73666572206d616e6167",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2245:34:5",
																		"type": "",
																		"value": "Collection has no transfer manag"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2300:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2311:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2296:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:18:5"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2316:4:5",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2289:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2330:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2342:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2353:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2338:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2330:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_840fc9424318c1b0da18c5496aafd5971f152438e2e75bfe421990c84f300d21__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2116:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2130:4:5",
														"type": ""
													}
												],
												"src": "1965:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2492:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2501:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2504:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2494:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2494:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2494:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2467:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2476:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:32:5"
															},
															"nodeType": "YulIf",
															"src": "2456:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2517:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2536:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2530:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2521:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2599:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2608:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2611:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2601:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2601:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2601:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2568:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2589:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2582:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2582:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2575:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2575:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2565:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:40:5"
															},
															"nodeType": "YulIf",
															"src": "2555:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2624:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2634:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2624:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2412:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2423:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2435:6:5",
														"type": ""
													}
												],
												"src": "2368:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2841:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2834:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2886:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2871:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2871:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2891:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2864:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2864:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2864:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2914:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2925:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2910:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2930:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2903:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2903:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2985:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2996:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2981:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2981:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3001:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2974:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3019:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3031:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3042:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3027:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3019:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2815:4:5",
														"type": ""
													}
												],
												"src": "2650:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3231:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3248:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3259:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3241:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3241:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3241:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3282:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3293:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3278:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3298:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3271:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3321:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3332:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3317:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3317:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3337:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3310:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3381:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3393:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3404:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3389:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3381:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3208:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3222:4:5",
														"type": ""
													}
												],
												"src": "3057:356:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_143e774f04588be005b913fd46455b3258b959ce60e774d00ea14fad122814b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \" Collection cannot be null addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b1a3f606f6fccb074e6148f7e2515983e0e117c6ed56b219e6e79b336e2bae9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"TransferManager cannot be null a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_840fc9424318c1b0da18c5496aafd5971f152438e2e75bfe421990c84f300d21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Collection has no transfer manag\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"166": [
									{
										"length": 32,
										"start": 512
									},
									{
										"length": 32,
										"start": 1637
									}
								],
								"168": [
									{
										"length": 32,
										"start": 325
									},
									{
										"length": 32,
										"start": 1855
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c8063715018a611610081578063bc6bc0cd1161005b578063bc6bc0cd14610222578063cc15949314610249578063f2fde38b1461025c57600080fd5b8063715018a6146101d55780638da5cb5b146101dd578063b1357ddd146101fb57600080fd5b806338928956116100b257806338928956146101405780634216a7531461018c5780637053fb79146101c257600080fd5b806325c6a895146100ce57806333bf6156146100e3575b600080fd5b6100e16100dc366004610935565b61026f565b005b61010a7fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b6101677f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610137565b61016761019a366004610968565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6100e16101d0366004610968565b61043e565b6100e161056e565b60005473ffffffffffffffffffffffffffffffffffffffff16610167565b6101677f000000000000000000000000000000000000000000000000000000000000000081565b61010a7f80ac58cd0000000000000000000000000000000000000000000000000000000081565b610167610257366004610968565b610582565b6100e161026a366004610968565b610764565b61027761081b565b73ffffffffffffffffffffffffffffffffffffffff821661031f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f20436f6c6c656374696f6e2063616e6e6f74206265206e756c6c20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166103c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f5472616e736665724d616e616765722063616e6e6f74206265206e756c6c206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610316565b73ffffffffffffffffffffffffffffffffffffffff82811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055517fda166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b629190a35050565b61044661081b565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260016020526040902054166104fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f436f6c6c656374696f6e20686173206e6f207472616e73666572206d616e616760448201527f65720000000000000000000000000000000000000000000000000000000000006064820152608401610316565b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055517f8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f9190a250565b61057661081b565b610580600061089c565b565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260016020526040902054168061075f576040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8316906301ffc9a790602401602060405180830381865afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061098a565b1561068957507f0000000000000000000000000000000000000000000000000000000000000000919050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8316906301ffc9a790602401602060405180830381865afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610737919061098a565b1561075f57507f00000000000000000000000000000000000000000000000000000000000000005b919050565b61076c61081b565b73ffffffffffffffffffffffffffffffffffffffff811661080f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610316565b6108188161089c565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610316565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461075f57600080fd5b6000806040838503121561094857600080fd5b61095183610911565b915061095f60208401610911565b90509250929050565b60006020828403121561097a57600080fd5b61098382610911565b9392505050565b60006020828403121561099c57600080fd5b8151801515811461098357600080fdfea26469706673582212208b6b33f029138aa5672cad8e4e5318625a04557372a7024769cd9b4a4f10420364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xCC159493 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xB1357DDD EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x38928956 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x38928956 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x4216A753 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x7053FB79 EQ PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x25C6A895 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xE3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x935 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10A PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x137 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x167 JUMP JUMPDEST PUSH2 0x167 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x10A PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x764 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x81B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x31F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20436F6C6C656374696F6E2063616E6E6F74206265206E756C6C206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E736665724D616E616765722063616E6E6F74206265206E756C6C2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xDA166BE6BA0EBB71BE3F83E7D669765DE552EA08978BFE3E3E42D54174111B62 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x446 PUSH2 0x81B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C656374696F6E20686173206E6F207472616E73666572206D616E6167 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x316 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE MLOAD PUSH32 0x8C3BF4BABC197F3DB0E7EC65AAF23FC0EFB0E689436AEEA8514C3F01FD97841F SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x576 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x580 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 PUSH2 0x75F JUMPI PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x639 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST ISZERO PUSH2 0x689 JUMPI POP PUSH32 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x713 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST ISZERO PUSH2 0x75F JUMPI POP PUSH32 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76C PUSH2 0x81B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x80F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x316 JUMP JUMPDEST PUSH2 0x818 DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x316 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x948 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x951 DUP4 PUSH2 0x911 JUMP JUMPDEST SWAP2 POP PUSH2 0x95F PUSH1 0x20 DUP5 ADD PUSH2 0x911 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x983 DUP3 PUSH2 0x911 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH12 0x33F029138AA5672CAD8E4E53 XOR PUSH3 0x5A0455 PUSH20 0x72A7024769CD9B4A4F10420364736F6C63430008 GT STOP CALLER ",
							"sourceMap": "287:3025:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:507;;;;;;:::i;:::-;;:::i;:::-;;468:56;;;;;;;;654:66:5;642:79;;;624:98;;612:2;597:18;468:56:3;;;;;;;;651:49;;;;;;;;909:42:5;897:55;;;879:74;;867:2;852:18;651:49:3;733:226:5;738:71:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2145:372;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1201:85::-;1247:7;1273:6;;;1201:85;;559:48:3;;;;;380:55;;;;;2576:734;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1466:507:3:-;1094:13:0;:11;:13::i;:::-;1586:24:3::1;::::0;::::1;1578:71;;;::::0;::::1;::::0;;1357:2:5;1578:71:3::1;::::0;::::1;1339:21:5::0;1396:2;1376:18;;;1369:30;1435:34;1415:18;;;1408:62;1506:4;1486:18;;;1479:32;1528:19;;1578:71:3::1;;;;;;;;;1667:29;::::0;::::1;1659:80;;;::::0;::::1;::::0;;1760:2:5;1659:80:3::1;::::0;::::1;1742:21:5::0;1799:2;1779:18;;;1772:30;1838:34;1818:18;;;1811:62;1909:8;1889:18;;;1882:36;1935:19;;1659:80:3::1;1558:402:5::0;1659:80:3::1;1825:48;::::0;;::::1;;::::0;;;:36:::1;:48;::::0;;;;;:66;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;1907:59;::::1;::::0;1825:48;1907:59:::1;1466:507:::0;;:::o;2145:372::-;1094:13:0;:11;:13::i;:::-;2256:62:3::1;:48:::0;;::::1;2316:1;2256:48:::0;;;:36:::1;:48;::::0;;;;;::::1;2235:143;;;::::0;::::1;::::0;;2167:2:5;2235:143:3::1;::::0;::::1;2149:21:5::0;2206:2;2186:18;;;2179:30;2245:34;2225:18;;;2218:62;2316:4;2296:18;;;2289:32;2338:19;;2235:143:3::1;1965:398:5::0;2235:143:3::1;2389:48;::::0;::::1;2448:1;2389:48:::0;;;:36:::1;:48;::::0;;;;;:61;;;::::1;::::0;;2466:44;::::1;::::0;2448:1;2466:44:::1;2145:372:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2576:734:3:-;2783:48;;;;2666:23;2783:48;;;:36;:48;;;;;;;;2928:343;;2981:58;;;;;3019:19;2981:58;;;624:98:5;2981:37:3;;;;;;597:18:5;;2981:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2977:284;;;-1:-1:-1;3077:23:3;2576:734;;;:::o;2977:284::-;3125:59;;;;;3163:20;3125:59;;;624:98:5;3125:37:3;;;;;;597:18:5;;3125:59:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3121:140;;;-1:-1:-1;3222:24:3;3121:140;2576:734;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;2852:2:5;2161:73:0::1;::::0;::::1;2834:21:5::0;2891:2;2871:18;;;2864:30;2930:34;2910:18;;;2903:62;3001:8;2981:18;;;2974:36;3027:19;;2161:73:0::1;2650:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:1;1422:23:0;1414:68;;;;;;;3259:2:5;1414:68:0;;;3241:21:5;;;3278:18;;;3271:30;3337:34;3317:18;;;3310:62;3389:18;;1414:68:0;3057:356:5;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:196:5:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;215:260;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;;431:38;465:2;454:9;450:18;431:38;:::i;:::-;421:48;;215:260;;;;;:::o;964:186::-;1023:6;1076:2;1064:9;1055:7;1051:23;1047:32;1044:52;;;1092:1;1089;1082:12;1044:52;1115:29;1134:9;1115:29;:::i;:::-;1105:39;964:186;-1:-1:-1;;;964:186:5:o;2368:277::-;2435:6;2488:2;2476:9;2467:7;2463:23;2459:32;2456:52;;;2504:1;2501;2494:12;2456:52;2536:9;2530:16;2589:5;2582:13;2575:21;2568:5;2565:32;2555:60;;2611:1;2608;2601:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "506000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "239",
								"INTERFACE_ID_ERC721()": "215",
								"TRANSFER_MANAGER_ERC1155()": "infinite",
								"TRANSFER_MANAGER_ERC721()": "infinite",
								"addCollectionTransferManager(address,address)": "infinite",
								"checkTransferManagerForToken(address)": "infinite",
								"owner()": "2352",
								"removeCollectionTransferManager(address)": "30139",
								"renounceOwnership()": "infinite",
								"transferManagerSelectorForCollection(address)": "2567",
								"transferOwnership(address)": "28336"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "C0"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1058,
									"end": 1260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1058,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1145,
									"end": 1193,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1145,
									"end": 1193,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1145,
									"end": 1193,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1145,
									"end": 1193,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1145,
									"end": 1193,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1203,
									"end": 1253,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1203,
									"end": 1253,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 1203,
									"end": 1253,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "168"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "166"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 3312,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b6b33f029138aa5672cad8e4e5318625a04557372a7024769cd9b4a4f10420364736f6c63430008110033",
									".code": [
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "BC6BC0CD"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "BC6BC0CD"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "CC159493"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "B1357DDD"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "38928956"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "38928956"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "4216A753"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "7053FB79"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "25C6A895"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "33BF6156"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 3312,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1466,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 468,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 468,
											"end": 524,
											"name": "PUSH",
											"source": 3,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 468,
											"end": 524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 468,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 642,
											"end": 721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 642,
											"end": 721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 642,
											"end": 721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 624,
											"end": 722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 612,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 468,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 468,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 468,
											"end": 524,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 651,
											"end": 700,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 651,
											"end": 700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 651,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 651,
											"end": 700,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 651,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 651,
											"end": 700,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 651,
											"end": 700,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 651,
											"end": 700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 651,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 700,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 909,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 897,
											"end": 952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 897,
											"end": 952,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 879,
											"end": 953,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 879,
											"end": 953,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 651,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 733,
											"end": 959,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 738,
											"end": 809,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 738,
											"end": 809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 809,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 738,
											"end": 809,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2145,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2145,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 607,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 559,
											"end": 607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 559,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 559,
											"end": 607,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 559,
											"end": 607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 559,
											"end": 607,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 380,
											"end": 435,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2576,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2576,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1610,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1586,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1649,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1578,
											"end": 1649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1357,
											"end": 1359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1578,
											"end": 1649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1398,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1369,
											"end": 1399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1469,
											"name": "PUSH",
											"source": 5,
											"value": "20436F6C6C656374696F6E2063616E6E6F74206265206E756C6C206164647265"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1511,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1547,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1528,
											"end": 1547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1578,
											"end": 1649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1667,
											"end": 1696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1739,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1659,
											"end": 1739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1659,
											"end": 1739,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1763,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1802,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1872,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E736665724D616E616765722063616E6E6F74206265206E756C6C2061"
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1917,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1935,
											"end": 1954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1558,
											"end": 1960,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1659,
											"end": 1739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1861,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1825,
											"end": 1873,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1825,
											"end": 1891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1891,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1966,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "DA166BE6BA0EBB71BE3F83E7D669765DE552EA08978BFE3E3E42D54174111B62"
										},
										{
											"begin": 1907,
											"end": 1966,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1873,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1966,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1466,
											"end": 1973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2256,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2304,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2378,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2235,
											"end": 2378,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2378,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2169,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2378,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2208,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2279,
											"name": "PUSH",
											"source": 5,
											"value": "436F6C6C656374696F6E20686173206E6F207472616E73666572206D616E6167"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2316,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2357,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2338,
											"end": 2357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1965,
											"end": 2363,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2389,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2437,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2450,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2450,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2389,
											"end": 2450,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2450,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C3BF4BABC197F3DB0E7EC65AAF23FC0EFB0E689436AEEA8514C3F01FD97841F"
										},
										{
											"begin": 2466,
											"end": 2510,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2510,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2666,
											"end": 2689,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2819,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2928,
											"end": 3271,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3038,
											"name": "PUSH",
											"source": 3,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 624,
											"end": 722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 2981,
											"end": 3018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 615,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2981,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2981,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3261,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2977,
											"end": 3261,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3077,
											"end": 3100,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3261,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2977,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3183,
											"name": "PUSH",
											"source": 3,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 624,
											"end": 722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A7"
										},
										{
											"begin": 3125,
											"end": 3162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 597,
											"end": 615,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3125,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3125,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3261,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3121,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3121,
											"end": 3261,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3246,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3121,
											"end": 3261,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3121,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2576,
											"end": 3310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2852,
											"end": 2854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2855,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2893,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2964,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2903,
											"end": 2965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3009,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3010,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3046,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3027,
											"end": 3046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2650,
											"end": 3052,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3296,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3278,
											"end": 3296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3271,
											"end": 3301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3371,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3057,
											"end": 3413,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 215,
											"end": 475,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 215,
											"end": 475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 283,
											"end": 289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 344,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 323,
											"end": 330,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 319,
											"end": 342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 315,
											"end": 347,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 312,
											"end": 364,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 312,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 360,
											"end": 361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 350,
											"end": 362,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 312,
											"end": 364,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 402,
											"end": 411,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 383,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 412,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 373,
											"end": 412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 431,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 465,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 450,
											"end": 468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 431,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 431,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 431,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 431,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 421,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 421,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 215,
											"end": 475,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 215,
											"end": 475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 215,
											"end": 475,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 215,
											"end": 475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 215,
											"end": 475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 215,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 964,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1079,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1044,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1115,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1144,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1115,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1144,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 964,
											"end": 1150,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 964,
											"end": 1150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2645,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2368,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2476,
											"end": 2485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2486,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2459,
											"end": 2491,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2530,
											"end": 2546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2595,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2596,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2597,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2555,
											"end": 2615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2613,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/TransferSelectorNFT.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"TRANSFER_MANAGER_ERC1155()": "38928956",
							"TRANSFER_MANAGER_ERC721()": "b1357ddd",
							"addCollectionTransferManager(address,address)": "25c6a895",
							"checkTransferManagerForToken(address)": "cc159493",
							"owner()": "8da5cb5b",
							"removeCollectionTransferManager(address)": "7053fb79",
							"renounceOwnership()": "715018a6",
							"transferManagerSelectorForCollection(address)": "4216a753",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transferManagerERC721\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_transferManagerERC1155\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"name\":\"CollectionTransferManagerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"CollectionTransferManagerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC1155\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_MANAGER_ERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"name\":\"addCollectionTransferManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkTransferManagerForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"transferManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"removeCollectionTransferManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transferManagerSelectorForCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/TransferSelectorNFT.sol\":\"TransferSelectorNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/TransferSelectorNFT.sol\":{\"keccak256\":\"0x2be07757270da8dcdb055a11c2632f35df8f7c30ea95435f06ffb8528ebeb7bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85ef48b799275340c022d25eceed6cfd858a52771d92083a587b1df3df32f67\",\"dweb:/ipfs/QmWKBVwRE9p1Bxwq38QYnheR8abXkbWwwanw3hRskKw4JD\"]},\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":{\"keccak256\":\"0x4c44c47a857835829df5a06aea7d339301f92d6805f07032db6f3ef63b3da306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3397572d8c7f5844d8102851e780c41f8e5b49be6ed43e6f18716dd2fa7fb21b\",\"dweb:/ipfs/QmaxUjtd7Pg7banAzc6AUqcgXEsumHkkqw6XFYgXx14aHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/TransferSelectorNFT.sol:TransferSelectorNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 172,
								"contract": "contracts/Manager/TransferSelectorNFT.sol:TransferSelectorNFT",
								"label": "transferManagerSelectorForCollection",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"TheTransferSelector": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkTransferManagerForToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkTransferManagerForToken(address)": "cc159493"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkTransferManagerForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":\"TheTransferSelector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":{\"keccak256\":\"0x4c44c47a857835829df5a06aea7d339301f92d6805f07032db6f3ef63b3da306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3397572d8c7f5844d8102851e780c41f8e5b49be6ed43e6f18716dd2fa7fb21b\",\"dweb:/ipfs/QmaxUjtd7Pg7banAzc6AUqcgXEsumHkkqw6XFYgXx14aHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 146,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"contracts/Manager/TransferSelectorNFT.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/TransferSelectorNFT.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						],
						"Ownable": [
							112
						],
						"TheTransferSelector": [
							332
						],
						"TransferSelectorNFT": [
							322
						]
					},
					"id": 323,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 113,
							"src": "57:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 147,
							"src": "125:80:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 151,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 146,
										"src": "133:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/trans/interface/TheTransFerSelector.sol",
							"file": "./trans/interface/TheTransFerSelector.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 323,
							"sourceUnit": 333,
							"src": "207:78:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 153,
										"name": "TheTransferSelector",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 332,
										"src": "215:19:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "TheTransferSelector",
										"nameLocations": [
											"319:19:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 332,
										"src": "319:19:3"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "319:19:3"
								},
								{
									"baseName": {
										"id": 157,
										"name": "Ownable",
										"nameLocations": [
											"340:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "340:7:3"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "340:7:3"
								}
							],
							"canonicalName": "TransferSelectorNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 322,
							"linearizedBaseContracts": [
								322,
								112,
								134,
								332
							],
							"name": "TransferSelectorNFT",
							"nameLocation": "296:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 161,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "403:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "380:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 159,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "380:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "425:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 164,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "491:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "468:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 162,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "468:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "514:10:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1357ddd",
									"id": 166,
									"mutability": "immutable",
									"name": "TRANSFER_MANAGER_ERC721",
									"nameLocation": "584:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "559:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38928956",
									"id": 168,
									"mutability": "immutable",
									"name": "TRANSFER_MANAGER_ERC1155",
									"nameLocation": "676:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "651:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 167,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4216a753",
									"id": 172,
									"mutability": "mutable",
									"name": "transferManagerSelectorForCollection",
									"nameLocation": "773:36:3",
									"nodeType": "VariableDeclaration",
									"scope": 322,
									"src": "738:71:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 171,
										"keyType": {
											"id": 169,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "746:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "738:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "757:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "da166be6ba0ebb71be3f83e7d669765de552ea08978bfe3e3e42d54174111b62",
									"id": 178,
									"name": "CollectionTransferManagerAdded",
									"nameLocation": "822:30:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "869:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "853:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "transferManager",
												"nameLocation": "897:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "881:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:61:3"
									},
									"src": "816:98:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8c3bf4babc197f3db0e7ec65aaf23fc0efb0e689436aeea8514c3f01fd97841f",
									"id": 182,
									"name": "CollectionTransferManagerRemoved",
									"nameLocation": "925:32:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "974:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "958:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:28:3"
									},
									"src": "919:67:3"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1135:125:3",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "TRANSFER_MANAGER_ERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1145:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 190,
														"name": "_transferManagerERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "1171:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1145:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "1145:48:3"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "TRANSFER_MANAGER_ERC1155",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1203:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 194,
														"name": "_transferManagerERC1155",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1230:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1203:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1203:50:3"
											}
										]
									},
									"id": 198,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_transferManagerERC721",
												"nameLocation": "1078:22:3",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1070:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "_transferManagerERC1155",
												"nameLocation": "1110:23:3",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1102:31:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:65:3"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1135:0:3"
									},
									"scope": 322,
									"src": "1058:202:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1568:405:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "collection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1586:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1608:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1600:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 209,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1600:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1600:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1586:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20436f6c6c656374696f6e2063616e6e6f74206265206e756c6c2061646472657373",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1612:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_143e774f04588be005b913fd46455b3258b959ce60e774d00ea14fad122814b9",
																"typeString": "literal_string \" Collection cannot be null address\""
															},
															"value": " Collection cannot be null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_143e774f04588be005b913fd46455b3258b959ce60e774d00ea14fad122814b9",
																"typeString": "literal_string \" Collection cannot be null address\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1578:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1578:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1578:71:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 218,
																"name": "transferManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "1667:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1694:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1686:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 219,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1686:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1686:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1667:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665724d616e616765722063616e6e6f74206265206e756c6c2061646472657373",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b1a3f606f6fccb074e6148f7e2515983e0e117c6ed56b219e6e79b336e2bae9c",
																"typeString": "literal_string \"TransferManager cannot be null address\""
															},
															"value": "TransferManager cannot be null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b1a3f606f6fccb074e6148f7e2515983e0e117c6ed56b219e6e79b336e2bae9c",
																"typeString": "literal_string \"TransferManager cannot be null address\""
															}
														],
														"id": 217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1659:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1659:80:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1659:80:3"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 227,
															"name": "transferManagerSelectorForCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "1825:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 229,
														"indexExpression": {
															"id": 228,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1862:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1825:48:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "transferManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "1876:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1825:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1825:66:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 234,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1938:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "transferManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "1950:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "CollectionTransferManagerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "1907:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "EmitStatement",
												"src": "1902:64:3"
											}
										]
									},
									"functionSelector": "25c6a895",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 204,
												"name": "onlyOwner",
												"nameLocations": [
													"1558:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1558:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1558:9:3"
										}
									],
									"name": "addCollectionTransferManager",
									"nameLocation": "1475:28:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1512:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1504:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1504:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "transferManager",
												"nameLocation": "1532:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1524:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1503:45:3"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1568:0:3"
									},
									"scope": 322,
									"src": "1466:507:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "2225:292:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 247,
																	"name": "transferManagerSelectorForCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "2256:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 249,
																"indexExpression": {
																	"id": 248,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "2293:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2256:48:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2316:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2308:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 250,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2308:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2308:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2256:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c656374696f6e20686173206e6f207472616e73666572206d616e61676572",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2332:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_840fc9424318c1b0da18c5496aafd5971f152438e2e75bfe421990c84f300d21",
																"typeString": "literal_string \"Collection has no transfer manager\""
															},
															"value": "Collection has no transfer manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_840fc9424318c1b0da18c5496aafd5971f152438e2e75bfe421990c84f300d21",
																"typeString": "literal_string \"Collection has no transfer manager\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2235:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:143:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "2235:143:3"
											},
											{
												"expression": {
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 258,
															"name": "transferManagerSelectorForCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2389:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 260,
														"indexExpression": {
															"id": 259,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2426:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2389:48:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2448:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2440:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 261,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2440:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2440:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2389:61:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "2389:61:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 268,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2499:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "CollectionTransferManagerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2466:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "EmitStatement",
												"src": "2461:49:3"
											}
										]
									},
									"functionSelector": "7053fb79",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 243,
												"name": "onlyOwner",
												"nameLocations": [
													"2215:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2215:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2215:9:3"
										}
									],
									"name": "removeCollectionTransferManager",
									"nameLocation": "2154:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2194:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "2186:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:20:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:0:3"
									},
									"scope": 322,
									"src": "2145:372:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										331
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "2691:619:3",
										"statements": [
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "transferManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2765:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 281,
															"name": "transferManagerSelectorForCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2783:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 283,
														"indexExpression": {
															"id": 282,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "2820:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2783:48:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2765:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "2765:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 286,
														"name": "transferManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "2932:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2959:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2951:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 287,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2951:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2951:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2932:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "2928:343:3",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "2963:308:3",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"id": 296,
																		"name": "INTERFACE_ID_ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3019:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 293,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "2989:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 292,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "2981:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2981:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3001:17:3",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "2981:37:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2981:58:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"arguments": [
																		{
																			"id": 307,
																			"name": "INTERFACE_ID_ERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "3163:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 304,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 274,
																					"src": "3133:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 303,
																				"name": "IERC165",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "3125:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																					"typeString": "type(contract IERC165)"
																				}
																			},
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3125:19:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC165_$146",
																				"typeString": "contract IERC165"
																			}
																		},
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3145:17:3",
																		"memberName": "supportsInterface",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 145,
																		"src": "3125:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																			"typeString": "function (bytes4) view external returns (bool)"
																		}
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3125:59:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 314,
																"nodeType": "IfStatement",
																"src": "3121:140:3",
																"trueBody": {
																	"id": 313,
																	"nodeType": "Block",
																	"src": "3186:75:3",
																	"statements": [
																		{
																			"expression": {
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 309,
																					"name": "transferManager",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 278,
																					"src": "3204:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 310,
																					"name": "TRANSFER_MANAGER_ERC1155",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 168,
																					"src": "3222:24:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "3204:42:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 312,
																			"nodeType": "ExpressionStatement",
																			"src": "3204:42:3"
																		}
																	]
																}
															},
															"id": 315,
															"nodeType": "IfStatement",
															"src": "2977:284:3",
															"trueBody": {
																"id": 302,
																"nodeType": "Block",
																"src": "3041:74:3",
																"statements": [
																	{
																		"expression": {
																			"id": 300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 298,
																				"name": "transferManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3059:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 299,
																				"name": "TRANSFER_MANAGER_ERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 166,
																				"src": "3077:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3059:41:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 301,
																		"nodeType": "ExpressionStatement",
																		"src": "3059:41:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 318,
													"name": "transferManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 278,
													"src": "3288:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 279,
												"id": 319,
												"nodeType": "Return",
												"src": "3281:22:3"
											}
										]
									},
									"functionSelector": "cc159493",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkTransferManagerForToken",
									"nameLocation": "2585:28:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 276,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2648:8:3"
									},
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2622:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2614:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:20:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "transferManager",
												"nameLocation": "2674:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "2666:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:25:3"
									},
									"scope": 322,
									"src": "2576:734:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 323,
							"src": "287:3025:3",
							"usedErrors": []
						}
					],
					"src": "32:3281:3"
				},
				"id": 3
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/trans/interface/TheTransFerSelector.sol",
					"exportedSymbols": {
						"TheTransferSelector": [
							332
						]
					},
					"id": 333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 324,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheTransferSelector",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 332,
							"linearizedBaseContracts": [
								332
							],
							"name": "TheTransferSelector",
							"nameLocation": "67:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cc159493",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkTransferManagerForToken",
									"nameLocation": "102:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "139:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "131:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "131:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "130:20:4"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "174:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:9:4"
									},
									"scope": 332,
									"src": "93:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 333,
							"src": "57:128:4",
							"usedErrors": []
						}
					],
					"src": "32:154:4"
				},
				"id": 4
			}
		}
	}
}