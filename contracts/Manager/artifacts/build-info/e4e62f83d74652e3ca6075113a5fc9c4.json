{
	"id": "e4e62f83d74652e3ca6075113a5fc9c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/RoyaltyFeeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC165, IERC2981} from \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\n\nimport {TheRoyaltyManager} from \"./interface/TheRoyaltyFeeManager.sol\";\nimport {IRoyaltyFeeRegistry} from \"./royalty/interface/IRoyaltyFeeRegistry.sol\";\n\n/**\n * @title RoyaltyFeeManager\n * @notice It handles the logic to check and transfer royalty fees (if any).\n */\ncontract RoyaltyFeeManager is TheRoyaltyManager, Ownable {\n    // https://eips.ethereum.org/EIPS/eip-2981\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    IRoyaltyFeeRegistry public immutable royaltyFeeRegistry;\n\n    //  initialize a royalty fee registry\n    constructor(address _royaltyFeeRegistry) {\n        royaltyFeeRegistry = IRoyaltyFeeRegistry(_royaltyFeeRegistry);\n    }\n\n    //\n    // function calculateRoyaltyFeeAndGetRecipient\n    //  @Description: Calculate royalty fee and return the fee recepient\n    //  @param address\n    //  @param uint256\n    //  @param uint256\n    //  @return external\n    //\n    function calculateRoyaltyFeeAndGetRecipient(\n        address collection,\n        uint256 tokenId,\n        uint256 amount\n    ) external view override returns (address, uint256) {\n        //  Check if the royalty fee informatoin has been registered\n        (address receiver, uint256 royaltyAmount) = royaltyFeeRegistry.royaltyInfo(collection, amount);\n\n        // If both the receipient's address is blank and the fee is 0, check if ERC 2981 API is supported\n        if ((receiver == address(0)) || (royaltyAmount == 0)) {\n            if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981)) {\n                (receiver, royaltyAmount) = IERC2981(collection).royaltyInfo(tokenId, amount);\n            }\n        }\n        return (receiver, royaltyAmount);\n    }\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n  \n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheRoyaltyManager {\n    function calculateRoyaltyFeeAndGetRecipient(\n        address collection,\n        uint256 tokenId,\n        uint256 amount\n    ) external view returns (address, uint256);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n *\n * _Available since v4.5._\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice)\n        external\n        view\n        returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/RoyaltyFeeManager.sol": {
				"RoyaltyFeeManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royaltyFeeRegistry",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateRoyaltyFeeAndGetRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeRegistry",
							"outputs": [
								{
									"internalType": "contract IRoyaltyFeeRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "RoyaltyFeeManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/RoyaltyFeeManager.sol\":476:1880  contract RoyaltyFeeManager is TheRoyaltyManager, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/RoyaltyFeeManager.sol\":753:872  constructor(address _royaltyFeeRegistry) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Manager/RoyaltyFeeManager.sol\":804:865  royaltyFeeRegistry = IRoyaltyFeeRegistry(_royaltyFeeRegistry) */\n  and\n  0x80\n  mstore\n    /* \"contracts/Manager/RoyaltyFeeManager.sol\":476:1880  contract RoyaltyFeeManager is TheRoyaltyManager, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/Manager/RoyaltyFeeManager.sol\":476:1880  contract RoyaltyFeeManager is TheRoyaltyManager, Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":476:1880  contract RoyaltyFeeManager is TheRoyaltyManager, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb060dd86\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc16f5156\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf4f635fa\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_4:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":586:642  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_5:\n      tag_15\n      shl(0xe1, 0x152a902d)\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":384:417   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":366:418   */\n      dup2\n      mstore\n        /* \"#utility.yul\":354:356   */\n      0x20\n        /* \"#utility.yul\":339:357   */\n      add\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":586:642  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n      tag_13\n        /* \"#utility.yul\":222:424   */\n      jump\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":649:704  IRoyaltyFeeRegistry public immutable royaltyFeeRegistry */\n    tag_6:\n      tag_11\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_9\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1110:1878  function calculateRoyaltyFeeAndGetRecipient(... */\n    tag_8:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1632:1664   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":1614:1665   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1696:1698   */\n      0x20\n        /* \"#utility.yul\":1681:1699   */\n      dup4\n      add\n        /* \"#utility.yul\":1674:1708   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1587:1605   */\n      add\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1110:1878  function calculateRoyaltyFeeAndGetRecipient(... */\n      tag_13\n        /* \"#utility.yul\":1440:1714   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1921:1923   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1903:1924   */\n      mstore\n        /* \"#utility.yul\":1960:1962   */\n      0x26\n        /* \"#utility.yul\":1940:1958   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1933:1963   */\n      mstore\n        /* \"#utility.yul\":1999:2033   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1979:1997   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1972:2034   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2050:2068   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2043:2079   */\n      mstore\n        /* \"#utility.yul\":2096:2115   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1110:1878  function calculateRoyaltyFeeAndGetRecipient(... */\n    tag_30:\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1410:1460  royaltyFeeRegistry.royaltyInfo(collection, amount) */\n      mload(0x40)\n      shl(0xe0, 0x2782d6c7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1632:1664   */\n      dup5\n      dup2\n      and\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1410:1460  royaltyFeeRegistry.royaltyInfo(collection, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1614:1665   */\n      mstore\n        /* \"#utility.yul\":1681:1699   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1674:1708   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1269:1276  address */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1410:1428  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1410:1440  royaltyFeeRegistry.royaltyInfo */\n      and\n      swap1\n      0x2782d6c7\n      swap1\n        /* \"#utility.yul\":1587:1605   */\n      0x44\n      add\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1410:1460  royaltyFeeRegistry.royaltyInfo(collection, amount) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1366:1460  (address receiver, uint256 royaltyAmount) = royaltyFeeRegistry.royaltyInfo(collection, amount) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1582:1604  receiver == address(0) */\n      dup3\n      and\n      iszero\n      dup1\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1581:1629  (receiver == address(0)) || (royaltyAmount == 0) */\n      tag_53\n      jumpi\n      pop\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1610:1628  royaltyAmount == 0 */\n      dup1\n      iszero\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1581:1629  (receiver == address(0)) || (royaltyAmount == 0) */\n    tag_53:\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1577:1830  if ((receiver == address(0)) || (royaltyAmount == 0)) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1649:1708  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      shl(0xe1, 0x152a902d)\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":366:418   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1649:1686  IERC165(collection).supportsInterface */\n      dup9\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":339:357   */\n      0x24\n      add\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1649:1708  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1645:1820  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981)) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1756:1805  IERC2981(collection).royaltyInfo(tokenId, amount) */\n      mload(0x40)\n      shl(0xe1, 0x152a902d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2899:2924   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":2940:2958   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2933:2967   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1756:1788  IERC2981(collection).royaltyInfo */\n      dup9\n      and\n      swap1\n      0x2a55205a\n      swap1\n        /* \"#utility.yul\":2872:2890   */\n      0x44\n      add\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1756:1805  IERC2981(collection).royaltyInfo(tokenId, amount) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_65:\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1728:1805  (receiver, royaltyAmount) = IERC2981(collection).royaltyInfo(tokenId, amount) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1645:1820  if (IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981)) {... */\n    tag_60:\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1847:1855  receiver */\n      swap1\n      swap7\n      swap1\n      swap6\n      pop\n        /* \"contracts/Manager/RoyaltyFeeManager.sol\":1110:1878  function calculateRoyaltyFeeAndGetRecipient(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3180:3182   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3162:3183   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3199:3217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3192:3222   */\n      mstore\n        /* \"#utility.yul\":3258:3292   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3238:3256   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3231:3293   */\n      mstore\n        /* \"#utility.yul\":3310:3328   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_44\n        /* \"#utility.yul\":2978:3334   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":664:795   */\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":739:770   */\n      dup2\n      and\n        /* \"#utility.yul\":729:771   */\n      dup2\n      eq\n        /* \"#utility.yul\":719:789   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":785:786   */\n      0x00\n        /* \"#utility.yul\":782:783   */\n      dup1\n        /* \"#utility.yul\":775:787   */\n      revert\n        /* \"#utility.yul\":800:1047   */\n    tag_25:\n        /* \"#utility.yul\":859:865   */\n      0x00\n        /* \"#utility.yul\":912:914   */\n      0x20\n        /* \"#utility.yul\":900:909   */\n      dup3\n        /* \"#utility.yul\":891:898   */\n      dup5\n        /* \"#utility.yul\":887:910   */\n      sub\n        /* \"#utility.yul\":883:915   */\n      slt\n        /* \"#utility.yul\":880:932   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":928:929   */\n      0x00\n        /* \"#utility.yul\":925:926   */\n      dup1\n        /* \"#utility.yul\":918:930   */\n      revert\n        /* \"#utility.yul\":880:932   */\n    tag_83:\n        /* \"#utility.yul\":967:976   */\n      dup2\n        /* \"#utility.yul\":954:977   */\n      calldataload\n        /* \"#utility.yul\":986:1017   */\n      tag_84\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":986:1017   */\n      tag_75\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1036:1041   */\n      swap4\n        /* \"#utility.yul\":800:1047   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1435   */\n    tag_29:\n        /* \"#utility.yul\":1129:1135   */\n      0x00\n        /* \"#utility.yul\":1137:1143   */\n      dup1\n        /* \"#utility.yul\":1145:1151   */\n      0x00\n        /* \"#utility.yul\":1198:1200   */\n      0x60\n        /* \"#utility.yul\":1186:1195   */\n      dup5\n        /* \"#utility.yul\":1177:1184   */\n      dup7\n        /* \"#utility.yul\":1173:1196   */\n      sub\n        /* \"#utility.yul\":1169:1201   */\n      slt\n        /* \"#utility.yul\":1166:1218   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1214:1215   */\n      0x00\n        /* \"#utility.yul\":1211:1212   */\n      dup1\n        /* \"#utility.yul\":1204:1216   */\n      revert\n        /* \"#utility.yul\":1166:1218   */\n    tag_86:\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1240:1263   */\n      calldataload\n        /* \"#utility.yul\":1272:1303   */\n      tag_87\n        /* \"#utility.yul\":1297:1302   */\n      dup2\n        /* \"#utility.yul\":1272:1303   */\n      tag_75\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1322:1327   */\n      swap6\n        /* \"#utility.yul\":1374:1376   */\n      0x20\n        /* \"#utility.yul\":1359:1377   */\n      dup6\n      add\n        /* \"#utility.yul\":1346:1378   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1425:1427   */\n      0x40\n        /* \"#utility.yul\":1410:1428   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1397:1429   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1052:1435   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2438   */\n    tag_52:\n        /* \"#utility.yul\":2205:2211   */\n      0x00\n        /* \"#utility.yul\":2213:2219   */\n      dup1\n        /* \"#utility.yul\":2266:2268   */\n      0x40\n        /* \"#utility.yul\":2254:2263   */\n      dup4\n        /* \"#utility.yul\":2245:2252   */\n      dup6\n        /* \"#utility.yul\":2241:2264   */\n      sub\n        /* \"#utility.yul\":2237:2269   */\n      slt\n        /* \"#utility.yul\":2234:2286   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2282:2283   */\n      0x00\n        /* \"#utility.yul\":2279:2280   */\n      dup1\n        /* \"#utility.yul\":2272:2284   */\n      revert\n        /* \"#utility.yul\":2234:2286   */\n    tag_91:\n        /* \"#utility.yul\":2314:2323   */\n      dup3\n        /* \"#utility.yul\":2308:2324   */\n      mload\n        /* \"#utility.yul\":2333:2364   */\n      tag_92\n        /* \"#utility.yul\":2358:2363   */\n      dup2\n        /* \"#utility.yul\":2333:2364   */\n      tag_75\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2428:2430   */\n      0x20\n        /* \"#utility.yul\":2413:2431   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2407:2432   */\n      mload\n        /* \"#utility.yul\":2383:2388   */\n      swap3\n      swap5\n        /* \"#utility.yul\":2407:2432   */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2126:2438   */\n      jump\t// out\n        /* \"#utility.yul\":2443:2720   */\n    tag_59:\n        /* \"#utility.yul\":2510:2516   */\n      0x00\n        /* \"#utility.yul\":2563:2565   */\n      0x20\n        /* \"#utility.yul\":2551:2560   */\n      dup3\n        /* \"#utility.yul\":2542:2549   */\n      dup5\n        /* \"#utility.yul\":2538:2561   */\n      sub\n        /* \"#utility.yul\":2534:2566   */\n      slt\n        /* \"#utility.yul\":2531:2583   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2579:2580   */\n      0x00\n        /* \"#utility.yul\":2576:2577   */\n      dup1\n        /* \"#utility.yul\":2569:2581   */\n      revert\n        /* \"#utility.yul\":2531:2583   */\n    tag_94:\n        /* \"#utility.yul\":2611:2620   */\n      dup2\n        /* \"#utility.yul\":2605:2621   */\n      mload\n        /* \"#utility.yul\":2664:2669   */\n      dup1\n        /* \"#utility.yul\":2657:2670   */\n      iszero\n        /* \"#utility.yul\":2650:2671   */\n      iszero\n        /* \"#utility.yul\":2643:2648   */\n      dup2\n        /* \"#utility.yul\":2640:2672   */\n      eq\n        /* \"#utility.yul\":2630:2690   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2683:2684   */\n      dup1\n        /* \"#utility.yul\":2676:2688   */\n      revert\n\n    auxdata: 0xa2646970667358221220c08df90d5b4c1ba9ca799f122e19f222cea0d9375302e3ddd5fdc845b1f94f1c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 73,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:7"
															},
															"nodeType": "YulIf",
															"src": "105:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:7"
															},
															"nodeType": "YulIf",
															"src": "204:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:7",
														"type": ""
													}
												],
												"src": "14:290:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b506040516105f43803806105f483398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b60805161050a6100ea6000396000818160c701526101ef015261050a6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063b060dd861461009b578063c16f5156146100c2578063f2fde38b146100e9578063f4f635fa146100fc575b600080fd5b61006f61012e565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a963152a902d60e11b81565b6040516001600160e01b03199091168152602001610092565b61007e7f000000000000000000000000000000000000000000000000000000000000000081565b61006f6100f736600461042b565b610142565b61010f61010a36600461044f565b6101c0565b604080516001600160a01b039093168352602083019190915201610092565b61013661036c565b61014060006103c6565b565b61014a61036c565b6001600160a01b0381166101b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101bd816103c6565b50565b604051632782d6c760e01b81526001600160a01b038481166004830152602482018390526000918291829182917f00000000000000000000000000000000000000000000000000000000000000001690632782d6c7906044016040805180830381865afa158015610235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102599190610484565b90925090506001600160a01b0382161580610272575080155b15610360576040516301ffc9a760e01b815263152a902d60e11b60048201526001600160a01b038816906301ffc9a790602401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e691906104b2565b156103605760405163152a902d60e11b815260048101879052602481018690526001600160a01b03881690632a55205a906044016040805180830381865afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610484565b90925090505b90969095509350505050565b6000546001600160a01b031633146101405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101bd57600080fd5b60006020828403121561043d57600080fd5b813561044881610416565b9392505050565b60008060006060848603121561046457600080fd5b833561046f81610416565b95602085013595506040909401359392505050565b6000806040838503121561049757600080fd5b82516104a281610416565b6020939093015192949293505050565b6000602082840312156104c457600080fd5b8151801515811461044857600080fdfea2646970667358221220c08df90d5b4c1ba9ca799f122e19f222cea0d9375302e3ddd5fdc845b1f94f1c64736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F4 CODESIZE SUB DUP1 PUSH2 0x5F4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x99 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x50A PUSH2 0xEA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xC7 ADD MSTORE PUSH2 0x1EF ADD MSTORE PUSH2 0x50A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xC16F5156 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xF4F635FA EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x92 JUMP JUMPDEST PUSH2 0x7E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x44F JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x92 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x140 PUSH1 0x0 PUSH2 0x3C6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14A PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BD DUP2 PUSH2 0x3C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2782D6C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x2782D6C7 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x272 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x152A902D PUSH1 0xE1 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x4B2 JUMP JUMPDEST ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x2A55205A SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x448 DUP2 PUSH2 0x416 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0x416 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x4A2 DUP2 PUSH2 0x416 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 DUP14 0xF9 0xD JUMPDEST 0x4C SHL 0xA9 0xCA PUSH26 0x9F122E19F222CEA0D9375302E3DDD5FDC845B1F94F1C64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "476:1404:4:-:0;;;753:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:2;936:18:0;:32::i;:::-;-1:-1:-1;;;;;804:61:4;;;476:1404;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;:::-;476:1404:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC2981_184": {
									"entryPoint": null,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 876,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 966,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateRoyaltyFeeAndGetRecipient_262": {
									"entryPoint": 448,
									"id": 262,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 302,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeRegistry_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 322,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IRoyaltyFeeRegistry_$309__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3336:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "321:103:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "331:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "354:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "339:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "331:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "373:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "400:3:7",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "405:10:7",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "396:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "396:20:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "384:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "384:33:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "366:52:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "290:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "301:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "312:4:7",
														"type": ""
													}
												],
												"src": "222:202:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "557:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "567:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "579:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "590:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "575:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "567:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "609:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "624:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "640:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "645:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "636:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "636:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "649:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "632:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "632:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "620:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "602:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "602:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IRoyaltyFeeRegistry_$309__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "526:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "537:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "548:4:7",
														"type": ""
													}
												],
												"src": "429:230:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:86:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "773:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "782:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "785:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "775:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "775:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "775:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "732:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "743:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "758:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "763:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "754:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "754:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "767:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "750:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "750:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "739:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "739:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "729:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:50:7"
															},
															"nodeType": "YulIf",
															"src": "719:70:7"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "698:5:7",
														"type": ""
													}
												],
												"src": "664:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "870:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "916:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "925:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "928:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "918:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "918:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "918:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "891:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "900:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "887:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "887:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "912:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:32:7"
															},
															"nodeType": "YulIf",
															"src": "880:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "941:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "967:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "954:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "945:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1011:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "986:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1026:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1036:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "836:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "847:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "859:6:7",
														"type": ""
													}
												],
												"src": "800:247:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1156:279:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1202:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1214:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1204:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1177:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1186:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1173:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1173:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1198:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1169:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1169:32:7"
															},
															"nodeType": "YulIf",
															"src": "1166:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1227:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1253:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1240:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1231:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1297:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1272:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1312:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1322:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1312:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1336:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1374:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1346:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1336:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1414:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1425:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1410:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1410:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1397:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1106:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1117:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1129:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1137:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1145:6:7",
														"type": ""
													}
												],
												"src": "1052:383:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1569:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1579:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1602:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1587:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1579:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1621:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1636:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1652:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1657:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1648:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1648:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1661:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1644:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1614:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1614:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1614:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1701:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1530:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1541:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1549:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1560:4:7",
														"type": ""
													}
												],
												"src": "1440:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1893:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1910:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1921:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1903:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1944:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1955:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1940:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1940:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1960:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1933:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1983:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1994:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1999:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1972:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2054:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2065:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2050:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2070:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2100:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2111:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2096:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1870:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1884:4:7",
														"type": ""
													}
												],
												"src": "1719:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2224:214:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2270:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2279:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2272:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2272:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2272:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2245:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2254:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2266:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2237:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:32:7"
															},
															"nodeType": "YulIf",
															"src": "2234:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2295:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2314:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2308:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2299:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2358:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2333:24:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2373:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2383:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2397:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2417:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2428:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2413:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2407:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2407:25:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2182:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2193:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2205:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2213:6:7",
														"type": ""
													}
												],
												"src": "2126:312:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2567:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2576:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2569:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2542:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2551:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2563:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:32:7"
															},
															"nodeType": "YulIf",
															"src": "2531:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2592:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2611:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2605:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2605:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2596:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2674:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2683:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2676:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2676:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2643:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2664:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2657:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2657:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2650:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2650:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2640:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:40:7"
															},
															"nodeType": "YulIf",
															"src": "2630:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2699:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2709:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2699:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2487:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2498:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2510:6:7",
														"type": ""
													}
												],
												"src": "2443:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2854:119:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2864:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2876:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2864:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2906:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2917:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2944:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2955:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2940:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2960:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2933:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2933:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2933:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2815:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2826:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2834:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2845:4:7",
														"type": ""
													}
												],
												"src": "2725:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3169:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3214:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3199:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3219:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3192:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3253:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3238:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3238:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3258:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3231:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3302:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3314:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3310:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3302:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3129:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3143:4:7",
														"type": ""
													}
												],
												"src": "2978:356:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_contract$_IRoyaltyFeeRegistry_$309__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"187": [
									{
										"length": 32,
										"start": 199
									},
									{
										"length": 32,
										"start": 495
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063b060dd861461009b578063c16f5156146100c2578063f2fde38b146100e9578063f4f635fa146100fc575b600080fd5b61006f61012e565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a963152a902d60e11b81565b6040516001600160e01b03199091168152602001610092565b61007e7f000000000000000000000000000000000000000000000000000000000000000081565b61006f6100f736600461042b565b610142565b61010f61010a36600461044f565b6101c0565b604080516001600160a01b039093168352602083019190915201610092565b61013661036c565b61014060006103c6565b565b61014a61036c565b6001600160a01b0381166101b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6101bd816103c6565b50565b604051632782d6c760e01b81526001600160a01b038481166004830152602482018390526000918291829182917f00000000000000000000000000000000000000000000000000000000000000001690632782d6c7906044016040805180830381865afa158015610235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102599190610484565b90925090506001600160a01b0382161580610272575080155b15610360576040516301ffc9a760e01b815263152a902d60e11b60048201526001600160a01b038816906301ffc9a790602401602060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e691906104b2565b156103605760405163152a902d60e11b815260048101879052602481018690526001600160a01b03881690632a55205a906044016040805180830381865afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a9190610484565b90925090505b90969095509350505050565b6000546001600160a01b031633146101405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101bd57600080fd5b60006020828403121561043d57600080fd5b813561044881610416565b9392505050565b60008060006060848603121561046457600080fd5b833561046f81610416565b95602085013595506040909401359392505050565b6000806040838503121561049757600080fd5b82516104a281610416565b6020939093015192949293505050565b6000602082840312156104c457600080fd5b8151801515811461044857600080fdfea2646970667358221220c08df90d5b4c1ba9ca799f122e19f222cea0d9375302e3ddd5fdc845b1f94f1c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xC16F5156 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xF4F635FA EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x12E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x92 JUMP JUMPDEST PUSH2 0x7E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x42B JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x44F JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x92 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x140 PUSH1 0x0 PUSH2 0x3C6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14A PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BD DUP2 PUSH2 0x3C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2782D6C7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x2782D6C7 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 PUSH2 0x272 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x152A902D PUSH1 0xE1 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x4B2 JUMP JUMPDEST ISZERO PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x2A55205A SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x448 DUP2 PUSH2 0x416 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0x416 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x4A2 DUP2 PUSH2 0x416 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 DUP14 0xF9 0xD JUMPDEST 0x4C SHL 0xA9 0xCA PUSH26 0x9F122E19F222CEA0D9375302E3DDD5FDC845B1F94F1C64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "476:1404:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;178:32:7;;;160:51;;148:2;133:18;1201:85:0;;;;;;;;586:56:4;;-1:-1:-1;;;586:56:4;;;;;-1:-1:-1;;;;;;384:33:7;;;366:52;;354:2;339:18;586:56:4;222:202:7;649:55:4;;;;;2081:198:0;;;;;;:::i;:::-;;:::i;1110:768:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1632:32:7;;;1614:51;;1696:2;1681:18;;1674:34;;;;1587:18;1110:768:4;1440:274:7;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1921:2:7;2161:73:0::1;::::0;::::1;1903:21:7::0;1960:2;1940:18;;;1933:30;1999:34;1979:18;;;1972:62;-1:-1:-1;;;2050:18:7;;;2043:36;2096:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1110:768:4:-;1410:50;;-1:-1:-1;;;1410:50:4;;-1:-1:-1;;;;;1632:32:7;;;1410:50:4;;;1614:51:7;1681:18;;;1674:34;;;1269:7:4;;;;;;;;1410:18;:30;;;;1587:18:7;;1410:50:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1366:94;;-1:-1:-1;1366:94:4;-1:-1:-1;;;;;;1582:22:4;;;;1581:48;;-1:-1:-1;1610:18:4;;1581:48;1577:253;;;1649:59;;-1:-1:-1;;;1649:59:4;;-1:-1:-1;;;1649:59:4;;;366:52:7;-1:-1:-1;;;;;1649:37:4;;;;;339:18:7;;1649:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1645:175;;;1756:49;;-1:-1:-1;;;1756:49:4;;;;;2899:25:7;;;2940:18;;;2933:34;;;-1:-1:-1;;;;;1756:32:4;;;;;2872:18:7;;1756:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1728:77;;-1:-1:-1;1728:77:4;-1:-1:-1;1645:175:4;1847:8;;;;-1:-1:-1;1110:768:4;-1:-1:-1;;;;1110:768:4:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3180:2:7;1414:68:0;;;3162:21:7;;;3199:18;;;3192:30;3258:34;3238:18;;;3231:62;3310:18;;1414:68:0;2978:356:7;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;664:131:7:-;-1:-1:-1;;;;;739:31:7;;729:42;;719:70;;785:1;782;775:12;800:247;859:6;912:2;900:9;891:7;887:23;883:32;880:52;;;928:1;925;918:12;880:52;967:9;954:23;986:31;1011:5;986:31;:::i;:::-;1036:5;800:247;-1:-1:-1;;;800:247:7:o;1052:383::-;1129:6;1137;1145;1198:2;1186:9;1177:7;1173:23;1169:32;1166:52;;;1214:1;1211;1204:12;1166:52;1253:9;1240:23;1272:31;1297:5;1272:31;:::i;:::-;1322:5;1374:2;1359:18;;1346:32;;-1:-1:-1;1425:2:7;1410:18;;;1397:32;;1052:383;-1:-1:-1;;;1052:383:7:o;2126:312::-;2205:6;2213;2266:2;2254:9;2245:7;2241:23;2237:32;2234:52;;;2282:1;2279;2272:12;2234:52;2314:9;2308:16;2333:31;2358:5;2333:31;:::i;:::-;2428:2;2413:18;;;;2407:25;2383:5;;2407:25;;-1:-1:-1;;;2126:312:7:o;2443:277::-;2510:6;2563:2;2551:9;2542:7;2538:23;2534:32;2531:52;;;2579:1;2576;2569:12;2531:52;2611:9;2605:16;2664:5;2657:13;2650:21;2643:5;2640:32;2630:60;;2686:1;2683;2676:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "258000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC2981()": "247",
								"calculateRoyaltyFeeAndGetRecipient(address,uint256,uint256)": "infinite",
								"owner()": "2309",
								"renounceOwnership()": "infinite",
								"royaltyFeeRegistry()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 872,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 872,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 753,
									"end": 872,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 753,
									"end": 872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 753,
									"end": 872,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 753,
									"end": 872,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 804,
									"end": 865,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 804,
									"end": 865,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 804,
									"end": 865,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "187"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 1880,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c08df90d5b4c1ba9ca799f122e19f222cea0d9375302e3ddd5fdc845b1f94f1c64736f6c63430008110033",
									".code": [
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "C16F5156"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "F4F635FA"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 476,
											"end": 1880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 586,
											"end": 642,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 586,
											"end": 642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 586,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 586,
											"end": 642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 586,
											"end": 642,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 586,
											"end": 642,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 586,
											"end": 642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 586,
											"end": 642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 384,
											"end": 417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 384,
											"end": 417,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 384,
											"end": 417,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 366,
											"end": 418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 586,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 424,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 704,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 649,
											"end": 704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 649,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 649,
											"end": 704,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 649,
											"end": 704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 649,
											"end": 704,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1110,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1110,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1665,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1440,
											"end": 1714,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1921,
											"end": 1923,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1924,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 1962,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1933,
											"end": 1963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 2034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2043,
											"end": 2079,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2115,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2096,
											"end": 2115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2782D6C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1410,
											"end": 1440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1440,
											"name": "PUSH",
											"source": 4,
											"value": "2782D6C7"
										},
										{
											"begin": 1410,
											"end": 1440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1410,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1410,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1460,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1581,
											"end": 1629,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1629,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1581,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1830,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1577,
											"end": 1830,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 366,
											"end": 418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1686,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1686,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1686,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 1649,
											"end": 1686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 339,
											"end": 357,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 339,
											"end": 357,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1649,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1649,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1820,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1645,
											"end": 1820,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2924,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2924,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2924,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A"
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2872,
											"end": 2890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1756,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1756,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1728,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1728,
											"end": 1805,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1645,
											"end": 1820,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1645,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1855,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1878,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1110,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3182,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3183,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3217,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3199,
											"end": 3217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3222,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3292,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2978,
											"end": 3334,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 795,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 664,
											"end": 795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 739,
											"end": 770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 739,
											"end": 770,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 729,
											"end": 771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 729,
											"end": 771,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 719,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 719,
											"end": 789,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 785,
											"end": 786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 783,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 775,
											"end": 787,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 800,
											"end": 1047,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 800,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 859,
											"end": 865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 900,
											"end": 909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 891,
											"end": 898,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 887,
											"end": 910,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 883,
											"end": 915,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 880,
											"end": 932,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 928,
											"end": 929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 918,
											"end": 930,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 880,
											"end": 932,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 954,
											"end": 977,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 986,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 986,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 800,
											"end": 1047,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 800,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1435,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1052,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1143,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1200,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1196,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1201,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1263,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1272,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1303,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1272,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1322,
											"end": 1327,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1378,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1429,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1429,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1052,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2438,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2126,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2264,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2269,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2286,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2234,
											"end": 2286,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2286,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2234,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2324,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2333,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2364,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2333,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2432,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2432,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2126,
											"end": 2438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2720,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2443,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2549,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2561,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2566,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2583,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2531,
											"end": 2583,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2583,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2531,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2664,
											"end": 2669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2670,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2671,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2672,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2630,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2630,
											"end": 2690,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2688,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/RoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"calculateRoyaltyFeeAndGetRecipient(address,uint256,uint256)": "f4f635fa",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeRegistry()": "c16f5156",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyFeeRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRoyaltyFeeAndGetRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeRegistry\",\"outputs\":[{\"internalType\":\"contract IRoyaltyFeeRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"RoyaltyFeeManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"It handles the logic to check and transfer royalty fees (if any).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/RoyaltyFeeManager.sol\":\"RoyaltyFeeManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0xa812eed728198acd2c30d06950a5bea8d68436e4f694dd892273266ec2f79f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5522afc5c222c810d9ad67c45f37cb7169452fcf76692cad10ac8153c068daa\",\"dweb:/ipfs/QmX4XgnDp7pyvojQ6g5tacrUMCf7TED2qC2vERH9Xh9feZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/RoyaltyFeeManager.sol\":{\"keccak256\":\"0xc22dd2bb499f7576ce74563cf0c1e9d9de4c7201b326d3f93dee2db663cda63e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfcf54cfc197439ecb7a295afd70b9d19964fc83930172935110899ad6a4a67d\",\"dweb:/ipfs/QmWdDWJSUfWxmUUhN35U8xY9muLubMHEWcBXY77qYtNpv8\"]},\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":{\"keccak256\":\"0x553adb19658a6f5859886444bc1a2b8483e9ec567bd1ad9aedbfb0ba665e2df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fbd253613d3c5845b3132e281f3edb16705a49a6f8fd8b7f35fa4732796c04e\",\"dweb:/ipfs/QmNpYHvqJgv3fktAUovG8xxP7LTCLHAmTTZfj7M6WZXJBC\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x711cb38bc94ecc1a78aec90fc798bcb553416122de86bb5d5ecab63e793b49f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59081b6554c25265051893dfde258a8b5476b37ec1b52f1f9c61742140b1d47\",\"dweb:/ipfs/QmaVeRoJv34nphsN27cdUP1hXuMhYL2SvRAByd938GkmLt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/RoyaltyFeeManager.sol:RoyaltyFeeManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "It handles the logic to check and transfer royalty fees (if any).",
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"TheRoyaltyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateRoyaltyFeeAndGetRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateRoyaltyFeeAndGetRecipient(address,uint256,uint256)": "f4f635fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRoyaltyFeeAndGetRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":\"TheRoyaltyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":{\"keccak256\":\"0x553adb19658a6f5859886444bc1a2b8483e9ec567bd1ad9aedbfb0ba665e2df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fbd253613d3c5845b3132e281f3edb16705a49a6f8fd8b7f35fa4732796c04e\",\"dweb:/ipfs/QmNpYHvqJgv3fktAUovG8xxP7LTCLHAmTTZfj7M6WZXJBC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x711cb38bc94ecc1a78aec90fc798bcb553416122de86bb5d5ecab63e793b49f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59081b6554c25265051893dfde258a8b5476b37ec1b52f1f9c61742140b1d47\",\"dweb:/ipfs/QmaVeRoJv34nphsN27cdUP1hXuMhYL2SvRAByd938GkmLt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							153
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 154,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 153,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								153
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
					"exportedSymbols": {
						"IERC165": [
							165
						],
						"IERC2981": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 166,
							"src": "132:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "IERC165",
										"nameLocations": [
											"490:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 165,
										"src": "490:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "490:7:1"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "178:289:1",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants.\n _Available since v4.5._"
							},
							"fullyImplemented": false,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								165
							],
							"name": "IERC2981",
							"nameLocation": "478:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "504:231:1",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
									},
									"functionSelector": "2a55205a",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "749:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "769:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "761:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "778:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:36:1"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "852:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "844:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "870:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "862:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:41:1"
									},
									"scope": 131,
									"src": "740:145:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 132,
							"src": "468:419:1",
							"usedErrors": []
						}
					],
					"src": "107:781:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							153
						]
					},
					"id": 154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 139,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 138,
												"id": 141,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 153,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 148,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 147,
												"id": 150,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 153,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 154,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							165
						]
					},
					"id": 166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 165,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 166,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"contracts/Manager/RoyaltyFeeManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/RoyaltyFeeManager.sol",
					"exportedSymbols": {
						"IERC165": [
							165
						],
						"IERC2981": [
							131
						],
						"IRoyaltyFeeRegistry": [
							309
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeManager": [
							263
						],
						"TheRoyaltyManager": [
							279
						]
					},
					"id": 264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 113,
							"src": "57:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 168,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 132,
							"src": "125:82:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 165,
										"src": "133:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 171,
										"name": "IERC2981",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 131,
										"src": "142:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheRoyaltyFeeManager.sol",
							"file": "./interface/TheRoyaltyFeeManager.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 280,
							"src": "209:71:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "TheRoyaltyManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 279,
										"src": "217:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./royalty/interface/IRoyaltyFeeRegistry.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 310,
							"src": "281:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 309,
										"src": "289:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 178,
										"name": "TheRoyaltyManager",
										"nameLocations": [
											"506:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "506:17:4"
									},
									"id": 179,
									"nodeType": "InheritanceSpecifier",
									"src": "506:17:4"
								},
								{
									"baseName": {
										"id": 180,
										"name": "Ownable",
										"nameLocations": [
											"525:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "525:7:4"
									},
									"id": 181,
									"nodeType": "InheritanceSpecifier",
									"src": "525:7:4"
								}
							],
							"canonicalName": "RoyaltyFeeManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 177,
								"nodeType": "StructuredDocumentation",
								"src": "363:112:4",
								"text": " @title RoyaltyFeeManager\n @notice It handles the logic to check and transfer royalty fees (if any)."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263,
								112,
								153,
								279
							],
							"name": "RoyaltyFeeManager",
							"nameLocation": "485:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 184,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "609:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "586:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 182,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "586:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "632:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c16f5156",
									"id": 187,
									"mutability": "immutable",
									"name": "royaltyFeeRegistry",
									"nameLocation": "686:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "649:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$309",
										"typeString": "contract IRoyaltyFeeRegistry"
									},
									"typeName": {
										"id": 186,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 185,
											"name": "IRoyaltyFeeRegistry",
											"nameLocations": [
												"649:19:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 309,
											"src": "649:19:4"
										},
										"referencedDeclaration": 309,
										"src": "649:19:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$309",
											"typeString": "contract IRoyaltyFeeRegistry"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "794:78:4",
										"statements": [
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 192,
														"name": "royaltyFeeRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "804:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$309",
															"typeString": "contract IRoyaltyFeeRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 194,
																"name": "_royaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "845:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 193,
															"name": "IRoyaltyFeeRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "825:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$309_$",
																"typeString": "type(contract IRoyaltyFeeRegistry)"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "825:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$309",
															"typeString": "contract IRoyaltyFeeRegistry"
														}
													},
													"src": "804:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$309",
														"typeString": "contract IRoyaltyFeeRegistry"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "804:61:4"
											}
										]
									},
									"id": 199,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_royaltyFeeRegistry",
												"nameLocation": "773:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "765:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:29:4"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:0:4"
									},
									"scope": 263,
									"src": "753:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										278
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "1287:591:4",
										"statements": [
											{
												"assignments": [
													214,
													216
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "receiver",
														"nameLocation": "1375:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "1367:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 213,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1367:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 216,
														"mutability": "mutable",
														"name": "royaltyAmount",
														"nameLocation": "1393:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "1385:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1385:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"id": 219,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "1441:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1453:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 217,
															"name": "royaltyFeeRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1410:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$309",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1429:11:4",
														"memberName": "royaltyInfo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 297,
														"src": "1410:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_address_$_t_uint256_$",
															"typeString": "function (address,uint256) view external returns (address,uint256)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1410:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1366:94:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 223,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "1582:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1602:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1594:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 224,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1594:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1594:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1582:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 229,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1581:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 230,
																	"name": "royaltyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "1610:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1627:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1610:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 233,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1609:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1581:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "IfStatement",
												"src": "1577:253:4",
												"trueBody": {
													"id": 255,
													"nodeType": "Block",
													"src": "1631:199:4",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"id": 239,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "1687:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 236,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 201,
																				"src": "1657:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 235,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "1649:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$165_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1649:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$165",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1669:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 164,
																	"src": "1649:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1649:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 254,
															"nodeType": "IfStatement",
															"src": "1645:175:4",
															"trueBody": {
																"id": 253,
																"nodeType": "Block",
																"src": "1710:110:4",
																"statements": [
																	{
																		"expression": {
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"components": [
																					{
																						"id": 241,
																						"name": "receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 214,
																						"src": "1729:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 242,
																						"name": "royaltyAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 216,
																						"src": "1739:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 243,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "TupleExpression",
																				"src": "1728:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																					"typeString": "tuple(address,uint256)"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 248,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 203,
																						"src": "1789:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 249,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 205,
																						"src": "1798:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 245,
																								"name": "collection",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 201,
																								"src": "1765:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 244,
																							"name": "IERC2981",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 131,
																							"src": "1756:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_IERC2981_$131_$",
																								"typeString": "type(contract IERC2981)"
																							}
																						},
																						"id": 246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1756:20:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC2981_$131",
																							"typeString": "contract IERC2981"
																						}
																					},
																					"id": 247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1777:11:4",
																					"memberName": "royaltyInfo",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 130,
																					"src": "1756:32:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
																						"typeString": "function (uint256,uint256) view external returns (address,uint256)"
																					}
																				},
																				"id": 250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1756:49:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																					"typeString": "tuple(address,uint256)"
																				}
																			},
																			"src": "1728:77:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 252,
																		"nodeType": "ExpressionStatement",
																		"src": "1728:77:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 257,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1847:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 258,
															"name": "royaltyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1857:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 259,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1846:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 212,
												"id": 260,
												"nodeType": "Return",
												"src": "1839:32:4"
											}
										]
									},
									"functionSelector": "f4f635fa",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRoyaltyFeeAndGetRecipient",
									"nameLocation": "1119:34:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1251:8:4"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1171:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1163:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1224:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1216:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:83:4"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1269:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1269:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1278:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:18:4"
									},
									"scope": 263,
									"src": "1110:768:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 264,
							"src": "476:1404:4",
							"usedErrors": []
						}
					],
					"src": "32:1849:4"
				},
				"id": 4
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheRoyaltyFeeManager.sol",
					"exportedSymbols": {
						"TheRoyaltyManager": [
							279
						]
					},
					"id": 280,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheRoyaltyManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "TheRoyaltyManager",
							"nameLocation": "67:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f4f635fa",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRoyaltyFeeAndGetRecipient",
									"nameLocation": "100:34:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "152:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "144:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "180:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "172:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "205:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "197:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:83:5"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "241:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "250:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:18:5"
									},
									"scope": 279,
									"src": "91:168:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 280,
							"src": "57:204:5",
							"usedErrors": []
						}
					],
					"src": "32:230:5"
				},
				"id": 5
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							309
						]
					},
					"id": 310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 281,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 309,
							"linearizedBaseContracts": [
								309
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b9223c9d",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "105:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "135:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "127:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:26:6"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:0:6"
									},
									"scope": 309,
									"src": "96:66:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "177:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "197:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "189:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "217:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "209:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:36:6"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "257:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:18:6"
									},
									"scope": 309,
									"src": "168:98:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "281:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "314:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "306:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:20:6"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "386:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "407:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "428:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:73:6"
									},
									"scope": 309,
									"src": "272:174:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 310,
							"src": "57:391:6",
							"usedErrors": []
						}
					],
					"src": "32:417:6"
				},
				"id": 6
			}
		}
	}
}