{
	"id": "bd5926eb4c4c3031d6f7ad598412b517",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/execution/StrategyActivity.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {OrderTypes} from \"../../libraries/OrderTypes.sol\";\nimport {TheExStrategy} from \"./interface/TheExecutionStrategy.sol\";\n\n/**\n * @title StrategyStandardSaleForFixedPrice\n * @notice Strategy that executes an order at a fixed price that\n * can be taken either by a bid or an ask.\n */\ncontract StrategyAct is TheExStrategy ,Ownable{\n    uint256 public immutable PROTOCOL_FEE;\n    address public ACTIVITY_ADDRESS;\n    event UpdateActivity(address indexed collection);\n\n    /**\n     * @notice Constructor\n     * @param _protocolFee protocol fee (200 --> 2%, 400 --> 4%)\n     */\n    constructor(uint256 _protocolFee) {\n        PROTOCOL_FEE = _protocolFee;\n    }\n\n    //\n    // tion canExecuteTakerAsk\n    //  @Description: Check price information\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        override\n        returns (\n            bool,\n            uint256,\n            uint256\n        )\n    {\n        // Confirm all information are matched and valid within the time period for fixed price    return (\n            return (((makerBid.price == takerAsk.price) &&\n                (makerBid.tokenId == takerAsk.tokenId) &&\n                (makerBid.startTime <= block.timestamp) &&\n                (makerBid.endTime >= block.timestamp)&&\n                makerBid.collection == ACTIVITY_ADDRESS),\n            makerBid.tokenId,\n            makerBid.amount\n        );\n    }\n\n    //\n    // tion canExecuteTakerBid\n    //  @Description: Check strategy\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        override\n        returns (\n            bool,\n            uint256,\n            uint256\n        )\n    {\n        //Confirm all information are matched and valid within the time period for fixed price\n        return (\n            ((makerAsk.price == takerBid.price) &&\n                (makerAsk.tokenId == takerBid.tokenId) &&\n                (makerAsk.startTime <= block.timestamp) &&\n                (makerAsk.endTime >= block.timestamp)),\n            makerAsk.tokenId,\n            makerAsk.amount\n        );\n    }\n    function setFreeAddress(address _freeAddress)external onlyOwner{\n        ACTIVITY_ADDRESS = _freeAddress;\n        emit UpdateActivity(_freeAddress);\n    }\n\n    //\n    // function viewProtocolFee\n    //  @Description: Return platform transaction fee\n    //  @return external\n    //\n    function viewProtocolFee() external view override returns (uint256) {\n        return PROTOCOL_FEE;\n    }\n}\n"
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../../libraries/OrderTypes.sol\";\n\ninterface TheExStrategy {\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function viewProtocolFee() external view returns (uint256);\n}\n"
			},
			"contracts/libraries/OrderTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//—————————————————————————————————Order Structure—————————————————————————————————\nlibrary OrderTypes {\n    // keccak256(\"MakerOrder(bool isOrderAsk,address signer,address collection,uint256 price,uint256 tokenId,uint256 amount,address strategy,address currency,uint256 nonce,uint256 startTime,uint256 endTime,uint256 minPercentageToAsk,bytes params)\")\n    bytes32 internal constant MAKER_ORDER_HASH = 0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028;\n\n    struct MakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address signer; // signer of the maker order\n        address collection; // collection address\n        uint256 price; // price (used as )\n        uint256 tokenId; // id of the token\n        uint256 amount; // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n        address strategy; // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice)\n        address currency; // currency (e.g., WETH)\n        uint256 nonce; // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n        uint256 startTime; // startTime in timestamp\n        uint256 endTime; // endTime in timestamp\n        uint256 minPercentageToAsk; // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // additional parameters\n        uint8 v; // v: parameter (27 or 28)\n        bytes32 r; // r: parameter\n        bytes32 s; // s: parameter\n    }\n\n    struct TakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address taker; // msg.sender\n        uint256 price; // final price for the purchase\n        uint256 tokenId;\n        uint256 minPercentageToAsk; // // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // other params (e.g., tokenId)\n    }\n\n\n    function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {\n        return\n        keccak256(\n            abi.encode(\n                MAKER_ORDER_HASH,\n                makerOrder.isOrderAsk,\n                makerOrder.signer,\n                makerOrder.collection,\n                makerOrder.price,\n                makerOrder.tokenId,\n                makerOrder.amount,\n                makerOrder.strategy,\n                makerOrder.currency,\n                makerOrder.nonce,\n                makerOrder.startTime,\n                makerOrder.endTime,\n                makerOrder.minPercentageToAsk,\n                keccak256(makerOrder.params)\n            )\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/execution/StrategyActivity.sol": {
				"StrategyAct": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_protocolFee",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "UpdateActivity",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ACTIVITY_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PROTOCOL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_freeAddress",
									"type": "address"
								}
							],
							"name": "setFreeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_protocolFee": "protocol fee (200 --> 2%, 400 --> 4%)"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "StrategyStandardSaleForFixedPrice",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/execution/StrategyActivity.sol\":412:2937  contract StrategyAct is TheExStrategy ,Ownable{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/execution/StrategyActivity.sol\":707:785  constructor(uint256 _protocolFee) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Manager/execution/StrategyActivity.sol\":751:778  PROTOCOL_FEE = _protocolFee */\n  0x80\n  mstore\n    /* \"contracts/Manager/execution/StrategyActivity.sol\":412:2937  contract StrategyAct is TheExStrategy ,Ownable{... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/Manager/execution/StrategyActivity.sol\":412:2937  contract StrategyAct is TheExStrategy ,Ownable{... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb004fbd84afb38927636fa378c0a62a86a02b00862b6ff80fef4d6e948c0571d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":412:2937  contract StrategyAct is TheExStrategy ,Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9dd1cda6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb2d234fb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd310677d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x0b4501fd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2a75ffee\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5ddcd564\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":464:501  uint256 public immutable PROTOCOL_FEE */\n    tag_3:\n      tag_13\n      immutable(\"0xb004fbd84afb38927636fa378c0a62a86a02b00862b6ff80fef4d6e948c0571d\")\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":464:501  uint256 public immutable PROTOCOL_FEE */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":981:1698  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_4:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1099:1113   */\n      swap4\n      iszero\n        /* \"#utility.yul\":1092:1114   */\n      iszero\n        /* \"#utility.yul\":1074:1115   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1146:1148   */\n      0x20\n        /* \"#utility.yul\":1131:1149   */\n      dup5\n      add\n        /* \"#utility.yul\":1124:1158   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1174:1192   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1167:1201   */\n      mstore\n        /* \"#utility.yul\":1062:1064   */\n      0x60\n        /* \"#utility.yul\":1047:1065   */\n      add\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":981:1698  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n      tag_15\n        /* \"#utility.yul\":878:1207   */\n      jump\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":507:538  address public ACTIVITY_ADDRESS */\n    tag_5:\n      sload(0x01)\n      tag_23\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_23:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1376:1408   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1358:1409   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1346:1348   */\n      0x20\n        /* \"#utility.yul\":1331:1349   */\n      add\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":507:538  address public ACTIVITY_ADDRESS */\n      tag_15\n        /* \"#utility.yul\":1212:1415   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_23)\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2831:2935  function viewProtocolFee() external view override returns (uint256) {... */\n    tag_8:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2916:2928  PROTOCOL_FEE */\n      immutable(\"0xb004fbd84afb38927636fa378c0a62a86a02b00862b6ff80fef4d6e948c0571d\")\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2831:2935  function viewProtocolFee() external view override returns (uint256) {... */\n      jump(tag_13)\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2546:2700  function setFreeAddress(address _freeAddress)external onlyOwner{... */\n    tag_9:\n      tag_27\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1885:2541  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_10:\n      tag_17\n      tag_40\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_27\n      tag_44\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":981:1698  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_20:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1163:1167  bool */\n      0x00\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1181:1188  uint256 */\n      dup1\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1202:1209  uint256 */\n      0x00\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1374:1382  takerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1374:1388  takerAsk.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1356:1364  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1356:1370  makerBid.price */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1356:1388  makerBid.price == takerAsk.price */\n      eq\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1447  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_47\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1430:1438  takerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1430:1446  takerAsk.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1410:1418  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1410:1426  makerBid.tokenId */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1410:1446  makerBid.tokenId == takerAsk.tokenId */\n      eq\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1447  (makerBid.price == takerAsk.price) &&... */\n    tag_47:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1506  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_48\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1490:1505  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1468:1476  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1468:1486  makerBid.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1468:1505  makerBid.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1506  (makerBid.price == takerAsk.price) &&... */\n    tag_48:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1563  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_49\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1547:1562  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1527:1535  makerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1527:1543  makerBid.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1527:1562  makerBid.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1563  (makerBid.price == takerAsk.price) &&... */\n    tag_49:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1621  (makerBid.price == takerAsk.price) &&... */\n      dup1\n      iszero\n      tag_50\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1605:1621  ACTIVITY_ADDRESS */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1582:1601  makerBid.collection */\n      tag_51\n      0x60\n      dup7\n      add\n      0x40\n      dup8\n      add\n      tag_37\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1582:1621  makerBid.collection == ACTIVITY_ADDRESS */\n      and\n      eq\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1355:1621  (makerBid.price == takerAsk.price) &&... */\n    tag_50:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1346:1691  return (((makerBid.price == takerAsk.price) &&... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1636:1652  makerBid.tokenId */\n      0x80\n      dup3\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1666:1681  makerBid.amount */\n      0xa0\n      dup4\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":981:1698  function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2546:2700  function setFreeAddress(address _freeAddress)external onlyOwner{... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2619:2635  ACTIVITY_ADDRESS */\n      0x01\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2619:2650  ACTIVITY_ADDRESS = _freeAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2665:2693  UpdateActivity(_freeAddress) */\n      mload(0x40)\n      0xce1cbf52b22f02d931c3c4303058071609fa6632b75130966e8abe92ddc2c2e1\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2546:2700  function setFreeAddress(address _freeAddress)external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1885:2541  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_41:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2068:2072  bool */\n      0x00\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2086:2093  uint256 */\n      dup1\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2107:2114  uint256 */\n      0x00\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2275:2283  takerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2275:2289  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2257:2265  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2257:2271  makerAsk.price */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2257:2289  makerAsk.price == takerBid.price */\n      eq\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2256:2348  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_64\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2331:2339  takerBid */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2331:2347  takerBid.tokenId */\n      0x60\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2311:2319  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2311:2327  makerAsk.tokenId */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2311:2347  makerAsk.tokenId == takerBid.tokenId */\n      eq\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2256:2348  (makerAsk.price == takerBid.price) &&... */\n    tag_64:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2256:2407  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_65\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2391:2406  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2369:2377  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2369:2387  makerAsk.startTime */\n      0x0120\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2369:2406  makerAsk.startTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2256:2407  (makerAsk.price == takerBid.price) &&... */\n    tag_65:\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2256:2464  (makerAsk.price == takerBid.price) &&... */\n      dup1\n      iszero\n      tag_50\n      jumpi\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2448:2463  block.timestamp */\n      timestamp\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2428:2436  makerAsk */\n      dup5\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2428:2444  makerAsk.endTime */\n      0x0140\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2428:2463  makerAsk.endTime >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2234:2534  return (... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2479:2495  makerAsk.tokenId */\n      0x80\n      dup3\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":2509:2524  makerAsk.amount */\n      0xa0\n      dup4\n      add\n      calldataload\n        /* \"contracts/Manager/execution/StrategyActivity.sol\":1885:2541  function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1913:1915   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1895:1916   */\n      mstore\n        /* \"#utility.yul\":1952:1954   */\n      0x26\n        /* \"#utility.yul\":1932:1950   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1925:1955   */\n      mstore\n        /* \"#utility.yul\":1991:2025   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1971:1989   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1964:2026   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2042:2060   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2035:2071   */\n      mstore\n        /* \"#utility.yul\":2088:2107   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2320:2322   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2302:2323   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2339:2357   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2332:2362   */\n      mstore\n        /* \"#utility.yul\":2398:2432   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2378:2396   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2371:2433   */\n      mstore\n        /* \"#utility.yul\":2450:2468   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_71\n        /* \"#utility.yul\":2118:2474   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:873   */\n    tag_19:\n        /* \"#utility.yul\":322:328   */\n      0x00\n        /* \"#utility.yul\":330:336   */\n      dup1\n        /* \"#utility.yul\":383:385   */\n      0x40\n        /* \"#utility.yul\":371:380   */\n      dup4\n        /* \"#utility.yul\":362:369   */\n      dup6\n        /* \"#utility.yul\":358:381   */\n      sub\n        /* \"#utility.yul\":354:386   */\n      slt\n        /* \"#utility.yul\":351:403   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":399:400   */\n      0x00\n        /* \"#utility.yul\":396:397   */\n      dup1\n        /* \"#utility.yul\":389:401   */\n      revert\n        /* \"#utility.yul\":351:403   */\n    tag_86:\n        /* \"#utility.yul\":439:448   */\n      dup3\n        /* \"#utility.yul\":426:449   */\n      calldataload\n        /* \"#utility.yul\":468:486   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":509:511   */\n      dup1\n        /* \"#utility.yul\":501:507   */\n      dup3\n        /* \"#utility.yul\":498:512   */\n      gt\n        /* \"#utility.yul\":495:529   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":522:523   */\n      dup1\n        /* \"#utility.yul\":515:527   */\n      revert\n        /* \"#utility.yul\":495:529   */\n    tag_87:\n        /* \"#utility.yul\":548:570   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":604:607   */\n      0xc0\n        /* \"#utility.yul\":586:602   */\n      dup3\n      dup8\n      sub\n        /* \"#utility.yul\":582:608   */\n      slt\n        /* \"#utility.yul\":579:625   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":621:622   */\n      0x00\n        /* \"#utility.yul\":618:619   */\n      dup1\n        /* \"#utility.yul\":611:623   */\n      revert\n        /* \"#utility.yul\":579:625   */\n    tag_88:\n        /* \"#utility.yul\":644:646   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      dup5\n      add\n        /* \"#utility.yul\":671:703   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":715:731   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":712:748   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":744:745   */\n      0x00\n        /* \"#utility.yul\":741:742   */\n      dup1\n        /* \"#utility.yul\":734:746   */\n      revert\n        /* \"#utility.yul\":712:748   */\n    tag_89:\n      pop\n        /* \"#utility.yul\":767:791   */\n      dup4\n      add\n        /* \"#utility.yul\":825:828   */\n      0x0200\n        /* \"#utility.yul\":807:823   */\n      dup2\n      dup7\n      sub\n        /* \"#utility.yul\":803:829   */\n      slt\n        /* \"#utility.yul\":800:846   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":842:843   */\n      0x00\n        /* \"#utility.yul\":839:840   */\n      dup1\n        /* \"#utility.yul\":832:844   */\n      revert\n        /* \"#utility.yul\":800:846   */\n    tag_90:\n        /* \"#utility.yul\":865:867   */\n      dup1\n        /* \"#utility.yul\":855:867   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":196:873   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1420:1706   */\n    tag_37:\n        /* \"#utility.yul\":1479:1485   */\n      0x00\n        /* \"#utility.yul\":1532:1534   */\n      0x20\n        /* \"#utility.yul\":1520:1529   */\n      dup3\n        /* \"#utility.yul\":1511:1518   */\n      dup5\n        /* \"#utility.yul\":1507:1530   */\n      sub\n        /* \"#utility.yul\":1503:1535   */\n      slt\n        /* \"#utility.yul\":1500:1552   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1548:1549   */\n      0x00\n        /* \"#utility.yul\":1545:1546   */\n      dup1\n        /* \"#utility.yul\":1538:1550   */\n      revert\n        /* \"#utility.yul\":1500:1552   */\n    tag_94:\n        /* \"#utility.yul\":1574:1597   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1626:1657   */\n      dup2\n      and\n        /* \"#utility.yul\":1616:1658   */\n      dup2\n      eq\n        /* \"#utility.yul\":1606:1676   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":1672:1673   */\n      0x00\n        /* \"#utility.yul\":1669:1670   */\n      dup1\n        /* \"#utility.yul\":1662:1674   */\n      revert\n        /* \"#utility.yul\":1606:1676   */\n    tag_95:\n        /* \"#utility.yul\":1695:1700   */\n      swap4\n        /* \"#utility.yul\":1420:1706   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a3df5b76f3299f9973784e839fe42236312f53315fcf58ff3c60ffee01cee6a364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 64,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:200:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:184:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b506040516105ba3803806105ba83398101604081905261002f91610090565b61003833610040565b6080526100a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a257600080fd5b5051919050565b6080516104f06100ca60003960008181609d015261014a01526104f06000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101375780639dd1cda614610148578063b2d234fb1461016e578063d310677d14610181578063f2fde38b1461019457600080fd5b80630b4501fd146100985780632a75ffee146100d25780635ddcd56414610102578063715018a61461012d575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100e56100e0366004610416565b6101a7565b6040805193151584526020840192909252908201526060016100c9565b600154610115906001600160a01b031681565b6040516001600160a01b0390911681526020016100c9565b61013561022f565b005b6000546001600160a01b0316610115565b7f00000000000000000000000000000000000000000000000000000000000000006100bf565b61013561017c36600461048a565b610243565b6100e561018f366004610416565b610295565b6101356101a236600461048a565b6102ee565b6000806000846040013584606001351480156101ca575084606001358460800135145b80156101db57504284610120013511155b80156101ec57504284610140013510155b801561021a57506001546001600160a01b031661020f606086016040870161048a565b6001600160a01b0316145b92505050608082013560a08301359250925092565b61023761036c565b61024160006103c6565b565b61024b61036c565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce1cbf52b22f02d931c3c4303058071609fa6632b75130966e8abe92ddc2c2e190600090a250565b6000806000846040013584606001351480156102b8575084606001358460800135145b80156102c957504284610120013511155b801561021a575042846101400135101592505050608082013560a08301359250925092565b6102f661036c565b6001600160a01b0381166103605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610369816103c6565b50565b6000546001600160a01b031633146102415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610357565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561042957600080fd5b823567ffffffffffffffff8082111561044157600080fd5b9084019060c0828703121561045557600080fd5b9092506020840135908082111561046b57600080fd5b508301610200818603121561047f57600080fd5b809150509250929050565b60006020828403121561049c57600080fd5b81356001600160a01b03811681146104b357600080fd5b939250505056fea2646970667358221220a3df5b76f3299f9973784e839fe42236312f53315fcf58ff3c60ffee01cee6a364736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5BA CODESIZE SUB DUP1 PUSH2 0x5BA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x90 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x40 JUMP JUMPDEST PUSH1 0x80 MSTORE PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x4F0 PUSH2 0xCA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x9D ADD MSTORE PUSH2 0x14A ADD MSTORE PUSH2 0x4F0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xB2D234FB EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xD310677D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4501FD EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2A75FFEE EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5DDCD564 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x416 JUMP JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x115 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x115 JUMP JUMPDEST PUSH32 0x0 PUSH2 0xBF JUMP JUMPDEST PUSH2 0x135 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x416 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x1CA JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1DB JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1EC JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20F PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x241 PUSH1 0x0 PUSH2 0x3C6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x24B PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE1CBF52B22F02D931C3C4303058071609FA6632B75130966E8ABE92DDC2C2E1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x2B8 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x2C9 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x21A JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x369 DUP2 PUSH2 0x3C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x357 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xDF JUMPDEST PUSH23 0xF3299F9973784E839FE42236312F53315FCF58FF3C60FF 0xEE ADD 0xCE 0xE6 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "412:2525:2:-:0;;;707:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;751:27:2;;412:2525;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:184:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:5;;14:184;-1:-1:-1;14:184:5:o;:::-;412:2525:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ACTIVITY_ADDRESS_151": {
									"entryPoint": null,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PROTOCOL_FEE_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 876,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 966,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@canExecuteBuy_222": {
									"entryPoint": 423,
									"id": 222,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@canExecuteSell_273": {
									"entryPoint": 661,
									"id": 273,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 559,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFreeAddress_289": {
									"entryPoint": 579,
									"id": 289,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 750,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@viewProtocolFee_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_TakerOrder_$390_calldata_ptrt_struct$_MakerOrder_$377_calldata_ptr": {
									"entryPoint": 1046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2476:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "341:532:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "387:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "396:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "399:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "389:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "389:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "389:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "362:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "371:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "358:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "358:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "383:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "354:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "354:32:5"
															},
															"nodeType": "YulIf",
															"src": "351:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "412:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "439:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "426:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "426:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "416:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "458:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "468:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "462:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "513:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "515:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "515:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "501:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "509:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "498:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:14:5"
															},
															"nodeType": "YulIf",
															"src": "495:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "538:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "552:9:5"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "563:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "548:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "542:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "609:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "621:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "611:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "611:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "611:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "590:7:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "599:2:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "586:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "586:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "582:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:26:5"
															},
															"nodeType": "YulIf",
															"src": "579:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "634:12:5",
															"value": {
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "644:2:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "634:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "688:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "699:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "684:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "684:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "671:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:32:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "659:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "732:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "741:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "734:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "734:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "734:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "718:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "728:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "715:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:16:5"
															},
															"nodeType": "YulIf",
															"src": "712:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "757:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "771:9:5"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "782:8:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:24:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "761:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "839:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "842:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "832:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "832:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "820:2:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "825:3:5",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:26:5"
															},
															"nodeType": "YulIf",
															"src": "800:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "855:12:5",
															"value": {
																"name": "_3",
																"nodeType": "YulIdentifier",
																"src": "865:2:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TakerOrder_$390_calldata_ptrt_struct$_MakerOrder_$377_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "299:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "310:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "322:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "330:6:5",
														"type": ""
													}
												],
												"src": "196:677:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1029:178:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1039:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1051:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1062:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1039:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1106:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1099:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1099:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1092:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1074:41:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1135:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1146:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1124:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1124:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1178:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1189:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1174:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1174:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1194:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1167:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "982:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "993:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1001:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1009:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1020:4:5",
														"type": ""
													}
												],
												"src": "878:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1323:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1335:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1331:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1331:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1323:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1380:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1396:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1401:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1392:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1392:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1405:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1388:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1388:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1376:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1376:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1282:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1304:4:5",
														"type": ""
													}
												],
												"src": "1212:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1490:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1536:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1538:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1538:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1538:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1511:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1520:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1507:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1507:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1503:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:32:5"
															},
															"nodeType": "YulIf",
															"src": "1500:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1561:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1587:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1574:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1565:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1660:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1669:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1672:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1662:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1662:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1630:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1645:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1650:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1641:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1641:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1654:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1637:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1637:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1626:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1626:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1616:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1616:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:50:5"
															},
															"nodeType": "YulIf",
															"src": "1606:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1685:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1695:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1456:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1467:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1479:6:5",
														"type": ""
													}
												],
												"src": "1420:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1902:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1913:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1895:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1952:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1975:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1986:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1991:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1964:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2046:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2057:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2062:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2035:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2035:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2035:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2080:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2092:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2080:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1862:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1876:4:5",
														"type": ""
													}
												],
												"src": "1711:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2292:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2309:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2320:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2302:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2302:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2302:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2343:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2354:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2339:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2339:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2332:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2332:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2382:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2393:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2378:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2378:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2398:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2371:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2442:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2454:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2465:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2450:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2442:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2269:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2283:4:5",
														"type": ""
													}
												],
												"src": "2118:356:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_TakerOrder_$390_calldata_ptrt_struct$_MakerOrder_$377_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 192) { revert(0, 0) }\n        value0 := _2\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if slt(sub(dataEnd, _3), 512) { revert(0, 0) }\n        value1 := _3\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"149": [
									{
										"length": 32,
										"start": 157
									},
									{
										"length": 32,
										"start": 330
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101375780639dd1cda614610148578063b2d234fb1461016e578063d310677d14610181578063f2fde38b1461019457600080fd5b80630b4501fd146100985780632a75ffee146100d25780635ddcd56414610102578063715018a61461012d575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100e56100e0366004610416565b6101a7565b6040805193151584526020840192909252908201526060016100c9565b600154610115906001600160a01b031681565b6040516001600160a01b0390911681526020016100c9565b61013561022f565b005b6000546001600160a01b0316610115565b7f00000000000000000000000000000000000000000000000000000000000000006100bf565b61013561017c36600461048a565b610243565b6100e561018f366004610416565b610295565b6101356101a236600461048a565b6102ee565b6000806000846040013584606001351480156101ca575084606001358460800135145b80156101db57504284610120013511155b80156101ec57504284610140013510155b801561021a57506001546001600160a01b031661020f606086016040870161048a565b6001600160a01b0316145b92505050608082013560a08301359250925092565b61023761036c565b61024160006103c6565b565b61024b61036c565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce1cbf52b22f02d931c3c4303058071609fa6632b75130966e8abe92ddc2c2e190600090a250565b6000806000846040013584606001351480156102b8575084606001358460800135145b80156102c957504284610120013511155b801561021a575042846101400135101592505050608082013560a08301359250925092565b6102f661036c565b6001600160a01b0381166103605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610369816103c6565b50565b6000546001600160a01b031633146102415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610357565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561042957600080fd5b823567ffffffffffffffff8082111561044157600080fd5b9084019060c0828703121561045557600080fd5b9092506020840135908082111561046b57600080fd5b508301610200818603121561047f57600080fd5b809150509250929050565b60006020828403121561049c57600080fd5b81356001600160a01b03811681146104b357600080fd5b939250505056fea2646970667358221220a3df5b76f3299f9973784e839fe42236312f53315fcf58ff3c60ffee01cee6a364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x9DD1CDA6 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xB2D234FB EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xD310677D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB4501FD EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2A75FFEE EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5DDCD564 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE5 PUSH2 0xE0 CALLDATASIZE PUSH1 0x4 PUSH2 0x416 JUMP JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x115 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC9 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x115 JUMP JUMPDEST PUSH32 0x0 PUSH2 0xBF JUMP JUMPDEST PUSH2 0x135 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x243 JUMP JUMPDEST PUSH2 0xE5 PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x416 JUMP JUMPDEST PUSH2 0x295 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x1CA JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x1DB JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1EC JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x21A JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20F PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x241 PUSH1 0x0 PUSH2 0x3C6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x24B PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE1CBF52B22F02D931C3C4303058071609FA6632B75130966E8ABE92DDC2C2E1 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH1 0x60 ADD CALLDATALOAD EQ DUP1 ISZERO PUSH2 0x2B8 JUMPI POP DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP5 PUSH1 0x80 ADD CALLDATALOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0x2C9 JUMPI POP TIMESTAMP DUP5 PUSH2 0x120 ADD CALLDATALOAD GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x21A JUMPI POP TIMESTAMP DUP5 PUSH2 0x140 ADD CALLDATALOAD LT ISZERO SWAP3 POP POP POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD CALLDATALOAD SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x369 DUP2 PUSH2 0x3C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x357 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xDF JUMPDEST PUSH23 0xF3299F9973784E839FE42236312F53315FCF58FF3C60FF 0xEE ADD 0xCE 0xE6 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "412:2525:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;464:37;;;;;;;;160:25:5;;;148:2;133:18;464:37:2;;;;;;;;981:717;;;;;;:::i;:::-;;:::i;:::-;;;;1099:14:5;;1092:22;1074:41;;1146:2;1131:18;;1124:34;;;;1174:18;;;1167:34;1062:2;1047:18;981:717:2;878:329:5;507:31:2;;;;;-1:-1:-1;;;;;507:31:2;;;;;;-1:-1:-1;;;;;1376:32:5;;;1358:51;;1346:2;1331:18;507:31:2;1212:203:5;1831:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2831:104:2;2916:12;2831:104;;2546:154;;;;;;:::i;:::-;;:::i;1885:656::-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;981:717:2:-;1163:4;1181:7;1202;1374:8;:14;;;1356:8;:14;;;:32;1355:92;;;;;1430:8;:16;;;1410:8;:16;;;:36;1355:92;:151;;;;;1490:15;1468:8;:18;;;:37;;1355:151;:208;;;;;1547:15;1527:8;:16;;;:35;;1355:208;:266;;;;-1:-1:-1;1605:16:2;;-1:-1:-1;;;;;1605:16:2;1582:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1582:39:2;;1355:266;1346:345;-1:-1:-1;;;1636:16:2;;;;1666:15;;;;981:717;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2546:154:2:-;1094:13:0;:11;:13::i;:::-;2619:16:2::1;:31:::0;;-1:-1:-1;;;;;;2619:31:2::1;-1:-1:-1::0;;;;;2619:31:2;::::1;::::0;;::::1;::::0;;;2665:28:::1;::::0;::::1;::::0;-1:-1:-1;;2665:28:2::1;2546:154:::0;:::o;1885:656::-;2068:4;2086:7;2107;2275:8;:14;;;2257:8;:14;;;:32;2256:92;;;;;2331:8;:16;;;2311:8;:16;;;:36;2256:92;:151;;;;;2391:15;2369:8;:18;;;:37;;2256:151;:208;;;;;2448:15;2428:8;:16;;;:35;;2234:300;-1:-1:-1;;;2479:16:2;;;;2509:15;;;;1885:656;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1913:2:5;2161:73:0::1;::::0;::::1;1895:21:5::0;1952:2;1932:18;;;1925:30;1991:34;1971:18;;;1964:62;-1:-1:-1;;;2042:18:5;;;2035:36;2088:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2320:2:5;1414:68:0;;;2302:21:5;;;2339:18;;;2332:30;2398:34;2378:18;;;2371:62;2450:18;;1414:68:0;2118:356:5;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;196:677:5:-;322:6;330;383:2;371:9;362:7;358:23;354:32;351:52;;;399:1;396;389:12;351:52;439:9;426:23;468:18;509:2;501:6;498:14;495:34;;;525:1;522;515:12;495:34;548:22;;;;604:3;586:16;;;582:26;579:46;;;621:1;618;611:12;579:46;644:2;;-1:-1:-1;699:2:5;684:18;;671:32;;715:16;;;712:36;;;744:1;741;734:12;712:36;-1:-1:-1;767:24:5;;825:3;807:16;;;803:26;800:46;;;842:1;839;832:12;800:46;865:2;855:12;;;196:677;;;;;:::o;1420:286::-;1479:6;1532:2;1520:9;1511:7;1507:23;1503:32;1500:52;;;1548:1;1545;1538:12;1500:52;1574:23;;-1:-1:-1;;;;;1626:31:5;;1616:42;;1606:70;;1672:1;1669;1662:12;1606:70;1695:5;1420:286;-1:-1:-1;;;1420:286:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "252800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ACTIVITY_ADDRESS()": "2382",
								"PROTOCOL_FEE()": "infinite",
								"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "3045",
								"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "787",
								"owner()": "2331",
								"renounceOwnership()": "infinite",
								"setFreeAddress(address)": "27883",
								"transferOwnership(address)": "28386",
								"viewProtocolFee()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 785,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 785,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 785,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 707,
									"end": 785,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 707,
									"end": 785,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 707,
									"end": 785,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 707,
									"end": 785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 707,
									"end": 785,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 707,
									"end": 785,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 751,
									"end": 778,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 751,
									"end": 778,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "149"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 2937,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3df5b76f3299f9973784e839fe42236312f53315fcf58ff3c60ffee01cee6a364736f6c63430008110033",
									".code": [
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "9DD1CDA6"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "B2D234FB"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "D310677D"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "B4501FD"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "2A75FFEE"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "5DDCD564"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 412,
											"end": 2937,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 464,
											"end": 501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 501,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 464,
											"end": 501,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 464,
											"end": 501,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 464,
											"end": 501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 501,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 981,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1099,
											"end": 1113,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1113,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1149,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 878,
											"end": 1207,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 507,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 507,
											"end": 538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 507,
											"end": 538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1358,
											"end": 1409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1358,
											"end": 1409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1349,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 507,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1212,
											"end": 1415,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2831,
											"end": 2935,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2831,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2928,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2831,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2831,
											"end": 2935,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2546,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2546,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1885,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1885,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1163,
											"end": 1167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1382,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1388,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1364,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1370,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1356,
											"end": 1370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1370,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1355,
											"end": 1447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1438,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1446,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1418,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1410,
											"end": 1426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1426,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1446,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1447,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1355,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1506,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1355,
											"end": 1506,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1505,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1505,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1468,
											"end": 1505,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1506,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1355,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1563,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1563,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1355,
											"end": 1563,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1562,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1535,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1562,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1527,
											"end": 1562,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1563,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1355,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1621,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1621,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1355,
											"end": 1621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1605,
											"end": 1621,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1605,
											"end": 1621,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1605,
											"end": 1621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1582,
											"end": 1601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1582,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1621,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1621,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1355,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1681,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1666,
											"end": 1681,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1681,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2619,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2665,
											"end": 2693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "CE1CBF52B22F02D931C3C4303058071609FA6632B75130966E8ABE92DDC2C2E1"
										},
										{
											"begin": 2665,
											"end": 2693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 2693,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2289,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2265,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2271,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2289,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2348,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2256,
											"end": 2348,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2339,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2347,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2331,
											"end": 2347,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2347,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2319,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2327,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2311,
											"end": 2327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2311,
											"end": 2347,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2348,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2256,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2407,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2256,
											"end": 2407,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2406,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2377,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "PUSH",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2406,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2407,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2256,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2256,
											"end": 2464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2463,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2436,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "PUSH",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2479,
											"end": 2495,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2479,
											"end": 2495,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2495,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2524,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1954,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 2026,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2088,
											"end": 2107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2362,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2432,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2433,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2118,
											"end": 2474,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 873,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 196,
											"end": 873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 322,
											"end": 328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 336,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 380,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 362,
											"end": 369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 358,
											"end": 381,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 354,
											"end": 386,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 403,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 351,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 351,
											"end": 403,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 399,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 397,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 401,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 403,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 351,
											"end": 403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 439,
											"end": 448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 426,
											"end": 449,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 468,
											"end": 486,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 509,
											"end": 511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 498,
											"end": 512,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 495,
											"end": 529,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 495,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 495,
											"end": 529,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 527,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 495,
											"end": 529,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 495,
											"end": 529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 548,
											"end": 570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 548,
											"end": 570,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 548,
											"end": 570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 548,
											"end": 570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 604,
											"end": 607,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 586,
											"end": 602,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 586,
											"end": 602,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 586,
											"end": 602,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 582,
											"end": 608,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 579,
											"end": 625,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 579,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 579,
											"end": 625,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 621,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 623,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 579,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 579,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 644,
											"end": 646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 644,
											"end": 646,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 671,
											"end": 703,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 671,
											"end": 703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 731,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 715,
											"end": 731,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 712,
											"end": 748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 712,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 712,
											"end": 748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 744,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 734,
											"end": 746,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 712,
											"end": 748,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 712,
											"end": 748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 767,
											"end": 791,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 767,
											"end": 791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 828,
											"name": "PUSH",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 807,
											"end": 823,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 823,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 807,
											"end": 823,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 803,
											"end": 829,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 800,
											"end": 846,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 800,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 832,
											"end": 844,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 800,
											"end": 846,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 800,
											"end": 846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 855,
											"end": 867,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 855,
											"end": 867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 855,
											"end": 867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 873,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 196,
											"end": 873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 873,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 196,
											"end": 873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 196,
											"end": 873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1420,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1535,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1550,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1500,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1657,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1658,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1606,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1420,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1420,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/execution/StrategyActivity.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/libraries/OrderTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ACTIVITY_ADDRESS()": "5ddcd564",
							"PROTOCOL_FEE()": "0b4501fd",
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setFreeAddress(address)": "b2d234fb",
							"transferOwnership(address)": "f2fde38b",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"UpdateActivity\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACTIVITY_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_freeAddress\",\"type\":\"address\"}],\"name\":\"setFreeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_protocolFee\":\"protocol fee (200 --> 2%, 400 --> 4%)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StrategyStandardSaleForFixedPrice\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"}},\"notice\":\"Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/StrategyActivity.sol\":\"StrategyAct\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Manager/execution/StrategyActivity.sol\":{\"keccak256\":\"0x6ea12846453a04d93140c02d6fb86bfda0de905f41e29a785fbcca7106e5af4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb3f57212a084f442142c791a9e7156a2e454c58ace3153ac77218e893f1213e\",\"dweb:/ipfs/QmbVvbf1BSv6LM7Yw9YsiqmbJLDfU4ceduRRhv4X37BK4M\"]},\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/execution/StrategyActivity.sol:StrategyAct",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 151,
								"contract": "contracts/Manager/execution/StrategyActivity.sol:StrategyAct",
								"label": "ACTIVITY_ADDRESS",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor"
							}
						},
						"notice": "Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.",
						"version": 1
					}
				}
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"TheExStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":\"TheExStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/OrderTypes.sol": {
				"OrderTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;273:2505:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAE 0xE3 LOG2 STOP SWAP8 INVALID 0xC3 0xD7 0x27 LOG4 0xAC 0x2F 0xAF 0xE0 0x23 0xDD 0xD1 OR PUSH19 0xFBF882AC4BCB4DF06EB4AF1864736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"hash(struct OrderTypes.MakerOrder memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039aee3a20097fec3d727a4ac2fafe023ddd11772fbf882ac4bcb4df06eb4af1864736f6c63430008110033",
									".code": [
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/execution/StrategyActivity.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/libraries/OrderTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/OrderTypes.sol\":\"OrderTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/Manager/execution/StrategyActivity.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/StrategyActivity.sol",
					"exportedSymbols": {
						"OrderTypes": [
							435
						],
						"Ownable": [
							112
						],
						"StrategyAct": [
							299
						],
						"TheExStrategy": [
							339
						]
					},
					"id": 300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 113,
							"src": "56:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 137,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "64:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../libraries/OrderTypes.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 436,
							"src": "124:58:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 435,
										"src": "132:10:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
							"file": "./interface/TheExecutionStrategy.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 300,
							"sourceUnit": 340,
							"src": "183:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "TheExStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 339,
										"src": "191:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 144,
										"name": "TheExStrategy",
										"nameLocations": [
											"436:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 339,
										"src": "436:13:2"
									},
									"id": 145,
									"nodeType": "InheritanceSpecifier",
									"src": "436:13:2"
								},
								{
									"baseName": {
										"id": 146,
										"name": "Ownable",
										"nameLocations": [
											"451:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "451:7:2"
									},
									"id": 147,
									"nodeType": "InheritanceSpecifier",
									"src": "451:7:2"
								}
							],
							"canonicalName": "StrategyAct",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 143,
								"nodeType": "StructuredDocumentation",
								"src": "252:159:2",
								"text": " @title StrategyStandardSaleForFixedPrice\n @notice Strategy that executes an order at a fixed price that\n can be taken either by a bid or an ask."
							},
							"fullyImplemented": true,
							"id": 299,
							"linearizedBaseContracts": [
								299,
								112,
								134,
								339
							],
							"name": "StrategyAct",
							"nameLocation": "421:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0b4501fd",
									"id": 149,
									"mutability": "immutable",
									"name": "PROTOCOL_FEE",
									"nameLocation": "489:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "464:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ddcd564",
									"id": 151,
									"mutability": "mutable",
									"name": "ACTIVITY_ADDRESS",
									"nameLocation": "522:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 299,
									"src": "507:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 150,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ce1cbf52b22f02d931c3c4303058071609fa6632b75130966e8abe92ddc2c2e1",
									"id": 155,
									"name": "UpdateActivity",
									"nameLocation": "550:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "581:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "565:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:28:2"
									},
									"src": "544:49:2"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "741:44:2",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "PROTOCOL_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "751:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_protocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "766:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "751:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "751:27:2"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "599:103:2",
										"text": " @notice Constructor\n @param _protocolFee protocol fee (200 --> 2%, 400 --> 4%)"
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_protocolFee",
												"nameLocation": "727:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "719:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:22:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "741:0:2"
									},
									"scope": 299,
									"src": "707:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										318
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1224:474:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 186,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 182,
																									"name": "makerBid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 172,
																									"src": "1356:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																										"typeString": "struct OrderTypes.MakerOrder calldata"
																									}
																								},
																								"id": 183,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1365:5:2",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 352,
																								"src": "1356:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 184,
																									"name": "takerAsk",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 169,
																									"src": "1374:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
																										"typeString": "struct OrderTypes.TakerOrder calldata"
																									}
																								},
																								"id": 185,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1383:5:2",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 383,
																								"src": "1374:14:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1356:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 187,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1355:34:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 192,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 188,
																									"name": "makerBid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 172,
																									"src": "1410:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																										"typeString": "struct OrderTypes.MakerOrder calldata"
																									}
																								},
																								"id": 189,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1419:7:2",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 354,
																								"src": "1410:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"expression": {
																									"id": 190,
																									"name": "takerAsk",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 169,
																									"src": "1430:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
																										"typeString": "struct OrderTypes.TakerOrder calldata"
																									}
																								},
																								"id": 191,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1439:7:2",
																								"memberName": "tokenId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 385,
																								"src": "1430:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1410:36:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 193,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1409:38:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "1355:92:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 199,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 195,
																								"name": "makerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 172,
																								"src": "1468:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 196,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1477:9:2",
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 364,
																							"src": "1468:18:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"id": 197,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "1490:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 198,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1496:9:2",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "1490:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1468:37:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 200,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1467:39:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "1355:151:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 206,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 202,
																							"name": "makerBid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 172,
																							"src": "1527:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																								"typeString": "struct OrderTypes.MakerOrder calldata"
																							}
																						},
																						"id": 203,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1536:7:2",
																						"memberName": "endTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 366,
																						"src": "1527:16:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 204,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1547:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 205,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1553:9:2",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "1547:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1527:35:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 207,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1526:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1355:208:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 209,
																				"name": "makerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 172,
																				"src": "1582:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																					"typeString": "struct OrderTypes.MakerOrder calldata"
																				}
																			},
																			"id": 210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1591:10:2",
																			"memberName": "collection",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 350,
																			"src": "1582:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 211,
																			"name": "ACTIVITY_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "1605:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1582:39:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1355:266:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 214,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1354:268:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 215,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1636:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1645:7:2",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 354,
															"src": "1636:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 217,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "1666:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1675:6:2",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 356,
															"src": "1666:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 219,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1353:338:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 181,
												"id": 220,
												"nodeType": "Return",
												"src": "1346:345:2"
											}
										]
									},
									"functionSelector": "2a75ffee",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "990:13:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1124:8:2"
									},
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "1035:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1004:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 167,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"1004:10:2",
															"1015:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 390,
														"src": "1004:21:2"
													},
													"referencedDeclaration": 390,
													"src": "1004:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$390_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "1076:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1045:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"1045:10:2",
															"1056:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 377,
														"src": "1045:21:2"
													},
													"referencedDeclaration": 377,
													"src": "1045:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$377_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:82:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1163:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1163:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1181:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1202:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1149:70:2"
									},
									"scope": 299,
									"src": "981:717:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										333
									],
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2129:412:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 242,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 238,
																								"name": "makerAsk",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 228,
																								"src": "2257:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 239,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2266:5:2",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 352,
																							"src": "2257:14:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 240,
																								"name": "takerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 225,
																								"src": "2275:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
																									"typeString": "struct OrderTypes.TakerOrder calldata"
																								}
																							},
																							"id": 241,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2284:5:2",
																							"memberName": "price",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 383,
																							"src": "2275:14:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2257:32:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 243,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2256:34:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 248,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 244,
																								"name": "makerAsk",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 228,
																								"src": "2311:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																									"typeString": "struct OrderTypes.MakerOrder calldata"
																								}
																							},
																							"id": 245,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2320:7:2",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 354,
																							"src": "2311:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"expression": {
																								"id": 246,
																								"name": "takerBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 225,
																								"src": "2331:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
																									"typeString": "struct OrderTypes.TakerOrder calldata"
																								}
																							},
																							"id": 247,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2340:7:2",
																							"memberName": "tokenId",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 385,
																							"src": "2331:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2311:36:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 249,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2310:38:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2256:92:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 251,
																							"name": "makerAsk",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 228,
																							"src": "2369:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																								"typeString": "struct OrderTypes.MakerOrder calldata"
																							}
																						},
																						"id": 252,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2378:9:2",
																						"memberName": "startTime",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 364,
																						"src": "2369:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 253,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "2391:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 254,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2397:9:2",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "2391:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2369:37:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 256,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2368:39:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2256:151:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 258,
																						"name": "makerAsk",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 228,
																						"src": "2428:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																							"typeString": "struct OrderTypes.MakerOrder calldata"
																						}
																					},
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2437:7:2",
																					"memberName": "endTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 366,
																					"src": "2428:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"expression": {
																						"id": 260,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2448:5:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2454:9:2",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2448:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2428:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 263,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2427:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2256:208:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 265,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2255:210:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 266,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2488:7:2",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 354,
															"src": "2479:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 268,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "2509:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2518:6:2",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 356,
															"src": "2509:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 270,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2241:293:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"functionReturnParameters": 237,
												"id": 271,
												"nodeType": "Return",
												"src": "2234:300:2"
											}
										]
									},
									"functionSelector": "d310677d",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "1894:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 230,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2029:8:2"
									},
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "1940:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1909:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"1909:10:2",
															"1920:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 390,
														"src": "1909:21:2"
													},
													"referencedDeclaration": 390,
													"src": "1909:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$390_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "1981:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1950:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 227,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 226,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"1950:10:2",
															"1961:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 377,
														"src": "1950:21:2"
													},
													"referencedDeclaration": 377,
													"src": "1950:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$377_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:82:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2068:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2068:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2086:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2107:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:70:2"
									},
									"scope": 299,
									"src": "1885:656:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2609:91:2",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "ACTIVITY_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2619:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 281,
														"name": "_freeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2619:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2619:31:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 285,
															"name": "_freeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "2680:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 284,
														"name": "UpdateActivity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "2665:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2665:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "EmitStatement",
												"src": "2660:33:2"
											}
										]
									},
									"functionSelector": "b2d234fb",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 277,
												"name": "onlyOwner",
												"nameLocations": [
													"2600:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2600:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2600:9:2"
										}
									],
									"name": "setFreeAddress",
									"nameLocation": "2555:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_freeAddress",
												"nameLocation": "2578:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2570:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:2"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2609:0:2"
									},
									"scope": 299,
									"src": "2546:154:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										338
									],
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2899:36:2",
										"statements": [
											{
												"expression": {
													"id": 295,
													"name": "PROTOCOL_FEE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 149,
													"src": "2916:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "2909:19:2"
											}
										]
									},
									"functionSelector": "9dd1cda6",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "2840:15:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2872:8:2"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:2:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2890:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2890:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2889:9:2"
									},
									"scope": 299,
									"src": "2831:104:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 300,
							"src": "412:2525:2",
							"usedErrors": []
						}
					],
					"src": "32:2906:2"
				},
				"id": 2
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
					"exportedSymbols": {
						"OrderTypes": [
							435
						],
						"TheExStrategy": [
							339
						]
					},
					"id": 340,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 301,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../../libraries/OrderTypes.sol",
							"id": 303,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 340,
							"sourceUnit": 436,
							"src": "57:61:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 302,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 435,
										"src": "65:10:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "TheExStrategy",
							"nameLocation": "130:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2a75ffee",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "159:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "204:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "173:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 305,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 304,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"173:10:3",
															"184:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 390,
														"src": "173:21:3"
													},
													"referencedDeclaration": 390,
													"src": "173:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$390_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "245:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "214:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"214:10:3",
															"225:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 377,
														"src": "214:21:3"
													},
													"referencedDeclaration": 377,
													"src": "214:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$377_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:82:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "315:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "333:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "354:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:70:3"
									},
									"scope": 339,
									"src": "150:222:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d310677d",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "387:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "433:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "402:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$390_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 319,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"402:10:3",
															"413:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 390,
														"src": "402:21:3"
													},
													"referencedDeclaration": 390,
													"src": "402:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$390_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "474:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "443:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$377_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"443:10:3",
															"454:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 377,
														"src": "443:21:3"
													},
													"referencedDeclaration": 377,
													"src": "443:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$377_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:82:3"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "544:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "562:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "583:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:70:3"
									},
									"scope": 339,
									"src": "378:223:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd1cda6",
									"id": 338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "616:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "657:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:3"
									},
									"scope": 339,
									"src": "607:59:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 340,
							"src": "120:548:3",
							"usedErrors": []
						}
					],
					"src": "32:637:3"
				},
				"id": 3
			},
			"contracts/libraries/OrderTypes.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/OrderTypes.sol",
					"exportedSymbols": {
						"OrderTypes": [
							435
						]
					},
					"id": 436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OrderTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 435,
							"linearizedBaseContracts": [
								435
							],
							"name": "OrderTypes",
							"nameLocation": "281:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 344,
									"mutability": "constant",
									"name": "MAKER_ORDER_HASH",
									"nameLocation": "573:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "547:111:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 342,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834303236316164653533326661316432633732393364663330616161646239623363363136666165353235613062353664336434313163383431613835303238",
										"id": 343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "592:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_29015347937064319049656096072445641795799588500519861140121276013747802492968_by_1",
											"typeString": "int_const 2901...(69 digits omitted)...2968"
										},
										"value": "0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "OrderTypes.MakerOrder",
									"id": 377,
									"members": [
										{
											"constant": false,
											"id": 346,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "698:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "693:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 345,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "693:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 348,
											"mutability": "mutable",
											"name": "signer",
											"nameLocation": "758:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "750:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 347,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 350,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "811:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "803:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 349,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "803:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "861:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "853:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 351,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "853:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "904:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "896:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 353,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 356,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "948:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "940:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 355,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "940:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 358,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "1048:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1040:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 357,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1040:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 360,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "1154:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1146:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 359,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1146:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 362,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1205:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1197:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 361,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1197:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 364,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1339:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1331:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 363,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 366,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1392:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1384:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 365,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1384:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 368,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1441:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1433:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 367,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1433:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 370,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "1551:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1545:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 369,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1545:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "1598:1:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1592:7:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 371,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1592:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 374,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "1644:1:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1636:9:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 373,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1636:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 376,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "1679:1:4",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "1671:9:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 375,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1671:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MakerOrder",
									"nameLocation": "672:10:4",
									"nodeType": "StructDefinition",
									"scope": 435,
									"src": "665:1038:4",
									"visibility": "public"
								},
								{
									"canonicalName": "OrderTypes.TakerOrder",
									"id": 390,
									"members": [
										{
											"constant": false,
											"id": 379,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "1742:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1737:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 378,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1737:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 381,
											"mutability": "mutable",
											"name": "taker",
											"nameLocation": "1802:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1794:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 380,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1794:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 383,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1839:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1831:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 382,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1831:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 385,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1894:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1886:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 384,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1886:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 387,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1919:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1911:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 386,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1911:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 389,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "2032:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "2026:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 388,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2026:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TakerOrder",
									"nameLocation": "1716:10:4",
									"nodeType": "StructDefinition",
									"scope": 435,
									"src": "1709:368:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "2160:616:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 401,
																	"name": "MAKER_ORDER_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "2236:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 402,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2270:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2281:10:4",
																	"memberName": "isOrderAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "2270:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"id": 404,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2309:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2320:6:4",
																	"memberName": "signer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 348,
																	"src": "2309:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 406,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2344:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2355:10:4",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 350,
																	"src": "2344:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 408,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2383:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2394:5:4",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 352,
																	"src": "2383:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 410,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2417:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2428:7:4",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 354,
																	"src": "2417:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 412,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2453:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:6:4",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "2453:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 414,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2488:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2499:8:4",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 358,
																	"src": "2488:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 416,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2525:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2536:8:4",
																	"memberName": "currency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "2525:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 418,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2562:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2573:5:4",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 362,
																	"src": "2562:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 420,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2596:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2607:9:4",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 364,
																	"src": "2596:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 422,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2634:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2645:7:4",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 366,
																	"src": "2634:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 424,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "2670:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2681:18:4",
																	"memberName": "minPercentageToAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 368,
																	"src": "2670:29:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 427,
																				"name": "makerOrder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "2727:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
																					"typeString": "struct OrderTypes.MakerOrder memory"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2738:6:4",
																			"memberName": "params",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 370,
																			"src": "2727:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 426,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2717:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2717:28:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 399,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2208:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2212:6:4",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2208:551:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 398,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2185:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:584:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 397,
												"id": 432,
												"nodeType": "Return",
												"src": "2170:599:4"
											}
										]
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2093:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "makerOrder",
												"nameLocation": "2116:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2098:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$377_memory_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 391,
														"name": "MakerOrder",
														"nameLocations": [
															"2098:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 377,
														"src": "2098:10:4"
													},
													"referencedDeclaration": 377,
													"src": "2098:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$377_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:30:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2151:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:9:4"
									},
									"scope": 435,
									"src": "2084:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 436,
							"src": "273:2505:4",
							"usedErrors": []
						}
					],
					"src": "32:2747:4"
				},
				"id": 4
			}
		}
	}
}