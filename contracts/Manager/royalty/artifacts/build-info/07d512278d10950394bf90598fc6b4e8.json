{
	"id": "07d512278d10950394bf90598fc6b4e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IOwnable} from \"../interface/IOwnable.sol\";\n\nimport {IRoyaltyFeeRegistry} from \"./interface/IRoyaltyFeeRegistry.sol\";\n\n//  register royalty fee\ncontract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {\n    struct FeeInfo {\n        address setter;\n        address receiver;\n        uint256 fee;\n    }\n       // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    // ERC2981 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    // limit max royalty fee（10,000 = 100%）\n    uint256 public royaltyFeeLimit;\n\n    //compile royalty information mapping \n    mapping(address => FeeInfo) private _royaltyFeeInfoCollection;\n\n    event NewRoyaltyFeeLimit(uint256 royaltyFeeLimit);\n    event RoyaltyFeeUpdate(address indexed collection, address indexed setter, address indexed receiver, uint256 fee);\n\n    //  initialize royalty fee\n    constructor(uint256 _royaltyFeeLimit) {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n    }\n\n    // Update a collection's upper limit of royalty fee\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n\n        emit NewRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal{\n        require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\");\n\n        _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee});\n\n        emit RoyaltyFeeUpdate(collection, setter, receiver, fee);\n    }\n\n    //\n    // function royaltyInfo\n    //  @Description: calculate royalty fee\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {\n        return (\n        _royaltyFeeInfoCollection[collection].receiver,\n        (amount * _royaltyFeeInfoCollection[collection].fee) / 10000\n        );\n    }\n    /*Check collection information*/\n    function royaltyFeeInfoCollection(address collection)\n    external\n    view\n    override\n    returns (\n        address,\n        address,\n        uint256\n    )\n    {\n        return (\n        _royaltyFeeInfoCollection[collection].setter,\n        _royaltyFeeInfoCollection[collection].receiver,\n        _royaltyFeeInfoCollection[collection].fee\n        );\n    }\n\n\n   function updateRoyaltyInfoForCollectionIfSetter(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        address currentSetter = _royaltyFeeInfoCollection[collection].setter;\n        require(msg.sender == currentSetter, \"Setter: Not the setter\");\n\n        updateRoyaltyInfoForCollection(collection, setter, receiver, fee);\n    }\n\n\n        //\n    // function checkForCollectionSetter\n    //  @Description: Confirm royalty fee seeting information\n    //  @param address\n    //  @return external Return editor, regarless of admin or owner\n    //\n    function checkForCollectionSetter(address collection) external view returns (address, uint8) {\n        address currentSetter = _royaltyFeeInfoCollection[collection].setter;\n        if (currentSetter != address(0)){\n            return (currentSetter,0);\n        }\n        try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {\n            if (interfaceSupport) {\n                return (address(0), 1);\n            }\n        } catch {}\n\n        try IOwnable(collection).owner() returns (address setter) {\n            return (setter, 2);\n        } catch {\n            try IOwnable(collection).admin() returns (address setter) {\n                return (setter, 3);\n            } catch {\n                return (address(0), 4);\n            }\n        }\n    }\n\n    //\n    // function updateRoyaltyInfoForCollectionIfAdmin\n    //  @Description: Update royalty info if this is the admin of the collection\n    //  @param address collection address\n    //  @param address  Editor address\n    //  @param address  Wallet address receiving royalty fee\n    //  @param uint256 royalty fee 500=5%\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        //https://eips.ethereum.org/EIPS/eip-2981\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).admin(), \" Not the admin\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // tion updateRoyaltyInfoForCollectionIfOwner\n    //  @Description: Update royalty info if this is the owner of the collection\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfOwner(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).owner(), \" Not the owner\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin\n    //  @Description: Update royalty fee information\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return internal\n    //\n    function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal {\n        address currentSetter = _royaltyFeeInfoCollection[collection].setter;\n        require(currentSetter == address(0), \"Already set\");\n\n        require(\n            (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||\n        IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)),\n            \" Not Set of ERC721/ERC1155\"\n        );\n\n        updateRoyaltyInfoForCollection(collection, setter, receiver, fee);\n    }\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n  \n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IOwnable {\n    function transferOwnership(address newOwner) external;\n\n    function owner() external view returns (address);\n\n    function admin() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"RoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "NewRoyaltyFeeLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "RoyaltyFeeUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkForCollectionSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6847  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1194:1398  constructor(uint256 _royaltyFeeLimit) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1312:1316  9500 */\n  0x251c\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1292:1308  _royaltyFeeLimit */\n  dup2\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1292:1316  _royaltyFeeLimit <= 9500 */\n  gt\n  iszero\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":405:407   */\n  0x20\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":387:408   */\n  mstore\n    /* \"#utility.yul\":444:446   */\n  0x1a\n    /* \"#utility.yul\":424:442   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":417:447   */\n  mstore\n    /* \"#utility.yul\":483:511   */\n  0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n    /* \"#utility.yul\":463:481   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":456:512   */\n  mstore\n    /* \"#utility.yul\":529:547   */\n  0x64\n  add\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1357:1372  royaltyFeeLimit */\n  0x01\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1357:1391  royaltyFeeLimit = _royaltyFeeLimit */\n  sstore\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6847  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:553   */\ntag_18:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6847  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6847  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xab016670\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbc6bc0cd\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc54e5497\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe31ef91c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0xab016670\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb060dd86\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb9223c9d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x3755fa80\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x3755fa80\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4fb7d3f9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x275da5ef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2782d6c7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x33bf6156\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3013:3408  function updateRoyaltyInfoForCollectionIfSetter(... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1265:1297   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":1247:1298   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1329:1331   */\n      0x20\n        /* \"#utility.yul\":1314:1332   */\n      dup4\n      add\n        /* \"#utility.yul\":1307:1341   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1220:1238   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":639:695  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_5:\n      tag_30\n      shl(0xe1, 0x6cdb3d13)\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5546:5987  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_6:\n      tag_20\n      tag_35\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":840:870  uint256 public royaltyFeeLimit */\n    tag_7:\n      tag_37\n      sload(0x01)\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1705:1730   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1693:1695   */\n      0x20\n        /* \"#utility.yul\":1678:1696   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":840:870  uint256 public royaltyFeeLimit */\n      tag_28\n        /* \"#utility.yul\":1559:1736   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_20\n      tag_42\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1887:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1875:1877   */\n      0x20\n        /* \"#utility.yul\":1860:1878   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":1741:1944   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4787:5278  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_10:\n      tag_20\n      tag_48\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":729:785  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_11:\n      tag_30\n      shl(0xe1, 0x152a902d)\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_12:\n      tag_20\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":550:605  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_13:\n      tag_30\n      shl(0xe0, 0x80ac58cd)\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_14:\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2574:2606   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2556:2607   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2655:2659   */\n      0xff\n        /* \"#utility.yul\":2643:2660   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2638:2640   */\n      0x20\n        /* \"#utility.yul\":2623:2641   */\n      dup4\n      add\n        /* \"#utility.yul\":2616:2661   */\n      mstore\n        /* \"#utility.yul\":2529:2547   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      tag_28\n        /* \"#utility.yul\":2386:2667   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2649:3007  function royaltyFeeInfoCollection(address collection)... */\n    tag_15:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2876  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2760:2767  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2876  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2864  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2876  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2883  _royaltyFeeInfoCollection[collection].setter */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2893:2939  _royaltyFeeInfoCollection[collection].receiver */\n      dup3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2949:2990  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2883  _royaltyFeeInfoCollection[collection].setter */\n      swap2\n      dup4\n      and\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2893:2939  _royaltyFeeInfoCollection[collection].receiver */\n      swap3\n      and\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2649:3007  function royaltyFeeInfoCollection(address collection)... */\n      jump\n    tag_66:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2930:2945   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":2912:2946   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2982:2997   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2977:2979   */\n      0x20\n        /* \"#utility.yul\":2962:2980   */\n      dup5\n      add\n        /* \"#utility.yul\":2955:2998   */\n      mstore\n        /* \"#utility.yul\":3014:3032   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3007:3041   */\n      mstore\n        /* \"#utility.yul\":2862:2864   */\n      0x60\n        /* \"#utility.yul\":2847:2865   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2649:3007  function royaltyFeeInfoCollection(address collection)... */\n      tag_28\n        /* \"#utility.yul\":2672:3047   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_20\n      tag_72\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3013:3408  function updateRoyaltyInfoForCollectionIfSetter(... */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3209:3246  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup6\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3185:3206  address currentSetter */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3209:3246  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3209:3234  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3209:3246  _royaltyFeeInfoCollection[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3209:3253  _royaltyFeeInfoCollection[collection].setter */\n      sload\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3271:3281  msg.sender */\n      caller\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3271:3298  msg.sender == currentSetter */\n      dup2\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3263:3325  require(msg.sender == currentSetter, \"Setter: Not the setter\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3254:3256   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3263:3325  require(msg.sender == currentSetter, \"Setter: Not the setter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3236:3257   */\n      mstore\n        /* \"#utility.yul\":3293:3295   */\n      0x16\n        /* \"#utility.yul\":3273:3291   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3266:3296   */\n      mstore\n      shl(0x51, 0x29b2ba3a32b91d102737ba103a34329039b2ba3a32b9)\n        /* \"#utility.yul\":3312:3330   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3305:3357   */\n      mstore\n        /* \"#utility.yul\":3374:3392   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3263:3325  require(msg.sender == currentSetter, \"Setter: Not the setter\") */\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3336:3401  updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      tag_78\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3367:3377  collection */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3379:3385  setter */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3387:3395  receiver */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3397:3400  fee */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3336:3366  updateRoyaltyInfoForCollection */\n      tag_79\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3336:3401  updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3175:3408  {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3013:3408  function updateRoyaltyInfoForCollectionIfSetter(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2511  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup4\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2429:2436  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2511  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2499  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2511  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2520  _royaltyFeeInfoCollection[collection].receiver */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2540:2581  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2429:2436  address */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2520  _royaltyFeeInfoCollection[collection].receiver */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2585:2590  10000 */\n      0x2710\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2531:2581  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_81\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2531:2537  amount */\n      dup7\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2531:2581  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2530:2590  (amount * _royaltyFeeInfoCollection[collection].fee) / 10000 */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2457:2600  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5546:5987  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_36:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5726:5785  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5726:5763  IERC165(collection).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5726:5785  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      tag_86\n      swap1\n      shl(0xe1, 0x152a902d)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5764:5784  INTERFACE_ID_ERC2981 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5726:5785  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5725:5785  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5717:5810  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4379:4381   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5717:5810  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4361:4382   */\n      mstore\n        /* \"#utility.yul\":4418:4420   */\n      0x14\n        /* \"#utility.yul\":4398:4416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4391:4421   */\n      mstore\n      shl(0x60, 0x204d757374206e6f742062652045524332393831)\n        /* \"#utility.yul\":4437:4455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4430:4480   */\n      mstore\n        /* \"#utility.yul\":4497:4515   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5717:5810  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_76\n        /* \"#utility.yul\":4177:4521   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5717:5810  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_91:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5851:5861  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5842:5868  IOwnable(collection).owner */\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5842:5870  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5828:5870  msg.sender == IOwnable(collection).owner() */\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5828:5838  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5828:5870  msg.sender == IOwnable(collection).owner() */\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5820:5889  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4984:4986   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5820:5889  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4966:4987   */\n      mstore\n        /* \"#utility.yul\":5023:5025   */\n      0x0e\n        /* \"#utility.yul\":5003:5021   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4996:5026   */\n      mstore\n      shl(0x91, 0x102737ba103a34329037bbb732b9)\n        /* \"#utility.yul\":5042:5060   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5035:5079   */\n      mstore\n        /* \"#utility.yul\":5096:5114   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5820:5889  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_76\n        /* \"#utility.yul\":4782:5120   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5820:5889  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n    tag_98:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5900:5980  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      tag_101\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5946:5956  collection */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5958:5964  setter */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5966:5974  receiver */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5976:5979  fee */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5900:5945  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin */\n      tag_102\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5900:5980  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5546:5987  function updateRoyaltyInfoForCollectionIfOwner(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4787:5278  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_49:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5017:5076  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5017:5054  IERC165(collection).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5017:5076  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      tag_111\n      swap1\n      shl(0xe1, 0x152a902d)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5055:5075  INTERFACE_ID_ERC2981 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5017:5076  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_114:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5016:5076  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5008:5101  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4379:4381   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5008:5101  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4361:4382   */\n      mstore\n        /* \"#utility.yul\":4418:4420   */\n      0x14\n        /* \"#utility.yul\":4398:4416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4391:4421   */\n      mstore\n      shl(0x60, 0x204d757374206e6f742062652045524332393831)\n        /* \"#utility.yul\":4437:4455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4430:4480   */\n      mstore\n        /* \"#utility.yul\":4497:4515   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5008:5101  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_76\n        /* \"#utility.yul\":4177:4521   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5008:5101  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_115:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5142:5152  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5133:5159  IOwnable(collection).admin */\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5133:5161  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5119:5161  msg.sender == IOwnable(collection).admin() */\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5119:5129  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5119:5161  msg.sender == IOwnable(collection).admin() */\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5111:5180  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5327:5329   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5111:5180  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5309:5330   */\n      mstore\n        /* \"#utility.yul\":5366:5368   */\n      0x0e\n        /* \"#utility.yul\":5346:5364   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5339:5369   */\n      mstore\n      shl(0x91, 0x102737ba103a34329030b236b4b7)\n        /* \"#utility.yul\":5385:5403   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5378:5422   */\n      mstore\n        /* \"#utility.yul\":5439:5457   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5111:5180  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_76\n        /* \"#utility.yul\":5125:5463   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1625:1629  9500 */\n      0x251c\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1605:1621  _royaltyFeeLimit */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1605:1629  _royaltyFeeLimit <= 9500 */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5670:5672   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5652:5673   */\n      mstore\n        /* \"#utility.yul\":5709:5711   */\n      0x1a\n        /* \"#utility.yul\":5689:5707   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5682:5712   */\n      mstore\n        /* \"#utility.yul\":5748:5776   */\n      0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n        /* \"#utility.yul\":5728:5746   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5721:5777   */\n      mstore\n        /* \"#utility.yul\":5794:5812   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_76\n        /* \"#utility.yul\":5468:5818   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n    tag_127:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1670:1685  royaltyFeeLimit */\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1670:1704  royaltyFeeLimit = _royaltyFeeLimit */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":1705:1730   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      0x2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256\n      swap1\n        /* \"#utility.yul\":1693:1695   */\n      0x20\n        /* \"#utility.yul\":1678:1696   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3754:3791  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3704:3711  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3754:3791  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3754:3779  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3754:3791  _royaltyFeeInfoCollection[collection] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3754:3798  _royaltyFeeInfoCollection[collection].setter */\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3704:3711  address */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3754:3798  _royaltyFeeInfoCollection[collection].setter */\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3812:3839  currentSetter != address(0) */\n      dup1\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3808:3889  if (currentSetter != address(0)){... */\n      tag_132\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3862:3875  currentSetter */\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3876:3877  0 */\n      0x00\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3808:3889  if (currentSetter != address(0)){... */\n    tag_132:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3902:3961  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3902:3939  IERC165(collection).supportsInterface */\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3902:3961  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      tag_133\n      swap1\n      shl(0xe1, 0x152a902d)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3940:3960  INTERFACE_ID_ERC2981 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3902:3961  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_135\n      swap2\n      dup2\n      add\n      swap1\n      tag_90\n      jump\t// in\n    tag_135:\n      0x01\n    tag_134:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3898:4104  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4012:4028  interfaceSupport */\n      dup1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4008:4085  if (interfaceSupport) {... */\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4064:4065  0 */\n      0x00\n      swap5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4068:4069  1 */\n      0x01\n      swap5\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4008:4085  if (interfaceSupport) {... */\n    tag_141:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3962:4095  returns (bool interfaceSupport) {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3898:4104  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n    tag_140:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4127:4137  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4118:4144  IOwnable(collection).owner */\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4118:4146  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_143\n      swap2\n      dup2\n      add\n      swap1\n      tag_97\n      jump\t// in\n    tag_143:\n      0x01\n    tag_142:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4114:4417  try IOwnable(collection).owner() returns (address setter) {... */\n      tag_144\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4249:4259  collection */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4240:4266  IOwnable(collection).admin */\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4240:4268  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_148\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_149\n      swap2\n      dup2\n      add\n      swap1\n      tag_97\n      jump\t// in\n    tag_149:\n      0x01\n    tag_148:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4236:4407  try IOwnable(collection).admin() returns (address setter) {... */\n      tag_150\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4386:4387  0 */\n      0x00\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4390:4391  4 */\n      0x04\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4236:4407  try IOwnable(collection).admin() returns (address setter) {... */\n    tag_150:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4320:4326  setter */\n      swap5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4328:4329  3 */\n      0x03\n      swap5\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4114:4417  try IOwnable(collection).owner() returns (address setter) {... */\n    tag_144:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4194:4200  setter */\n      swap5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4202:4203  2 */\n      0x02\n      swap5\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3627:4423  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6025:6027   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6007:6028   */\n      mstore\n        /* \"#utility.yul\":6064:6066   */\n      0x26\n        /* \"#utility.yul\":6044:6062   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6037:6067   */\n      mstore\n        /* \"#utility.yul\":6103:6137   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6083:6101   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6076:6138   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6154:6172   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6147:6183   */\n      mstore\n        /* \"#utility.yul\":6200:6219   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_76\n        /* \"#utility.yul\":5823:6225   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1769:2177  function updateRoyaltyInfoForCollection(... */\n    tag_79:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1947:1962  royaltyFeeLimit */\n      sload(0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1940:1943  fee */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1940:1962  fee <= royaltyFeeLimit */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6432:6434   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6414:6435   */\n      mstore\n        /* \"#utility.yul\":6471:6473   */\n      0x1e\n        /* \"#utility.yul\":6451:6469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6444:6474   */\n      mstore\n        /* \"#utility.yul\":6510:6542   */\n      0x52656769737472793a20526f79616c74792066656520746f6f20686967680000\n        /* \"#utility.yul\":6490:6508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6483:6543   */\n      mstore\n        /* \"#utility.yul\":6560:6578   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_76\n        /* \"#utility.yul\":6230:6584   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n    tag_165:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2048:2103  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      dup6\n      dup3\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup9\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2045  _royaltyFeeInfoCollection[collection] */\n      dup12\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2033  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2045  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2103  _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      dup11\n      sstore\n      swap4\n      mload\n      0x01\n      dup11\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap10\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap7\n      sstore\n      mload\n      swap6\n      add\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2119:2170  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      swap4\n      mload\n        /* \"#utility.yul\":1705:1730   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2048:2103  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap1\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2119:2170  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      0xd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64\n      swap2\n        /* \"#utility.yul\":1678:1696   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2119:2170  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1769:2177  function updateRoyaltyInfoForCollection(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6239:6845  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6442:6479  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup6\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6418:6439  address currentSetter */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6442:6479  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6442:6467  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6442:6479  _royaltyFeeInfoCollection[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6442:6486  _royaltyFeeInfoCollection[collection].setter */\n      sload\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6504:6531  currentSetter == address(0) */\n      dup1\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6496:6547  require(currentSetter == address(0), \"Already set\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6791:6793   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6496:6547  require(currentSetter == address(0), \"Already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6773:6794   */\n      mstore\n        /* \"#utility.yul\":6830:6832   */\n      0x0b\n        /* \"#utility.yul\":6810:6828   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6803:6833   */\n      mstore\n      shl(0xaa, 0x105b1c9958591e481cd95d)\n        /* \"#utility.yul\":6849:6867   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6842:6883   */\n      mstore\n        /* \"#utility.yul\":6900:6918   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6496:6547  require(currentSetter == address(0), \"Already set\") */\n      tag_76\n        /* \"#utility.yul\":6589:6924   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6496:6547  require(currentSetter == address(0), \"Already set\") */\n    tag_170:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6580:6638  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6580:6617  IERC165(collection).supportsInterface */\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6580:6638  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      tag_173\n      swap1\n      shl(0xe0, 0x80ac58cd)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6618:6637  INTERFACE_ID_ERC721 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6580:6638  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_176:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6580:6709  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||... */\n      dup1\n      tag_181\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6650:6709  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6650:6687  IERC165(collection).supportsInterface */\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6650:6709  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      tag_178\n      swap1\n      shl(0xe1, 0x6cdb3d13)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6688:6708  INTERFACE_ID_ERC1155 */\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6650:6709  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x04\n      add\n      tag_33\n      jump\t// in\n    tag_178:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_181:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6558:6762  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7131:7133   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6558:6762  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7113:7134   */\n      mstore\n        /* \"#utility.yul\":7170:7172   */\n      0x1a\n        /* \"#utility.yul\":7150:7168   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7143:7173   */\n      mstore\n        /* \"#utility.yul\":7209:7237   */\n      0x204e6f7420536574206f66204552433732312f45524331313535000000000000\n        /* \"#utility.yul\":7189:7207   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7182:7238   */\n      mstore\n        /* \"#utility.yul\":7255:7273   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6558:6762  require(... */\n      tag_76\n        /* \"#utility.yul\":6929:7279   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7486:7488   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7468:7489   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7505:7523   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7498:7528   */\n      mstore\n        /* \"#utility.yul\":7564:7598   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7544:7562   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7537:7599   */\n      mstore\n        /* \"#utility.yul\":7616:7634   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n        /* \"#utility.yul\":7284:7640   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:748   */\n    tag_22:\n        /* \"#utility.yul\":236:242   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup1\n        /* \"#utility.yul\":252:258   */\n      0x00\n        /* \"#utility.yul\":260:266   */\n      dup1\n        /* \"#utility.yul\":313:316   */\n      0x80\n        /* \"#utility.yul\":301:310   */\n      dup6\n        /* \"#utility.yul\":292:299   */\n      dup8\n        /* \"#utility.yul\":288:311   */\n      sub\n        /* \"#utility.yul\":284:317   */\n      slt\n        /* \"#utility.yul\":281:334   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":330:331   */\n      0x00\n        /* \"#utility.yul\":327:328   */\n      dup1\n        /* \"#utility.yul\":320:332   */\n      revert\n        /* \"#utility.yul\":281:334   */\n    tag_200:\n        /* \"#utility.yul\":369:378   */\n      dup5\n        /* \"#utility.yul\":356:379   */\n      calldataload\n        /* \"#utility.yul\":388:419   */\n      tag_201\n        /* \"#utility.yul\":413:418   */\n      dup2\n        /* \"#utility.yul\":388:419   */\n      tag_195\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":438:443   */\n      swap4\n      pop\n        /* \"#utility.yul\":495:497   */\n      0x20\n        /* \"#utility.yul\":480:498   */\n      dup6\n      add\n        /* \"#utility.yul\":467:499   */\n      calldataload\n        /* \"#utility.yul\":508:541   */\n      tag_202\n        /* \"#utility.yul\":467:499   */\n      dup2\n        /* \"#utility.yul\":508:541   */\n      tag_195\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":560:567   */\n      swap3\n      pop\n        /* \"#utility.yul\":619:621   */\n      0x40\n        /* \"#utility.yul\":604:622   */\n      dup6\n      add\n        /* \"#utility.yul\":591:623   */\n      calldataload\n        /* \"#utility.yul\":632:665   */\n      tag_203\n        /* \"#utility.yul\":591:623   */\n      dup2\n        /* \"#utility.yul\":632:665   */\n      tag_195\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":150:748   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":684:691   */\n      swap3\n      swap4\n        /* \"#utility.yul\":738:740   */\n      0x60\n        /* \"#utility.yul\":723:741   */\n      add\n        /* \"#utility.yul\":710:742   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":150:748   */\n      jump\t// out\n        /* \"#utility.yul\":753:1068   */\n    tag_26:\n        /* \"#utility.yul\":821:827   */\n      0x00\n        /* \"#utility.yul\":829:835   */\n      dup1\n        /* \"#utility.yul\":882:884   */\n      0x40\n        /* \"#utility.yul\":870:879   */\n      dup4\n        /* \"#utility.yul\":861:868   */\n      dup6\n        /* \"#utility.yul\":857:880   */\n      sub\n        /* \"#utility.yul\":853:885   */\n      slt\n        /* \"#utility.yul\":850:902   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":898:899   */\n      0x00\n        /* \"#utility.yul\":895:896   */\n      dup1\n        /* \"#utility.yul\":888:900   */\n      revert\n        /* \"#utility.yul\":850:902   */\n    tag_205:\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":924:947   */\n      calldataload\n        /* \"#utility.yul\":956:987   */\n      tag_206\n        /* \"#utility.yul\":981:986   */\n      dup2\n        /* \"#utility.yul\":956:987   */\n      tag_195\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1006:1011   */\n      swap5\n        /* \"#utility.yul\":1058:1060   */\n      0x20\n        /* \"#utility.yul\":1043:1061   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1030:1062   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":753:1068   */\n      jump\t// out\n        /* \"#utility.yul\":1352:1554   */\n    tag_33:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1514:1547   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1496:1548   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1484:1486   */\n      0x20\n        /* \"#utility.yul\":1469:1487   */\n      add\n      swap1\n        /* \"#utility.yul\":1352:1554   */\n      jump\t// out\n        /* \"#utility.yul\":1949:2129   */\n    tag_55:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":2100:2123   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1949:2129   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2134:2381   */\n    tag_62:\n        /* \"#utility.yul\":2193:2199   */\n      0x00\n        /* \"#utility.yul\":2246:2248   */\n      0x20\n        /* \"#utility.yul\":2234:2243   */\n      dup3\n        /* \"#utility.yul\":2225:2232   */\n      dup5\n        /* \"#utility.yul\":2221:2244   */\n      sub\n        /* \"#utility.yul\":2217:2249   */\n      slt\n        /* \"#utility.yul\":2214:2266   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2262:2263   */\n      0x00\n        /* \"#utility.yul\":2259:2260   */\n      dup1\n        /* \"#utility.yul\":2252:2264   */\n      revert\n        /* \"#utility.yul\":2214:2266   */\n    tag_214:\n        /* \"#utility.yul\":2301:2310   */\n      dup2\n        /* \"#utility.yul\":2288:2311   */\n      calldataload\n        /* \"#utility.yul\":2320:2351   */\n      tag_215\n        /* \"#utility.yul\":2345:2350   */\n      dup2\n        /* \"#utility.yul\":2320:2351   */\n      tag_195\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2370:2375   */\n      swap4\n        /* \"#utility.yul\":2134:2381   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3403:3668   */\n    tag_82:\n        /* \"#utility.yul\":3476:3485   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3507:3516   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3524:3539   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3518:3540   */\n      dup5\n      eq\n        /* \"#utility.yul\":3504:3541   */\n      or\n        /* \"#utility.yul\":3494:3662   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":3584:3594   */\n      0x4e487b71\n        /* \"#utility.yul\":3579:3582   */\n      0xe0\n        /* \"#utility.yul\":3575:3595   */\n      shl\n        /* \"#utility.yul\":3572:3573   */\n      0x00\n        /* \"#utility.yul\":3565:3596   */\n      mstore\n        /* \"#utility.yul\":3619:3623   */\n      0x11\n        /* \"#utility.yul\":3616:3617   */\n      0x04\n        /* \"#utility.yul\":3609:3624   */\n      mstore\n        /* \"#utility.yul\":3647:3651   */\n      0x24\n        /* \"#utility.yul\":3644:3645   */\n      0x00\n        /* \"#utility.yul\":3637:3652   */\n      revert\n        /* \"#utility.yul\":3494:3662   */\n    tag_220:\n        /* \"#utility.yul\":3403:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3673:3890   */\n    tag_84:\n        /* \"#utility.yul\":3713:3714   */\n      0x00\n        /* \"#utility.yul\":3739:3740   */\n      dup3\n        /* \"#utility.yul\":3729:3861   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":3783:3793   */\n      0x4e487b71\n        /* \"#utility.yul\":3778:3781   */\n      0xe0\n        /* \"#utility.yul\":3774:3794   */\n      shl\n        /* \"#utility.yul\":3771:3772   */\n      0x00\n        /* \"#utility.yul\":3764:3795   */\n      mstore\n        /* \"#utility.yul\":3818:3822   */\n      0x12\n        /* \"#utility.yul\":3815:3816   */\n      0x04\n        /* \"#utility.yul\":3808:3823   */\n      mstore\n        /* \"#utility.yul\":3846:3850   */\n      0x24\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3836:3851   */\n      revert\n        /* \"#utility.yul\":3729:3861   */\n    tag_222:\n      pop\n        /* \"#utility.yul\":3875:3884   */\n      div\n      swap1\n        /* \"#utility.yul\":3673:3890   */\n      jump\t// out\n        /* \"#utility.yul\":3895:4172   */\n    tag_90:\n        /* \"#utility.yul\":3962:3968   */\n      0x00\n        /* \"#utility.yul\":4015:4017   */\n      0x20\n        /* \"#utility.yul\":4003:4012   */\n      dup3\n        /* \"#utility.yul\":3994:4001   */\n      dup5\n        /* \"#utility.yul\":3990:4013   */\n      sub\n        /* \"#utility.yul\":3986:4018   */\n      slt\n        /* \"#utility.yul\":3983:4035   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":4031:4032   */\n      0x00\n        /* \"#utility.yul\":4028:4029   */\n      dup1\n        /* \"#utility.yul\":4021:4033   */\n      revert\n        /* \"#utility.yul\":3983:4035   */\n    tag_224:\n        /* \"#utility.yul\":4063:4072   */\n      dup2\n        /* \"#utility.yul\":4057:4073   */\n      mload\n        /* \"#utility.yul\":4116:4121   */\n      dup1\n        /* \"#utility.yul\":4109:4122   */\n      iszero\n        /* \"#utility.yul\":4102:4123   */\n      iszero\n        /* \"#utility.yul\":4095:4100   */\n      dup2\n        /* \"#utility.yul\":4092:4124   */\n      eq\n        /* \"#utility.yul\":4082:4142   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":4138:4139   */\n      0x00\n        /* \"#utility.yul\":4135:4136   */\n      dup1\n        /* \"#utility.yul\":4128:4140   */\n      revert\n        /* \"#utility.yul\":4526:4777   */\n    tag_97:\n        /* \"#utility.yul\":4596:4602   */\n      0x00\n        /* \"#utility.yul\":4649:4651   */\n      0x20\n        /* \"#utility.yul\":4637:4646   */\n      dup3\n        /* \"#utility.yul\":4628:4635   */\n      dup5\n        /* \"#utility.yul\":4624:4647   */\n      sub\n        /* \"#utility.yul\":4620:4652   */\n      slt\n        /* \"#utility.yul\":4617:4669   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":4665:4666   */\n      0x00\n        /* \"#utility.yul\":4662:4663   */\n      dup1\n        /* \"#utility.yul\":4655:4667   */\n      revert\n        /* \"#utility.yul\":4617:4669   */\n    tag_228:\n        /* \"#utility.yul\":4697:4706   */\n      dup2\n        /* \"#utility.yul\":4691:4707   */\n      mload\n        /* \"#utility.yul\":4716:4747   */\n      tag_215\n        /* \"#utility.yul\":4741:4746   */\n      dup2\n        /* \"#utility.yul\":4716:4747   */\n      tag_195\n      jump\t// in\n\n    auxdata: 0xa26469706673582212203a392c3cb5b983e8f58d8326a4b8581e04b484c3904e39ddd7a024faad3333cd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_232": {
									"entryPoint": null,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 150,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:555:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "387:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:6"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "483:28:6",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "521:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "354:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "368:4:6",
														"type": ""
													}
												],
												"src": "203:350:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610edd380380610edd83398101604081905261002f916100e6565b61003833610096565b61251c81111561008e5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640160405180910390fd5b6001556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f857600080fd5b5051919050565b610dcf8061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ab0166701161008c578063bc6bc0cd11610066578063bc6bc0cd146101d7578063c54e5497146101e5578063e31ef91c14610219578063f2fde38b1461027e57600080fd5b8063ab016670146101a3578063b060dd86146101b6578063b9223c9d146101c457600080fd5b80633755fa80116100c85780633755fa80146101565780634fb7d3f914610169578063715018a6146101805780638da5cb5b1461018857600080fd5b8063275da5ef146100ef5780632782d6c71461010457806333bf61561461013b575b600080fd5b6101026100fd366004610c3e565b610291565b005b610117610112366004610c8f565b61030c565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b610149636cdb3d1360e11b81565b6040516101329190610cbb565b610102610164366004610c3e565b610359565b61017260015481565b604051908152602001610132565b6101026104d6565b6000546040516001600160a01b039091168152602001610132565b6101026101b1366004610c3e565b6104ea565b61014963152a902d60e11b81565b6101026101d2366004610cd0565b610655565b6101496380ac58cd60e01b81565b6101f86101f3366004610ce9565b6106ea565b604080516001600160a01b03909316835260ff909116602083015201610132565b610258610227366004610ce9565b6001600160a01b03908116600090815260026020819052604090912080546001820154919092015491831693921691565b604080516001600160a01b03948516815293909216602084015290820152606001610132565b61010261028c366004610ce9565b61087f565b6001600160a01b03808516600090815260026020526040902054163381146102f95760405162461bcd60e51b815260206004820152601660248201527529b2ba3a32b91d102737ba103a34329039b2ba3a32b960511b60448201526064015b60405180910390fd5b610305858585856108f8565b5050505050565b6001600160a01b0380831660009081526002602081905260408220600181015491015491928392911690612710906103449086610d0d565b61034e9190610d38565b915091509250929050565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061038c9063152a902d60e11b90600401610cbb565b602060405180830381865afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190610d5a565b156104115760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b60448201526064016102f0565b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190610d7c565b6001600160a01b0316336001600160a01b0316146104c45760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329037bbb732b960911b60448201526064016102f0565b6104d0848484846109ee565b50505050565b6104de610b7f565b6104e86000610bd9565b565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061051d9063152a902d60e11b90600401610cbb565b602060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190610d5a565b156105a25760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b60448201526064016102f0565b836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610d7c565b6001600160a01b0316336001600160a01b0316146104c45760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329030b236b4b760911b60448201526064016102f0565b61065d610b7f565b61251c8111156106af5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064016102f0565b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6001600160a01b0380821660009081526002602052604081205490918291168015610719579360009350915050565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061074c9063152a902d60e11b90600401610cbb565b602060405180830381865afa925050508015610785575060408051601f3d908101601f1916820190925261078291810190610d5a565b60015b156107a057801561079e57506000946001945092505050565b505b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107fa575060408051601f3d908101601f191682019092526107f791810190610d7c565b60015b61087457836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610858575060408051601f3d908101601f1916820190925261085591810190610d7c565b60015b610869575060009360049350915050565b946003945092505050565b946002945092505050565b610887610b7f565b6001600160a01b0381166108ec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f0565b6108f581610bd9565b50565b60015481111561094a5760405162461bcd60e51b815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016102f0565b604080516060810182526001600160a01b0385811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089166001600160a01b0319918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b6001600160a01b03808516600090815260026020526040902054168015610a455760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016102f0565b6040516301ffc9a760e01b81526001600160a01b038616906301ffc9a790610a78906380ac58cd60e01b90600401610cbb565b602060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab99190610d5a565b80610b3357506040516301ffc9a760e01b81526001600160a01b038616906301ffc9a790610af290636cdb3d1360e11b90600401610cbb565b602060405180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b339190610d5a565b6102f95760405162461bcd60e51b815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f4552433131353500000000000060448201526064016102f0565b6000546001600160a01b031633146104e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146108f557600080fd5b60008060008060808587031215610c5457600080fd5b8435610c5f81610c29565b93506020850135610c6f81610c29565b92506040850135610c7f81610c29565b9396929550929360600135925050565b60008060408385031215610ca257600080fd5b8235610cad81610c29565b946020939093013593505050565b6001600160e01b031991909116815260200190565b600060208284031215610ce257600080fd5b5035919050565b600060208284031215610cfb57600080fd5b8135610d0681610c29565b9392505050565b8082028115828204841417610d3257634e487b7160e01b600052601160045260246000fd5b92915050565b600082610d5557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610d6c57600080fd5b81518015158114610d0657600080fd5b600060208284031215610d8e57600080fd5b8151610d0681610c2956fea26469706673582212203a392c3cb5b983e8f58d8326a4b8581e04b484c3904e39ddd7a024faad3333cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEDD CODESIZE SUB DUP1 PUSH2 0xEDD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x96 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCF DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB016670 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB016670 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3755FA80 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x275DA5EF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x102 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x149 PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x149 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x29B2BA3A32B91D102737BA103A34329039B2BA3A32B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x305 DUP6 DUP6 DUP6 DUP6 PUSH2 0x8F8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x344 SWAP1 DUP7 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x34E SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x38C SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST ISZERO PUSH2 0x411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329037BBB732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x4D0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4DE PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x4E8 PUSH1 0x0 PUSH2 0xBD9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x51D SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x65D PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 AND DUP1 ISZERO PUSH2 0x719 JUMPI SWAP4 PUSH1 0x0 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x74C SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x785 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x782 SWAP2 DUP2 ADD SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x7A0 JUMPI DUP1 ISZERO PUSH2 0x79E JUMPI POP PUSH1 0x0 SWAP5 PUSH1 0x1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x7FA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x7F7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x874 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x858 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x855 SWAP2 DUP2 ADD SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x869 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x4 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP5 PUSH1 0x3 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP5 PUSH1 0x2 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x887 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x8F5 DUP2 PUSH2 0xBD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105B1C9958591E481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0xA78 SWAP1 PUSH4 0x80AC58CD PUSH1 0xE0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST DUP1 PUSH2 0xB33 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0xAF2 SWAP1 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xC5F DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xC6F DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xC7F DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCAD DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD06 DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD06 DUP2 PUSH2 0xC29 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE CODECOPY 0x2C EXTCODECOPY 0xB5 0xB9 DUP4 0xE8 CREATE2 DUP14 DUP4 0x26 LOG4 0xB8 PC 0x1E DIV 0xB4 DUP5 0xC3 SWAP1 0x4E CODECOPY 0xDD 0xD7 LOG0 0x24 STATICCALL 0xAD CALLER CALLER 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "357:6490:4:-:0;;;1194:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;1312:4:4;1292:16;:24;;1284:63;;;;-1:-1:-1;;;1284:63:4;;405:2:6;1284:63:4;;;387:21:6;444:2;424:18;;;417:30;483:28;463:18;;;456:56;529:18;;1284:63:4;;;;;;;;1357:15;:34;357:6490;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:184:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:6;;14:184;-1:-1:-1;14:184:6:o;203:350::-;357:6490:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC2981_194": {
									"entryPoint": null,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2943,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3033,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateRoyaltyInfoForCollectionIfOwnerOrAdmin_613": {
									"entryPoint": 2542,
									"id": 613,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@checkForCollectionSetter_475": {
									"entryPoint": 1770,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1238,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeInfoCollection_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@royaltyFeeLimit_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_320": {
									"entryPoint": 780,
									"id": 320,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@transferOwnership_91": {
									"entryPoint": 2175,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_256": {
									"entryPoint": 1621,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfAdmin_517": {
									"entryPoint": 1258,
									"id": 517,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfOwner_559": {
									"entryPoint": 857,
									"id": 559,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfSetter_381": {
									"entryPoint": 657,
									"id": 381,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollection_292": {
									"entryPoint": 2296,
									"id": 292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7642:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:6"
															},
															"nodeType": "YulIf",
															"src": "69:70:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:6",
														"type": ""
													}
												],
												"src": "14:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "271:477:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "318:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "327:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "330:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "320:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "320:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "320:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "292:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "288:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "288:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "313:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:33:6"
															},
															"nodeType": "YulIf",
															"src": "281:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "343:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "369:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "356:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "347:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "413:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "388:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "388:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "428:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "438:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "428:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "452:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "467:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "456:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "533:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "508:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "508:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "550:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "560:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "550:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "608:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "619:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "604:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "591:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "591:32:6"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "580:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "657:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "632:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "632:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "674:17:6",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "684:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "700:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "727:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "738:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "710:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "213:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "224:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "236:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "244:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "252:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "260:6:6",
														"type": ""
													}
												],
												"src": "150:598:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "840:228:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "886:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "895:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "898:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "888:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "888:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "888:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "861:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "857:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "882:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "853:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "853:32:6"
															},
															"nodeType": "YulIf",
															"src": "850:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "911:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "937:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "924:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "915:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "981:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "956:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "956:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "996:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1006:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "996:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1047:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1058:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1043:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1043:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1030:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "798:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "809:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "821:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "829:6:6",
														"type": ""
													}
												],
												"src": "753:315:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1224:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1212:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1254:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1269:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1285:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1290:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1281:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1281:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1294:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1277:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1277:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1265:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1265:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1247:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1334:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1307:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1307:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1163:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1174:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1182:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1193:4:6",
														"type": ""
													}
												],
												"src": "1073:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1451:103:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1461:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1469:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1461:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1518:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1530:3:6",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1535:10:6",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1526:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1526:20:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1514:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1514:33:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1496:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1496:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1496:52:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1420:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1431:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1442:4:6",
														"type": ""
													}
												],
												"src": "1352:202:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1660:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1670:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1670:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1712:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1723:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1705:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1629:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1651:4:6",
														"type": ""
													}
												],
												"src": "1559:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1842:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1852:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1864:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1860:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1852:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1894:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1909:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1925:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1930:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1921:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1921:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1934:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1917:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1917:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1887:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1811:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1822:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1833:4:6",
														"type": ""
													}
												],
												"src": "1741:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:6"
															},
															"nodeType": "YulIf",
															"src": "2029:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2113:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2100:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:6",
														"type": ""
													}
												],
												"src": "1949:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2204:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2250:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2259:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2262:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2252:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2252:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2252:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2225:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2234:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2221:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:32:6"
															},
															"nodeType": "YulIf",
															"src": "2214:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2275:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2288:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2288:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2279:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2320:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2320:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2360:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2370:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2170:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2181:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2193:6:6",
														"type": ""
													}
												],
												"src": "2134:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2511:156:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2521:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2533:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2544:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2529:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2521:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2563:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2578:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2594:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2599:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2590:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2590:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2603:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2586:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2586:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2574:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2556:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2556:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2556:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2638:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2643:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2643:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2616:45:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2472:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2483:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2491:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2502:4:6",
														"type": ""
													}
												],
												"src": "2386:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:218:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2839:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2851:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2847:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2847:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2839:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2874:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2892:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2897:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2888:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2884:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2884:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2878:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2919:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2934:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2942:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2912:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2912:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2986:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2994:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3029:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3007:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3007:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3007:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2782:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2793:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2801:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2809:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2820:4:6",
														"type": ""
													}
												],
												"src": "2672:375:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3226:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3243:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3236:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3236:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3236:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3277:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3288:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3266:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3316:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3327:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:18:6"
																	},
																	{
																		"hexValue": "5365747465723a204e6f742074686520736574746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3332:24:6",
																		"type": "",
																		"value": "Setter: Not the setter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3305:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3305:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3305:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3366:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3378:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3389:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3374:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3374:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3366:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3203:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3217:4:6",
														"type": ""
													}
												],
												"src": "3052:346:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3455:213:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3465:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3480:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3483:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3476:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3465:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3551:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3572:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3579:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3584:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3575:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3575:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3565:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3565:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3565:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3616:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3619:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3609:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3609:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3609:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3644:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3647:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3637:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3637:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3637:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3514:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3507:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3507:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3521:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3528:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3537:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3524:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3524:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3518:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3518:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3504:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3504:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:45:6"
															},
															"nodeType": "YulIf",
															"src": "3494:168:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3434:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3437:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3443:7:6",
														"type": ""
													}
												],
												"src": "3403:265:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3719:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3750:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3771:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3778:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3783:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3774:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3774:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3764:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3764:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3764:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3815:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3818:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3808:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3808:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3808:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3846:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3836:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3836:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3836:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3739:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:9:6"
															},
															"nodeType": "YulIf",
															"src": "3729:132:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3870:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3879:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3882:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3875:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3870:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3704:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3707:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3713:1:6",
														"type": ""
													}
												],
												"src": "3673:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3973:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4019:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4028:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4031:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4021:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4021:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4021:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3994:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3990:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3990:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4015:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3986:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:32:6"
															},
															"nodeType": "YulIf",
															"src": "3983:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4044:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4057:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4048:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4126:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4135:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4138:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4128:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4128:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4128:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4095:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4116:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4109:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4109:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4102:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4102:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4092:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4092:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4085:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4085:40:6"
															},
															"nodeType": "YulIf",
															"src": "4082:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4151:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4161:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4151:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3939:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3950:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3962:6:6",
														"type": ""
													}
												],
												"src": "3895:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4351:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4368:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4379:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4361:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4361:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4402:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4413:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4418:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4391:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4441:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4452:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4437:18:6"
																	},
																	{
																		"hexValue": "204d757374206e6f742062652045524332393831",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4457:22:6",
																		"type": "",
																		"value": " Must not be ERC2981"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4430:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4430:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4489:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4501:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4512:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4497:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4497:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4489:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4328:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4342:4:6",
														"type": ""
													}
												],
												"src": "4177:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4607:170:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4653:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4662:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4665:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4655:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4655:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4655:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4628:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4637:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4624:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4624:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4649:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4620:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:32:6"
															},
															"nodeType": "YulIf",
															"src": "4617:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4678:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4697:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4691:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4691:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4682:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4741:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4716:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4756:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4766:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4573:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4584:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4596:6:6",
														"type": ""
													}
												],
												"src": "4526:251:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4973:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4984:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4966:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4966:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5007:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5018:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5003:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5003:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5023:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4996:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4996:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5046:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5057:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5042:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5042:18:6"
																	},
																	{
																		"hexValue": "204e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5062:16:6",
																		"type": "",
																		"value": " Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5035:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5035:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5088:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5100:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5111:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5096:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5088:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4933:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4947:4:6",
														"type": ""
													}
												],
												"src": "4782:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5299:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5316:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5327:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5350:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5361:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5346:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5366:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5339:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5339:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5339:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5400:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:18:6"
																	},
																	{
																		"hexValue": "204e6f74207468652061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5405:16:6",
																		"type": "",
																		"value": " Not the admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5378:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5378:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5431:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5443:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5439:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5439:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5431:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5276:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5290:4:6",
														"type": ""
													}
												],
												"src": "5125:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5642:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5659:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5670:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5652:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5693:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5704:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5689:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5689:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5709:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5682:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5682:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5682:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5732:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5743:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5728:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5728:18:6"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5748:28:6",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5721:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5721:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5786:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5798:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5809:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5794:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5786:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5619:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5633:4:6",
														"type": ""
													}
												],
												"src": "5468:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5997:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6014:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6025:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6007:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6048:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6059:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6044:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6044:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6064:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6087:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6098:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6083:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6083:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6103:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6076:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6076:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6076:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6158:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6169:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6154:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6154:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6174:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6147:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6147:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6192:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6204:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6215:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6200:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6192:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5974:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5988:4:6",
														"type": ""
													}
												],
												"src": "5823:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6404:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6421:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6432:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6414:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6455:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6466:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6451:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6444:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6494:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6505:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6490:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6490:18:6"
																	},
																	{
																		"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6510:32:6",
																		"type": "",
																		"value": "Registry: Royalty fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:60:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6483:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6552:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6564:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6575:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6560:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6552:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6381:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6395:4:6",
														"type": ""
													}
												],
												"src": "6230:354:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6763:161:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6780:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6791:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6773:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6773:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6773:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6814:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6825:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6810:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6810:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6830:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6803:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6803:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6864:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6849:18:6"
																	},
																	{
																		"hexValue": "416c726561647920736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6869:13:6",
																		"type": "",
																		"value": "Already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6842:41:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6892:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6904:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6915:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6900:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6900:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6892:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6740:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6754:4:6",
														"type": ""
													}
												],
												"src": "6589:335:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7103:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7120:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7131:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7113:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7113:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7154:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7165:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7150:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7170:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7143:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7193:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7204:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7189:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7189:18:6"
																	},
																	{
																		"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7209:28:6",
																		"type": "",
																		"value": " Not Set of ERC721/ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7182:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7182:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7182:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7247:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7259:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7270:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7255:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7255:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7247:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7080:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7094:4:6",
														"type": ""
													}
												],
												"src": "6929:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7458:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7475:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7468:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7468:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7468:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7509:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7520:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7505:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7505:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7525:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7498:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7548:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7559:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7544:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7544:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7564:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7537:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7537:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7608:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7620:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7616:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7608:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7435:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7449:4:6",
														"type": ""
													}
												],
												"src": "7284:356:6"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Setter: Not the setter\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Must not be ERC2981\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Registry: Royalty fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not Set of ERC721/ERC1155\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ab0166701161008c578063bc6bc0cd11610066578063bc6bc0cd146101d7578063c54e5497146101e5578063e31ef91c14610219578063f2fde38b1461027e57600080fd5b8063ab016670146101a3578063b060dd86146101b6578063b9223c9d146101c457600080fd5b80633755fa80116100c85780633755fa80146101565780634fb7d3f914610169578063715018a6146101805780638da5cb5b1461018857600080fd5b8063275da5ef146100ef5780632782d6c71461010457806333bf61561461013b575b600080fd5b6101026100fd366004610c3e565b610291565b005b610117610112366004610c8f565b61030c565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b610149636cdb3d1360e11b81565b6040516101329190610cbb565b610102610164366004610c3e565b610359565b61017260015481565b604051908152602001610132565b6101026104d6565b6000546040516001600160a01b039091168152602001610132565b6101026101b1366004610c3e565b6104ea565b61014963152a902d60e11b81565b6101026101d2366004610cd0565b610655565b6101496380ac58cd60e01b81565b6101f86101f3366004610ce9565b6106ea565b604080516001600160a01b03909316835260ff909116602083015201610132565b610258610227366004610ce9565b6001600160a01b03908116600090815260026020819052604090912080546001820154919092015491831693921691565b604080516001600160a01b03948516815293909216602084015290820152606001610132565b61010261028c366004610ce9565b61087f565b6001600160a01b03808516600090815260026020526040902054163381146102f95760405162461bcd60e51b815260206004820152601660248201527529b2ba3a32b91d102737ba103a34329039b2ba3a32b960511b60448201526064015b60405180910390fd5b610305858585856108f8565b5050505050565b6001600160a01b0380831660009081526002602081905260408220600181015491015491928392911690612710906103449086610d0d565b61034e9190610d38565b915091509250929050565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061038c9063152a902d60e11b90600401610cbb565b602060405180830381865afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190610d5a565b156104115760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b60448201526064016102f0565b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190610d7c565b6001600160a01b0316336001600160a01b0316146104c45760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329037bbb732b960911b60448201526064016102f0565b6104d0848484846109ee565b50505050565b6104de610b7f565b6104e86000610bd9565b565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061051d9063152a902d60e11b90600401610cbb565b602060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190610d5a565b156105a25760405162461bcd60e51b8152602060048201526014602482015273204d757374206e6f74206265204552433239383160601b60448201526064016102f0565b836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610d7c565b6001600160a01b0316336001600160a01b0316146104c45760405162461bcd60e51b815260206004820152600e60248201526d102737ba103a34329030b236b4b760911b60448201526064016102f0565b61065d610b7f565b61251c8111156106af5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064016102f0565b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6001600160a01b0380821660009081526002602052604081205490918291168015610719579360009350915050565b6040516301ffc9a760e01b81526001600160a01b038516906301ffc9a79061074c9063152a902d60e11b90600401610cbb565b602060405180830381865afa925050508015610785575060408051601f3d908101601f1916820190925261078291810190610d5a565b60015b156107a057801561079e57506000946001945092505050565b505b836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107fa575060408051601f3d908101601f191682019092526107f791810190610d7c565b60015b61087457836001600160a01b031663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610858575060408051601f3d908101601f1916820190925261085591810190610d7c565b60015b610869575060009360049350915050565b946003945092505050565b946002945092505050565b610887610b7f565b6001600160a01b0381166108ec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f0565b6108f581610bd9565b50565b60015481111561094a5760405162461bcd60e51b815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016102f0565b604080516060810182526001600160a01b0385811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089166001600160a01b0319918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b6001600160a01b03808516600090815260026020526040902054168015610a455760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016102f0565b6040516301ffc9a760e01b81526001600160a01b038616906301ffc9a790610a78906380ac58cd60e01b90600401610cbb565b602060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab99190610d5a565b80610b3357506040516301ffc9a760e01b81526001600160a01b038616906301ffc9a790610af290636cdb3d1360e11b90600401610cbb565b602060405180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b339190610d5a565b6102f95760405162461bcd60e51b815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f4552433131353500000000000060448201526064016102f0565b6000546001600160a01b031633146104e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146108f557600080fd5b60008060008060808587031215610c5457600080fd5b8435610c5f81610c29565b93506020850135610c6f81610c29565b92506040850135610c7f81610c29565b9396929550929360600135925050565b60008060408385031215610ca257600080fd5b8235610cad81610c29565b946020939093013593505050565b6001600160e01b031991909116815260200190565b600060208284031215610ce257600080fd5b5035919050565b600060208284031215610cfb57600080fd5b8135610d0681610c29565b9392505050565b8082028115828204841417610d3257634e487b7160e01b600052601160045260246000fd5b92915050565b600082610d5557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610d6c57600080fd5b81518015158114610d0657600080fd5b600060208284031215610d8e57600080fd5b8151610d0681610c2956fea26469706673582212203a392c3cb5b983e8f58d8326a4b8581e04b484c3904e39ddd7a024faad3333cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB016670 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB016670 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3755FA80 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x275DA5EF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x102 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0x172 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x149 PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x149 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x258 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x132 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x29B2BA3A32B91D102737BA103A34329039B2BA3A32B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x305 DUP6 DUP6 DUP6 DUP6 PUSH2 0x8F8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x344 SWAP1 DUP7 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x34E SWAP2 SWAP1 PUSH2 0xD38 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x38C SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST ISZERO PUSH2 0x411 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329037BBB732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x4D0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4DE PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x4E8 PUSH1 0x0 PUSH2 0xBD9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x51D SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x204D757374206E6F742062652045524332393831 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x604 SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x102737BA103A34329030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x65D PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x6AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 AND DUP1 ISZERO PUSH2 0x719 JUMPI SWAP4 PUSH1 0x0 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0x74C SWAP1 PUSH4 0x152A902D PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x785 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x782 SWAP2 DUP2 ADD SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x7A0 JUMPI DUP1 ISZERO PUSH2 0x79E JUMPI POP PUSH1 0x0 SWAP5 PUSH1 0x1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x7FA JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x7F7 SWAP2 DUP2 ADD SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x874 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x858 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x855 SWAP2 DUP2 ADD SWAP1 PUSH2 0xD7C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x869 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x4 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP5 PUSH1 0x3 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP5 PUSH1 0x2 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x887 PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x8F5 DUP2 PUSH2 0xBD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105B1C9958591E481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0xA78 SWAP1 PUSH4 0x80AC58CD PUSH1 0xE0 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST DUP1 PUSH2 0xB33 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH2 0xAF2 SWAP1 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL SWAP1 PUSH1 0x4 ADD PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xC5F DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xC6F DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xC7F DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCAD DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD06 DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD06 DUP2 PUSH2 0xC29 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE CODECOPY 0x2C EXTCODECOPY 0xB5 0xB9 DUP4 0xE8 CREATE2 DUP14 DUP4 0x26 LOG4 0xB8 PC 0x1E DIV 0xB4 DUP5 0xC3 SWAP1 0x4E CODECOPY 0xDD 0xD7 LOG0 0x24 STATICCALL 0xAD CALLER CALLER 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "357:6490:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3013:395;;;;;;:::i;:::-;;:::i;:::-;;2340:267;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1265:32:6;;;1247:51;;1329:2;1314:18;;1307:34;;;;1220:18;2340:267:4;;;;;;;;639:56;;-1:-1:-1;;;639:56:4;;;;;;;;;:::i;5546:441::-;;;;;;:::i;:::-;;:::i;840:30::-;;;;;;;;;1705:25:6;;;1693:2;1678:18;840:30:4;1559:177:6;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;1887:51:6;;1875:2;1860:18;1201:85:0;1741:203:6;4787:491:4;;;;;;:::i;:::-;;:::i;729:56::-;;-1:-1:-1;;;729:56:4;;1460:303;;;;;;:::i;:::-;;:::i;550:55::-;;-1:-1:-1;;;550:55:4;;3627:796;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2574:32:6;;;2556:51;;2655:4;2643:17;;;2638:2;2623:18;;2616:45;2529:18;3627:796:4;2386:281:6;2649:358:4;;;;;;:::i;:::-;-1:-1:-1;;;;;2839:37:4;;;2760:7;2839:37;;;:25;:37;;;;;;;;:44;;;2893:46;;;2949:41;;;;;2839:44;;;;2893:46;;;2649:358;;;;;-1:-1:-1;;;;;2930:15:6;;;2912:34;;2982:15;;;;2977:2;2962:18;;2955:43;3014:18;;;3007:34;2862:2;2847:18;2649:358:4;2672:375:6;2081:198:0;;;;;;:::i;:::-;;:::i;3013:395:4:-;-1:-1:-1;;;;;3209:37:4;;;3185:21;3209:37;;;:25;:37;;;;;:44;;3271:10;:27;;3263:62;;;;-1:-1:-1;;;3263:62:4;;3254:2:6;3263:62:4;;;3236:21:6;3293:2;3273:18;;;3266:30;-1:-1:-1;;;3312:18:6;;;3305:52;3374:18;;3263:62:4;;;;;;;;;3336:65;3367:10;3379:6;3387:8;3397:3;3336:30;:65::i;:::-;3175:233;3013:395;;;;:::o;2340:267::-;-1:-1:-1;;;;;2474:37:4;;;2429:7;2474:37;;;:25;:37;;;;;;;:46;;;;2540:41;;;2429:7;;;;2474:46;;;2585:5;;2531:50;;:6;:50;:::i;:::-;2530:60;;;;:::i;:::-;2457:143;;;;2340:267;;;;;:::o;5546:441::-;5726:59;;-1:-1:-1;;;5726:59:4;;-1:-1:-1;;;;;5726:37:4;;;;;:59;;-1:-1:-1;;;5764:20:4;5726:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5725:60;5717:93;;;;-1:-1:-1;;;5717:93:4;;4379:2:6;5717:93:4;;;4361:21:6;4418:2;4398:18;;;4391:30;-1:-1:-1;;;4437:18:6;;;4430:50;4497:18;;5717:93:4;4177:344:6;5717:93:4;5851:10;-1:-1:-1;;;;;5842:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5828:42:4;:10;-1:-1:-1;;;;;5828:42:4;;5820:69;;;;-1:-1:-1;;;5820:69:4;;4984:2:6;5820:69:4;;;4966:21:6;5023:2;5003:18;;;4996:30;-1:-1:-1;;;5042:18:6;;;5035:44;5096:18;;5820:69:4;4782:338:6;5820:69:4;5900:80;5946:10;5958:6;5966:8;5976:3;5900:45;:80::i;:::-;5546:441;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4787:491:4:-;5017:59;;-1:-1:-1;;;5017:59:4;;-1:-1:-1;;;;;5017:37:4;;;;;:59;;-1:-1:-1;;;5055:20:4;5017:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5016:60;5008:93;;;;-1:-1:-1;;;5008:93:4;;4379:2:6;5008:93:4;;;4361:21:6;4418:2;4398:18;;;4391:30;-1:-1:-1;;;4437:18:6;;;4430:50;4497:18;;5008:93:4;4177:344:6;5008:93:4;5142:10;-1:-1:-1;;;;;5133:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5119:42:4;:10;-1:-1:-1;;;;;5119:42:4;;5111:69;;;;-1:-1:-1;;;5111:69:4;;5327:2:6;5111:69:4;;;5309:21:6;5366:2;5346:18;;;5339:30;-1:-1:-1;;;5385:18:6;;;5378:44;5439:18;;5111:69:4;5125:338:6;1460:303:4;1094:13:0;:11;:13::i;:::-;1625:4:4::1;1605:16;:24;;1597:63;;;::::0;-1:-1:-1;;;1597:63:4;;5670:2:6;1597:63:4::1;::::0;::::1;5652:21:6::0;5709:2;5689:18;;;5682:30;5748:28;5728:18;;;5721:56;5794:18;;1597:63:4::1;5468:350:6::0;1597:63:4::1;1670:15;:34:::0;;;1720:36:::1;::::0;1705:25:6;;;1720:36:4::1;::::0;1693:2:6;1678:18;1720:36:4::1;;;;;;;1460:303:::0;:::o;3627:796::-;-1:-1:-1;;;;;3754:37:4;;;3704:7;3754:37;;;:25;:37;;;;;:44;3704:7;;;;3754:44;3812:27;;3808:81;;3862:13;3876:1;;-1:-1:-1;3627:796:4;-1:-1:-1;;3627:796:4:o;3808:81::-;3902:59;;-1:-1:-1;;;3902:59:4;;-1:-1:-1;;;;;3902:37:4;;;;;:59;;-1:-1:-1;;;3940:20:4;3902:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;3902:59:4;;;;;;;;-1:-1:-1;;3902:59:4;;;;;;;;;;;;:::i;:::-;;;3898:206;;;4012:16;4008:77;;;-1:-1:-1;4064:1:4;;4068;;-1:-1:-1;3627:796:4;-1:-1:-1;;;3627:796:4:o;4008:77::-;3962:133;3898:206;4127:10;-1:-1:-1;;;;;4118:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4118:28:4;;;;;;;;-1:-1:-1;;4118:28:4;;;;;;;;;;;;:::i;:::-;;;4114:303;;4249:10;-1:-1:-1;;;;;4240:26:4;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4240:28:4;;;;;;;;-1:-1:-1;;4240:28:4;;;;;;;;;;;;:::i;:::-;;;4236:171;;-1:-1:-1;4386:1:4;;4390;;-1:-1:-1;3627:796:4;-1:-1:-1;;3627:796:4:o;4236:171::-;4320:6;4328:1;;-1:-1:-1;3627:796:4;-1:-1:-1;;;3627:796:4:o;4114:303::-;4194:6;4202:1;;-1:-1:-1;3627:796:4;-1:-1:-1;;;3627:796:4:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;6025:2:6;2161:73:0::1;::::0;::::1;6007:21:6::0;6064:2;6044:18;;;6037:30;6103:34;6083:18;;;6076:62;-1:-1:-1;;;6154:18:6;;;6147:36;6200:19;;2161:73:0::1;5823:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1769:408:4:-;1947:15;;1940:3;:22;;1932:65;;;;-1:-1:-1;;;1932:65:4;;6432:2:6;1932:65:4;;;6414:21:6;6471:2;6451:18;;;6444:30;6510:32;6490:18;;;6483:60;6560:18;;1932:65:4;6230:354:6;1932:65:4;2048:55;;;;;;;;-1:-1:-1;;;;;2048:55:4;;;;;;;;;;;;;;;;;;;;;;2008:37;;;-1:-1:-1;2008:37:4;;;:25;:37;;;;;;;:95;;;;;;;-1:-1:-1;;;;;;2008:95:4;;;;;;;;-1:-1:-1;2008:95:4;;;;;;;;;;;;;;;;;;;;;;;;2119:51;;1705:25:6;;;2048:55:4;;2119:51;;1678:18:6;2119:51:4;;;;;;;1769:408;;;;:::o;6239:606::-;-1:-1:-1;;;;;6442:37:4;;;6418:21;6442:37;;;:25;:37;;;;;:44;;6504:27;;6496:51;;;;-1:-1:-1;;;6496:51:4;;6791:2:6;6496:51:4;;;6773:21:6;6830:2;6810:18;;;6803:30;-1:-1:-1;;;6849:18:6;;;6842:41;6900:18;;6496:51:4;6589:335:6;6496:51:4;6580:58;;-1:-1:-1;;;6580:58:4;;-1:-1:-1;;;;;6580:37:4;;;;;:58;;-1:-1:-1;;;6618:19:4;6580:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;6650:59:4;;-1:-1:-1;;;6650:59:4;;-1:-1:-1;;;;;6650:37:4;;;;;:59;;-1:-1:-1;;;6688:20:4;6650:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6558:204;;;;-1:-1:-1;;;6558:204:4;;7131:2:6;6558:204:4;;;7113:21:6;7170:2;7150:18;;;7143:30;7209:28;7189:18;;;7182:56;7255:18;;6558:204:4;6929:350:6;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;7486:2:6;1414:68:0;;;7468:21:6;;;7505:18;;;7498:30;7564:34;7544:18;;;7537:62;7616:18;;1414:68:0;7284:356:6;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:131:6:-;-1:-1:-1;;;;;89:31:6;;79:42;;69:70;;135:1;132;125:12;150:598;236:6;244;252;260;313:3;301:9;292:7;288:23;284:33;281:53;;;330:1;327;320:12;281:53;369:9;356:23;388:31;413:5;388:31;:::i;:::-;438:5;-1:-1:-1;495:2:6;480:18;;467:32;508:33;467:32;508:33;:::i;:::-;560:7;-1:-1:-1;619:2:6;604:18;;591:32;632:33;591:32;632:33;:::i;:::-;150:598;;;;-1:-1:-1;684:7:6;;738:2;723:18;710:32;;-1:-1:-1;;150:598:6:o;753:315::-;821:6;829;882:2;870:9;861:7;857:23;853:32;850:52;;;898:1;895;888:12;850:52;937:9;924:23;956:31;981:5;956:31;:::i;:::-;1006:5;1058:2;1043:18;;;;1030:32;;-1:-1:-1;;;753:315:6:o;1352:202::-;-1:-1:-1;;;;;;1514:33:6;;;;1496:52;;1484:2;1469:18;;1352:202::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:6;;1949:180;-1:-1:-1;1949:180:6:o;2134:247::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2301:9;2288:23;2320:31;2345:5;2320:31;:::i;:::-;2370:5;2134:247;-1:-1:-1;;;2134:247:6:o;3403:265::-;3476:9;;;3507;;3524:15;;;3518:22;;3504:37;3494:168;;3584:10;3579:3;3575:20;3572:1;3565:31;3619:4;3616:1;3609:15;3647:4;3644:1;3637:15;3494:168;3403:265;;;;:::o;3673:217::-;3713:1;3739;3729:132;;3783:10;3778:3;3774:20;3771:1;3764:31;3818:4;3815:1;3808:15;3846:4;3843:1;3836:15;3729:132;-1:-1:-1;3875:9:6;;3673:217::o;3895:277::-;3962:6;4015:2;4003:9;3994:7;3990:23;3986:32;3983:52;;;4031:1;4028;4021:12;3983:52;4063:9;4057:16;4116:5;4109:13;4102:21;4095:5;4092:32;4082:60;;4138:1;4135;4128:12;4526:251;4596:6;4649:2;4637:9;4628:7;4624:23;4620:32;4617:52;;;4665:1;4662;4655:12;4617:52;4697:9;4691:16;4716:31;4741:5;4716:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "707000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "317",
								"INTERFACE_ID_ERC2981()": "294",
								"INTERFACE_ID_ERC721()": "271",
								"checkForCollectionSetter(address)": "infinite",
								"owner()": "2390",
								"renounceOwnership()": "infinite",
								"royaltyFeeInfoCollection(address)": "6920",
								"royaltyFeeLimit()": "2340",
								"royaltyInfo(address,uint256)": "4969",
								"transferOwnership(address)": "infinite",
								"updateRoyaltyFeeLimit(uint256)": "25646",
								"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfSetter(address,address,address,uint256)": "infinite"
							},
							"internal": {
								"_updateRoyaltyInfoForCollectionIfOwnerOrAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollection(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 6847,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1194,
									"end": 1398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1316,
									"name": "PUSH",
									"source": 4,
									"value": "251C"
								},
								{
									"begin": 1292,
									"end": 1308,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 387,
									"end": 408,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "1A"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 442,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 417,
									"end": 447,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 483,
									"end": 511,
									"name": "PUSH",
									"source": 6,
									"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 456,
									"end": 512,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1357,
									"end": 1372,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1357,
									"end": 1391,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 203,
									"end": 553,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 203,
									"end": 553,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 6847,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a392c3cb5b983e8f58d8326a4b8581e04b484c3904e39ddd7a024faad3333cd64736f6c63430008110033",
									".code": [
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "AB016670"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "BC6BC0CD"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "BC6BC0CD"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "C54E5497"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "E31EF91C"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "AB016670"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "3755FA80"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "3755FA80"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "4FB7D3F9"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "275DA5EF"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "2782D6C7"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "33BF6156"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3013,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3013,
											"end": 3408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2340,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2340,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1265,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1297,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1298,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1298,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 639,
											"end": 695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 639,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5546,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5546,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 1695,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1559,
											"end": 1736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1887,
											"end": 1938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1877,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1741,
											"end": 1944,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4787,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 729,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 729,
											"end": 785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 550,
											"end": 605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3627,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3627,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2607,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2659,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2643,
											"end": 2660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2660,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2386,
											"end": 2667,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2649,
											"end": 3007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2997,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2997,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2997,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2847,
											"end": 2865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2672,
											"end": 3047,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3253,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3281,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3298,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3257,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3295,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 3273,
											"end": 3291,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3273,
											"end": 3291,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3296,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29B2BA3A32B91D102737BA103A34329039B2BA3A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3305,
											"end": 3357,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3263,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3367,
											"end": 3377,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3387,
											"end": 3395,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3397,
											"end": 3400,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 3336,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3336,
											"end": 3401,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3336,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2499,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2581,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2581,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2531,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2530,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5726,
											"end": 5763,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5763,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5763,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 5726,
											"end": 5763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5726,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5726,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5726,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4361,
											"end": 4382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "204D757374206E6F742062652045524332393831"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4480,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4177,
											"end": 4521,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5717,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5851,
											"end": 5861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5842,
											"end": 5868,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5868,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5842,
											"end": 5870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5842,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5828,
											"end": 5870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5828,
											"end": 5838,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5828,
											"end": 5870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5828,
											"end": 5870,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4986,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5026,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "102737BA103A34329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5114,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5096,
											"end": 5114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4782,
											"end": 5120,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5820,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5946,
											"end": 5956,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 5974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 5979,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5900,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5980,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5900,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5017,
											"end": 5054,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5054,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5054,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 5017,
											"end": 5054,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5055,
											"end": 5075,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5017,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5017,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4361,
											"end": 4382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "204D757374206E6F742062652045524332393831"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4480,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4497,
											"end": 4515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4177,
											"end": 4521,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5008,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5133,
											"end": 5159,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5159,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5133,
											"end": 5161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5133,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5119,
											"end": 5161,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5119,
											"end": 5129,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5119,
											"end": 5161,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5119,
											"end": 5161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5327,
											"end": 5329,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5368,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "102737BA103A34329030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5125,
											"end": 5463,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "251C"
										},
										{
											"begin": 1605,
											"end": 1621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1629,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5652,
											"end": 5673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 5689,
											"end": 5707,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5689,
											"end": 5707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5707,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5748,
											"end": 5776,
											"name": "PUSH",
											"source": 6,
											"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
										},
										{
											"begin": 5728,
											"end": 5746,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5728,
											"end": 5746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5777,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5468,
											"end": 5818,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256"
										},
										{
											"begin": 1720,
											"end": 1756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1695,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3779,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3791,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3798,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3812,
											"end": 3839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3812,
											"end": 3839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3808,
											"end": 3889,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3875,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3889,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3808,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3902,
											"end": 3939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3939,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 3902,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3940,
											"end": 3960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3902,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3902,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3902,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 4104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3898,
											"end": 4104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4012,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4085,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4008,
											"end": 4085,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4085,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4008,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 4095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 4104,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3898,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4137,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4118,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4118,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4114,
											"end": 4417,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4249,
											"end": 4259,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4266,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4240,
											"end": 4268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4240,
											"end": 4268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4236,
											"end": 4407,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4386,
											"end": 4387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4387,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4390,
											"end": 4391,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4407,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4236,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4417,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4114,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4202,
											"end": 4203,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6025,
											"end": 6027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6066,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6044,
											"end": 6062,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6044,
											"end": 6062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6062,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6037,
											"end": 6067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6083,
											"end": 6101,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6083,
											"end": 6101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6083,
											"end": 6101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6076,
											"end": 6138,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6172,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6147,
											"end": 6183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6219,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6200,
											"end": 6219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5823,
											"end": 6225,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1962,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1947,
											"end": 1962,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1962,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1962,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 6451,
											"end": 6469,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6451,
											"end": 6469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6444,
											"end": 6474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "PUSH",
											"source": 6,
											"value": "52656769737472793A20526F79616C74792066656520746F6F20686967680000"
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6483,
											"end": 6543,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6230,
											"end": 6584,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "PUSH",
											"source": 4,
											"value": "D01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64"
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1678,
											"end": 1696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6845,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6239,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6467,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6479,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6486,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6442,
											"end": 6486,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6504,
											"end": 6531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6504,
											"end": 6531,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6773,
											"end": 6794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6830,
											"end": 6832,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6900,
											"end": 6918,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6900,
											"end": 6918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6589,
											"end": 6924,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6496,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6580,
											"end": 6617,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6617,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6617,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 6580,
											"end": 6617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6618,
											"end": 6637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6580,
											"end": 6638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6580,
											"end": 6638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6580,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6580,
											"end": 6709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6650,
											"end": 6687,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6687,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6687,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 6650,
											"end": 6687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6650,
											"end": 6709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6650,
											"end": 6709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6650,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7131,
											"end": 7133,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7113,
											"end": 7134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7143,
											"end": 7173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F7420536574206F66204552433732312F45524331313535000000000000"
										},
										{
											"begin": 7189,
											"end": 7207,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7189,
											"end": 7207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7182,
											"end": 7238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7255,
											"end": 7273,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7255,
											"end": 7273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6558,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6929,
											"end": 7279,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7468,
											"end": 7489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7468,
											"end": 7489,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 7598,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7537,
											"end": 7599,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7616,
											"end": 7634,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7616,
											"end": 7634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7284,
											"end": 7640,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 150,
											"end": 748,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 236,
											"end": 242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 252,
											"end": 258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 313,
											"end": 316,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 301,
											"end": 310,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 292,
											"end": 299,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 288,
											"end": 311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 284,
											"end": 317,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 281,
											"end": 334,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 281,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 281,
											"end": 334,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 320,
											"end": 332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 281,
											"end": 334,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 281,
											"end": 334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 356,
											"end": 379,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 413,
											"end": 418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 388,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 388,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 388,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 388,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 438,
											"end": 443,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 495,
											"end": 497,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 480,
											"end": 498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 467,
											"end": 499,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 508,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 467,
											"end": 499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 508,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 508,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 508,
											"end": 541,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 508,
											"end": 541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 560,
											"end": 567,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 591,
											"end": 623,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 632,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 591,
											"end": 623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 632,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 632,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 632,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 150,
											"end": 748,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 150,
											"end": 748,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 150,
											"end": 748,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 150,
											"end": 748,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 684,
											"end": 691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 684,
											"end": 691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 738,
											"end": 740,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 723,
											"end": 741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 710,
											"end": 742,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 710,
											"end": 742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 753,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 753,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 821,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 857,
											"end": 880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 850,
											"end": 902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 850,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 898,
											"end": 899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 888,
											"end": 900,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 850,
											"end": 902,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 850,
											"end": 902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 956,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 981,
											"end": 986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 956,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 956,
											"end": 987,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 956,
											"end": 987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1043,
											"end": 1061,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1061,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1043,
											"end": 1061,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1062,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1062,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 753,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1554,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1352,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1484,
											"end": 1486,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2100,
											"end": 2123,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2381,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2134,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2232,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2264,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2311,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2345,
											"end": 2350,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2320,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2351,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2320,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2375,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2381,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2134,
											"end": 2381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3668,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3403,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3540,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3504,
											"end": 3541,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3494,
											"end": 3662,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3584,
											"end": 3594,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3579,
											"end": 3582,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3575,
											"end": 3595,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3651,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3644,
											"end": 3645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3652,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3662,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3494,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3890,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3673,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3729,
											"end": 3861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3793,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3778,
											"end": 3781,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3774,
											"end": 3794,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3822,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3808,
											"end": 3823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3850,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3851,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3861,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3729,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 4172,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3895,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 3968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4017,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4013,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4018,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4035,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3983,
											"end": 4035,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 4035,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3983,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4121,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4122,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4123,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4095,
											"end": 4100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4124,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4082,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4082,
											"end": 4142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4140,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4777,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4526,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4651,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4637,
											"end": 4646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4635,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4647,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4652,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4617,
											"end": 4669,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4617,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4617,
											"end": 4669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4655,
											"end": 4667,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4617,
											"end": 4669,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4617,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4707,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4741,
											"end": 4746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4716,
											"end": 4747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/interface/IOwnable.sol",
								"contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"checkForCollectionSetter(address)": "c54e5497",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyFeeLimit()": "4fb7d3f9",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"transferOwnership(address)": "f2fde38b",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "ab016670",
							"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "3755fa80",
							"updateRoyaltyInfoForCollectionIfSetter(address,address,address,uint256)": "275da5ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"NewRoyaltyFeeLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RoyaltyFeeUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkForCollectionSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":\"RoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]},\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x45f69bfcf5633e00472cb325bfa453dc28f784afe0ad934ab8eb93d125bfc9da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb7879dbf4e480fe5560caaa83e2681118c19e8354d6e5595ab4d8340089724d\",\"dweb:/ipfs/Qma9dmVuesZAyzNMKfKb47aiiM6HCc3vw1C7s5nh3z5cLG\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x711cb38bc94ecc1a78aec90fc798bcb553416122de86bb5d5ecab63e793b49f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59081b6554c25265051893dfde258a8b5476b37ec1b52f1f9c61742140b1d47\",\"dweb:/ipfs/QmaVeRoJv34nphsN27cdUP1hXuMhYL2SvRAByd938GkmLt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 196,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "royaltyFeeLimit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 201,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_royaltyFeeInfoCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(FeeInfo)185_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(FeeInfo)185_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(FeeInfo)185_storage"
							},
							"t_struct(FeeInfo)185_storage": {
								"encoding": "inplace",
								"label": "struct RoyaltyFeeRegistry.FeeInfo",
								"members": [
									{
										"astId": 180,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "setter",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 182,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "receiver",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 184,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "fee",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x711cb38bc94ecc1a78aec90fc798bcb553416122de86bb5d5ecab63e793b49f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59081b6554c25265051893dfde258a8b5476b37ec1b52f1f9c61742140b1d47\",\"dweb:/ipfs/QmaVeRoJv34nphsN27cdUP1hXuMhYL2SvRAByd938GkmLt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 146,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IOwnable",
							"nameLocation": "67:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "91:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "117:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "109:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:3"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:0:3"
									},
									"scope": 164,
									"src": "82:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "151:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:2:3"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "182:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:9:3"
									},
									"scope": 164,
									"src": "142:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f851a440",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "206:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "237:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:3"
									},
									"scope": 164,
									"src": "197:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "57:191:3",
							"usedErrors": []
						}
					],
					"src": "32:217:3"
				},
				"id": 3
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						],
						"IOwnable": [
							164
						],
						"IRoyaltyFeeRegistry": [
							644
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeRegistry": [
							614
						]
					},
					"id": 615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 147,
							"src": "56:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 146,
										"src": "64:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 113,
							"src": "137:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "145:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/IOwnable.sol",
							"file": "../interface/IOwnable.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 165,
							"src": "205:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 164,
										"src": "213:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./interface/IRoyaltyFeeRegistry.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 615,
							"sourceUnit": 645,
							"src": "258:72:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 644,
										"src": "266:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 175,
										"name": "IRoyaltyFeeRegistry",
										"nameLocations": [
											"388:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 644,
										"src": "388:19:4"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "388:19:4"
								},
								{
									"baseName": {
										"id": 177,
										"name": "Ownable",
										"nameLocations": [
											"409:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "409:7:4"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "409:7:4"
								}
							],
							"canonicalName": "RoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 614,
							"linearizedBaseContracts": [
								614,
								112,
								134,
								644
							],
							"name": "RoyaltyFeeRegistry",
							"nameLocation": "366:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "RoyaltyFeeRegistry.FeeInfo",
									"id": 185,
									"members": [
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "setter",
											"nameLocation": "456:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "448:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "448:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "480:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "472:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "506:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "498:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeInfo",
									"nameLocation": "430:7:4",
									"nodeType": "StructDefinition",
									"scope": 614,
									"src": "423:93:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 188,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "573:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "550:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 186,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "550:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "595:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 191,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "662:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "639:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 189,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "639:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "685:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 194,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "752:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "729:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 192,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "729:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "775:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fb7d3f9",
									"id": 196,
									"mutability": "mutable",
									"name": "royaltyFeeLimit",
									"nameLocation": "855:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "840:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "840:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_royaltyFeeInfoCollection",
									"nameLocation": "956:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 614,
									"src": "920:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
										"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
									},
									"typeName": {
										"id": 200,
										"keyType": {
											"id": 197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "928:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "920:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
											"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
										},
										"valueType": {
											"id": 199,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 198,
												"name": "FeeInfo",
												"nameLocations": [
													"939:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "939:7:4"
											},
											"referencedDeclaration": 185,
											"src": "939:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeeInfo_$185_storage_ptr",
												"typeString": "struct RoyaltyFeeRegistry.FeeInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256",
									"id": 205,
									"name": "NewRoyaltyFeeLimit",
									"nameLocation": "994:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "royaltyFeeLimit",
												"nameLocation": "1021:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1013:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:25:4"
									},
									"src": "988:50:4"
								},
								{
									"anonymous": false,
									"eventSelector": "d01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64",
									"id": 215,
									"name": "RoyaltyFeeUpdate",
									"nameLocation": "1049:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1082:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1066:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1110:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1094:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1134:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1118:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1152:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1144:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:91:4"
									},
									"src": "1043:114:4"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "1232:166:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "1292:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1312:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1292:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1318:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1284:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1284:63:4"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1357:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 228,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1375:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1357:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1357:34:4"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1214:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1206:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:26:4"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:0:4"
									},
									"scope": 614,
									"src": "1194:204:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1545:218:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1605:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1625:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1605:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1631:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1597:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1597:63:4"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 247,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1670:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 248,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1688:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1670:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1670:34:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 252,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "1739:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "NewRoyaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1720:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "EmitStatement",
												"src": "1715:41:4"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 237,
												"name": "onlyOwner",
												"nameLocations": [
													"1535:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1535:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1535:9:4"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "1469:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 236,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1526:8:4"
									},
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1499:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1491:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:26:4"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:0:4"
									},
									"scope": 614,
									"src": "1460:303:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1922:255:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "1940:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 269,
																"name": "royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1947:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1940:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1964:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															},
															"value": "Registry: Royalty fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1932:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1932:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1932:65:4"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 274,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "2008:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 276,
														"indexExpression": {
															"id": 275,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2034:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2008:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 278,
																"name": "setter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2065:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 279,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2083:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 280,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2098:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 277,
															"name": "FeeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2048:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FeeInfo_$185_storage_ptr_$",
																"typeString": "type(struct RoyaltyFeeRegistry.FeeInfo storage pointer)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2057:6:4",
															"2073:8:4",
															"2093:3:4"
														],
														"names": [
															"setter",
															"receiver",
															"fee"
														],
														"nodeType": "FunctionCall",
														"src": "2048:55:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_memory_ptr",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo memory"
														}
													},
													"src": "2008:95:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
														"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2008:95:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 285,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2136:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2148:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2156:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 288,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2166:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"name": "RoyaltyFeeUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2119:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2119:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "EmitStatement",
												"src": "2114:56:4"
											}
										]
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "1778:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1826:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1854:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1846:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1878:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1870:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1904:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1896:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:105:4"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:0:4"
									},
									"scope": 614,
									"src": "1769:408:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										632
									],
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "2447:160:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 304,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2474:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 306,
																"indexExpression": {
																	"id": 305,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2500:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2474:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2512:8:4",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "2474:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 308,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "2531:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 309,
																					"name": "_royaltyFeeInfoCollection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 201,
																					"src": "2540:25:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																						"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																					}
																				},
																				"id": 311,
																				"indexExpression": {
																					"id": 310,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 294,
																					"src": "2566:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2540:37:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																					"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																				}
																			},
																			"id": 312,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2578:3:4",
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 184,
																			"src": "2540:41:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2531:50:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2530:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2585:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2530:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 317,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2464:136:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 303,
												"id": 318,
												"nodeType": "Return",
												"src": "2457:143:4"
											}
										]
									},
									"functionSelector": "2782d6c7",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "2349:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2411:8:4"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2369:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2361:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2389:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2381:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:36:4"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2429:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2438:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:18:4"
									},
									"scope": 614,
									"src": "2340:267:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										643
									],
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "2812:195:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 332,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2839:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 334,
																"indexExpression": {
																	"id": 333,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2865:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2839:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2877:6:4",
															"memberName": "setter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 180,
															"src": "2839:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 336,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2893:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 338,
																"indexExpression": {
																	"id": 337,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2919:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2893:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2931:8:4",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "2893:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 340,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2949:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 342,
																"indexExpression": {
																	"id": 341,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2975:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2949:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2987:3:4",
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "2949:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 344,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2829:171:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 331,
												"id": 345,
												"nodeType": "Return",
												"src": "2822:178:4"
											}
										]
									},
									"functionSelector": "e31ef91c",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "2658:24:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2729:8:4"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2691:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2683:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:20:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2760:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2777:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2794:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:57:4"
									},
									"scope": 614,
									"src": "2649:358:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "3175:233:4",
										"statements": [
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "3193:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "3185:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 358,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3185:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 360,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "3209:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 362,
														"indexExpression": {
															"id": 361,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3235:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3209:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3247:6:4",
													"memberName": "setter",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 180,
													"src": "3209:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3185:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 366,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3271:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3275:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3271:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 368,
																"name": "currentSetter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3285:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3271:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5365747465723a204e6f742074686520736574746572",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6",
																"typeString": "literal_string \"Setter: Not the setter\""
															},
															"value": "Setter: Not the setter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6",
																"typeString": "literal_string \"Setter: Not the setter\""
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3263:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3263:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "3263:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3367:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "3379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "3387:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3397:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "updateRoyaltyInfoForCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "3336:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "3336:65:4"
											}
										]
									},
									"functionSelector": "275da5ef",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfSetter",
									"nameLocation": "3022:38:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3078:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "3070:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "3106:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "3098:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3130:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "3122:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3156:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "3148:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3148:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:105:4"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3175:0:4"
									},
									"scope": 614,
									"src": "3013:395:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3720:703:4",
										"statements": [
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "3738:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "3730:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 390,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3730:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 396,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 392,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "3754:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 394,
														"indexExpression": {
															"id": 393,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "3780:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3754:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3792:6:4",
													"memberName": "setter",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 180,
													"src": "3754:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3730:68:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 397,
														"name": "currentSetter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3812:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3837:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3829:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 398,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3829:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3829:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3812:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "IfStatement",
												"src": "3808:81:4",
												"trueBody": {
													"id": 407,
													"nodeType": "Block",
													"src": "3840:49:4",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 403,
																		"name": "currentSetter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "3862:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3876:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3861:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																	"typeString": "tuple(address,int_const 0)"
																}
															},
															"functionReturnParameters": 389,
															"id": 406,
															"nodeType": "Return",
															"src": "3854:24:4"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 428,
															"nodeType": "Block",
															"src": "3994:101:4",
															"statements": [
																{
																	"condition": {
																		"id": 418,
																		"name": "interfaceSupport",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "4012:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 427,
																	"nodeType": "IfStatement",
																	"src": "4008:77:4",
																	"trueBody": {
																		"id": 426,
																		"nodeType": "Block",
																		"src": "4030:55:4",
																		"statements": [
																			{
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 421,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4064:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 420,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4056:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 419,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "4056:7:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 422,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4056:10:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"hexValue": "31",
																							"id": 423,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4068:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						}
																					],
																					"id": 424,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4055:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_address_$_t_rational_1_by_1_$",
																						"typeString": "tuple(address,int_const 1)"
																					}
																				},
																				"functionReturnParameters": 389,
																				"id": 425,
																				"nodeType": "Return",
																				"src": "4048:22:4"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 429,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 417,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 416,
																	"mutability": "mutable",
																	"name": "interfaceSupport",
																	"nameLocation": "3976:16:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 429,
																	"src": "3971:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 415,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3971:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3970:23:4"
														},
														"src": "3962:133:4"
													},
													{
														"block": {
															"id": 430,
															"nodeType": "Block",
															"src": "4102:2:4",
															"statements": []
														},
														"errorName": "",
														"id": 431,
														"nodeType": "TryCatchClause",
														"src": "4096:8:4"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 413,
															"name": "INTERFACE_ID_ERC2981",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "3940:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 410,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "3910:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 409,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "3902:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3902:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$146",
																"typeString": "contract IERC165"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3922:17:4",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3902:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view external returns (bool)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3902:59:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "TryStatement",
												"src": "3898:206:4"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 445,
															"nodeType": "Block",
															"src": "4172:43:4",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"id": 441,
																				"name": "setter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "4194:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4202:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"id": 443,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4193:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_address_$_t_rational_2_by_1_$",
																			"typeString": "tuple(address,int_const 2)"
																		}
																	},
																	"functionReturnParameters": 389,
																	"id": 444,
																	"nodeType": "Return",
																	"src": "4186:18:4"
																}
															]
														},
														"errorName": "",
														"id": 446,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 440,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 439,
																	"mutability": "mutable",
																	"name": "setter",
																	"nameLocation": "4164:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 446,
																	"src": "4156:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4156:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "4155:16:4"
														},
														"src": "4147:68:4"
													},
													{
														"block": {
															"id": 471,
															"nodeType": "Block",
															"src": "4222:195:4",
															"statements": [
																{
																	"clauses": [
																		{
																			"block": {
																				"id": 459,
																				"nodeType": "Block",
																				"src": "4294:51:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"id": 455,
																									"name": "setter",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 453,
																									"src": "4320:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "33",
																									"id": 456,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4328:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								}
																							],
																							"id": 457,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4319:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_3_by_1_$",
																								"typeString": "tuple(address,int_const 3)"
																							}
																						},
																						"functionReturnParameters": 389,
																						"id": 458,
																						"nodeType": "Return",
																						"src": "4312:18:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 460,
																			"nodeType": "TryCatchClause",
																			"parameters": {
																				"id": 454,
																				"nodeType": "ParameterList",
																				"parameters": [
																					{
																						"constant": false,
																						"id": 453,
																						"mutability": "mutable",
																						"name": "setter",
																						"nameLocation": "4286:6:4",
																						"nodeType": "VariableDeclaration",
																						"scope": 460,
																						"src": "4278:14:4",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 452,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4278:7:4",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"src": "4277:16:4"
																			},
																			"src": "4269:76:4"
																		},
																		{
																			"block": {
																				"id": 468,
																				"nodeType": "Block",
																				"src": "4352:55:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 463,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4386:1:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 462,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "4378:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 461,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "4378:7:4",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 464,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "4378:10:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "34",
																									"id": 465,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4390:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_4_by_1",
																										"typeString": "int_const 4"
																									},
																									"value": "4"
																								}
																							],
																							"id": 466,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4377:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_4_by_1_$",
																								"typeString": "tuple(address,int_const 4)"
																							}
																						},
																						"functionReturnParameters": 389,
																						"id": 467,
																						"nodeType": "Return",
																						"src": "4370:22:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 469,
																			"nodeType": "TryCatchClause",
																			"src": "4346:61:4"
																		}
																	],
																	"externalCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 448,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 383,
																						"src": "4249:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 447,
																					"name": "IOwnable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "4240:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																						"typeString": "type(contract IOwnable)"
																					}
																				},
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4240:20:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IOwnable_$164",
																					"typeString": "contract IOwnable"
																				}
																			},
																			"id": 450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4261:5:4",
																			"memberName": "admin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 163,
																			"src": "4240:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4240:28:4",
																		"tryCall": true,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 470,
																	"nodeType": "TryStatement",
																	"src": "4236:171:4"
																}
															]
														},
														"errorName": "",
														"id": 472,
														"nodeType": "TryCatchClause",
														"src": "4216:201:4"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 434,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "4127:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 433,
																"name": "IOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "4118:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																	"typeString": "type(contract IOwnable)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4118:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnable_$164",
																"typeString": "contract IOwnable"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4139:5:4",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "4118:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4118:28:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 473,
												"nodeType": "TryStatement",
												"src": "4114:303:4"
											}
										]
									},
									"functionSelector": "c54e5497",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkForCollectionSetter",
									"nameLocation": "3636:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3669:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3661:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3660:20:4"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3704:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3713:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 387,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3703:16:4"
									},
									"scope": 614,
									"src": "3627:796:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "4948:330:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5016:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "5055:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 488,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 477,
																				"src": "5025:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 487,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "5017:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5017:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5037:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "5017:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5017:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5078:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5008:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "5008:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 498,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5119:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5123:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5119:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 501,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 477,
																				"src": "5142:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 500,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "5133:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5133:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5154:5:4",
																	"memberName": "admin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 163,
																	"src": "5133:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5133:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5119:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f74207468652061646d696e",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5163:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															},
															"value": " Not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5111:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5111:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5111:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "5237:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "5249:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "5257:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5267:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "5191:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5191:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "5191:80:4"
											}
										]
									},
									"functionSelector": "ab016670",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfAdmin",
									"nameLocation": "4796:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "4851:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4843:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4843:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "4879:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4871:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4871:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4903:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4895:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4929:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "4921:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:105:4"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4948:0:4"
									},
									"scope": 614,
									"src": "4787:491:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "5707:280:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5725:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 533,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "5764:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 530,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "5734:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 529,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "5726:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5726:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5746:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "5726:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5726:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5787:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5717:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5717:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "5717:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 540,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5828:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5832:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5828:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 543,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "5851:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 542,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "5842:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5842:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5863:5:4",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 158,
																	"src": "5842:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5842:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5828:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420746865206f776e6572",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5872:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															},
															"value": " Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5820:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5820:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "5820:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "5946:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5958:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "5966:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "5976:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 551,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "5900:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "5900:80:4"
											}
										]
									},
									"functionSelector": "3755fa80",
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfOwner",
									"nameLocation": "5555:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "5610:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5602:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5602:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "5638:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5630:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5662:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5654:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "5688:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "5680:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5592:105:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5707:0:4"
									},
									"scope": 614,
									"src": "5546:441:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "6408:437:4",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "6426:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "6418:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6418:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 576,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 572,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6442:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 574,
														"indexExpression": {
															"id": 573,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "6468:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6442:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6480:6:4",
													"memberName": "setter",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 180,
													"src": "6442:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6418:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "currentSetter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "6504:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6529:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6521:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 579,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6521:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6521:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6504:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920736574",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6533:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															},
															"value": "Already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															}
														],
														"id": 577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6496:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6496:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "6496:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 592,
																				"name": "INTERFACE_ID_ERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 188,
																				"src": "6618:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 589,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 561,
																						"src": "6588:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 588,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "6580:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6580:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6600:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "6580:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6580:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 598,
																				"name": "INTERFACE_ID_ERC1155",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "6688:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 595,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 561,
																						"src": "6658:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 594,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "6650:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6650:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6670:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "6650:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6650:59:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6580:129:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 601,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6579:131:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6724:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															},
															"value": " Not Set of ERC721/ERC1155"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6558:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6558:204:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "6558:204:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 606,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "6804:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "6816:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "6824:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6834:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "updateRoyaltyInfoForCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6773:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6773:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "6773:65:4"
											}
										]
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
									"nameLocation": "6248:45:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "6311:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "6303:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "6339:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "6331:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6363:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "6355:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6355:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "6389:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "6381:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6381:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:105:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6408:0:4"
									},
									"scope": 614,
									"src": "6239:606:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 615,
							"src": "357:6490:4",
							"usedErrors": []
						}
					],
					"src": "32:6816:4"
				},
				"id": 4
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b9223c9d",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "105:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "135:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "127:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:26:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:0:5"
									},
									"scope": 644,
									"src": "96:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "177:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "197:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "189:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "217:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "209:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:36:5"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "257:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:18:5"
									},
									"scope": 644,
									"src": "168:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "281:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "314:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "306:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:20:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "386:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "407:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "428:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:73:5"
									},
									"scope": 644,
									"src": "272:174:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 645,
							"src": "57:391:5",
							"usedErrors": []
						}
					],
					"src": "32:417:5"
				},
				"id": 5
			}
		}
	}
}