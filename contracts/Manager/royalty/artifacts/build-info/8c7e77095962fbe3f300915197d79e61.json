{
	"id": "8c7e77095962fbe3f300915197d79e61",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/royalty/RoyaltyFeeSetter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport {IRoyaltyFeeRegistry} from \"./interface/IRoyaltyFeeRegistry.sol\";\nimport {IOwnable} from \"../interface/IOwnable.sol\";\n\n//  Register royalty fee\ncontract RoyaltyFeeSetter is Ownable {\n    // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    // ERC2981 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    address public immutable royaltyFeeRegistry;\n\n    //  Initialize a royalty fee registry\n    constructor(address _royaltyFeeRegistry) {\n        royaltyFeeRegistry = _royaltyFeeRegistry;\n    }\n\n\n    //\n    // function updateRoyaltyInfoForCollectionIfAdmin\n    //  @Description: Update royalty info if this is the admin of the collection\n    //  @param address collection address\n    //  @param address  Editor address\n    //  @param address  Wallet address receiving royalty fee\n    //  @param uint256 royalty fee 500=5%\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        //https://eips.ethereum.org/EIPS/eip-2981\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).admin(), \" Not the admin\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // tion updateRoyaltyInfoForCollectionIfOwner\n    //  @Description: Update royalty info if this is the owner of the collection\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfOwner(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).owner(), \" Not the owner\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n\n    //\n    // function updateOwnerOfRoyaltyFeeRegistry\n    //  @Description: Update Owner of the royalty fee registry\n    //  @param address\n    //  @return external\n    //\n    function updateOwnerOfRoyaltyFeeRegistry(address _owner) external onlyOwner {\n        IOwnable(royaltyFeeRegistry).transferOwnership(_owner);\n    }\n\n    //\n    // function updateRoyaltyFeeLimit\n    //  @Description: Update upper limit of royalty fee\n    //  @param uint256 500 = 5%\n    //  @return external\n    //\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {\n        IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n\n\n\n    //\n    // function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin\n    //  @Description: Update royalty fee information\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return internal\n    //\n    function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal {\n        (address currentSetter, ,) = IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection);\n        require(currentSetter == address(0), \"Already set\");\n\n        require(\n            (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||\n        IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)),\n            \" Not Set of ERC721/ERC1155\"\n        );\n\n        IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee);\n    }\n}\n"
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IOwnable {\n    function transferOwnership(address newOwner) external;\n\n    function owner() external view returns (address);\n\n    function admin() external view returns (address);\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external;\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/RoyaltyFeeSetter.sol": {
				"RoyaltyFeeSetter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royaltyFeeRegistry",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "updateOwnerOfRoyaltyFeeRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:4034  contract RoyaltyFeeSetter is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":761:859  constructor(address _royaltyFeeRegistry) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":812:852  royaltyFeeRegistry = _royaltyFeeRegistry */\n  and\n  0x80\n  mstore\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:4034  contract RoyaltyFeeSetter is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:4034  contract RoyaltyFeeSetter is Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":358:4034  contract RoyaltyFeeSetter is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb060dd86\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xc16f5156\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xc16f5156\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe72ba456\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0xb060dd86\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb9223c9d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x715018a6\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xab016670\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x33bf6156\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3755fa80\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":516:572  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_3:\n      tag_17\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":188:254   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":176:255   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":158:256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":146:148   */\n      0x20\n        /* \"#utility.yul\":131:149   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":516:572  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1983:2424  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_21\n      tag_26\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1205:1247   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1193:1248   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1175:1249   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1163:1165   */\n      0x20\n        /* \"#utility.yul\":1148:1166   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_19\n        /* \"#utility.yul\":1029:1255   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1224:1715  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_7:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":606:662  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_8:\n      tag_17\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2922:3094  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {... */\n    tag_9:\n      tag_21\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":427:482  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_10:\n      tag_17\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":669:712  address public immutable royaltyFeeRegistry */\n    tag_11:\n      tag_27\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2604:2751  function updateOwnerOfRoyaltyFeeRegistry(address _owner) external onlyOwner {... */\n    tag_12:\n      tag_21\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_21\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1983:2424  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_24:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2222  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2201:2221  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2222  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":158:256   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2200  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":131:149   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2163:2222  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2162:2222  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2154:2247  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2181:2183   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2154:2247  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2163:2184   */\n      mstore\n        /* \"#utility.yul\":2220:2222   */\n      0x14\n        /* \"#utility.yul\":2200:2218   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2193:2223   */\n      mstore\n        /* \"#utility.yul\":2259:2281   */\n      0x204d757374206e6f742062652045524332393831000000000000000000000000\n        /* \"#utility.yul\":2239:2257   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2232:2282   */\n      mstore\n        /* \"#utility.yul\":2299:2317   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2154:2247  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2288:2298  collection */\n      dup4\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2279:2305  IOwnable(collection).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2279:2307  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2265:2307  msg.sender == IOwnable(collection).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2265:2275  msg.sender */\n      caller\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2265:2307  msg.sender == IOwnable(collection).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2786:2788   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2768:2789   */\n      mstore\n        /* \"#utility.yul\":2825:2827   */\n      0x0e\n        /* \"#utility.yul\":2805:2823   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2798:2828   */\n      mstore\n        /* \"#utility.yul\":2864:2880   */\n      0x204e6f7420746865206f776e6572000000000000000000000000000000000000\n        /* \"#utility.yul\":2844:2862   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2837:2881   */\n      mstore\n        /* \"#utility.yul\":2898:2916   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_61\n        /* \"#utility.yul\":2584:2922   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2257:2326  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n    tag_67:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2337:2417  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      tag_70\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2383:2393  collection */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2395:2401  setter */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2403:2411  receiver */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2413:2416  fee */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2337:2382  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin */\n      tag_71\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2337:2417  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1983:2424  function updateRoyaltyInfoForCollectionIfOwner(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1224:1715  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_33:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1513  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1492:1512  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1513  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":158:256   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1491  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":131:149   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1454:1513  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_83:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1453:1513  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":2181:2183   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2163:2184   */\n      mstore\n        /* \"#utility.yul\":2220:2222   */\n      0x14\n        /* \"#utility.yul\":2200:2218   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2193:2223   */\n      mstore\n        /* \"#utility.yul\":2259:2281   */\n      0x204d757374206e6f742062652045524332393831000000000000000000000000\n        /* \"#utility.yul\":2239:2257   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2232:2282   */\n      mstore\n        /* \"#utility.yul\":2299:2317   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_61\n        /* \"#utility.yul\":1979:2323   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1445:1538  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_84:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1579:1589  collection */\n      dup4\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1570:1596  IOwnable(collection).admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1570:1598  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_88:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1556:1598  msg.sender == IOwnable(collection).admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1556:1566  msg.sender */\n      caller\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1556:1598  msg.sender == IOwnable(collection).admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1548:1617  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3129:3131   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1548:1617  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3111:3132   */\n      mstore\n        /* \"#utility.yul\":3168:3170   */\n      0x0e\n        /* \"#utility.yul\":3148:3166   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3141:3171   */\n      mstore\n        /* \"#utility.yul\":3207:3223   */\n      0x204e6f74207468652061646d696e000000000000000000000000000000000000\n        /* \"#utility.yul\":3187:3205   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3180:3224   */\n      mstore\n        /* \"#utility.yul\":3241:3259   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":1548:1617  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_61\n        /* \"#utility.yul\":2927:3265   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2922:3094  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3008:3087  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      0xb9223c9d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3416:3441   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3028:3046  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3008:3069  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0xb9223c9d\n      swap1\n        /* \"#utility.yul\":3389:3407   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3008:3087  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyFeeLimit(_royaltyFeeLimit) */\n    tag_96:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2922:3094  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2604:2751  function updateOwnerOfRoyaltyFeeRegistry(address _owner) external onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2744  IOwnable(royaltyFeeRegistry).transferOwnership(_owner) */\n      mload(0x40)\n      0xf2fde38b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2736  IOwnable(royaltyFeeRegistry).transferOwnership */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1193:1248   */\n      dup3\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2744  IOwnable(royaltyFeeRegistry).transferOwnership(_owner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1175:1249   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2699:2717  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2736  IOwnable(royaltyFeeRegistry).transferOwnership */\n      and\n      swap1\n      0xf2fde38b\n      swap1\n        /* \"#utility.yul\":1148:1166   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":2690:2744  IOwnable(royaltyFeeRegistry).transferOwnership(_owner) */\n      tag_96\n        /* \"#utility.yul\":1029:1255   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3654:3656   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3636:3657   */\n      mstore\n        /* \"#utility.yul\":3693:3695   */\n      0x26\n        /* \"#utility.yul\":3673:3691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3666:3696   */\n      mstore\n        /* \"#utility.yul\":3732:3766   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3712:3730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3705:3767   */\n      mstore\n        /* \"#utility.yul\":3803:3811   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3783:3801   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3776:3812   */\n      mstore\n        /* \"#utility.yul\":3829:3848   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_61\n        /* \"#utility.yul\":3452:3854   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3349:4032  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n    tag_71:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3557:3633  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      mload(0x40)\n      0xe31ef91c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3557:3621  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1193:1248   */\n      dup6\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3557:3633  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1175:1249   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3529:3550  address currentSetter */\n      0x00\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3577:3595  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3557:3621  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection */\n      swap1\n      swap2\n      and\n      swap1\n      0xe31ef91c\n      swap1\n        /* \"#utility.yul\":1148:1166   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3557:3633  IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3528:3633  (address currentSetter, ,) = IRoyaltyFeeRegistry(royaltyFeeRegistry).royaltyFeeInfoCollection(collection) */\n      swap1\n      swap2\n      pop\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3651:3678  currentSetter == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3643:3694  require(currentSetter == address(0), \"Already set\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4512:4514   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3643:3694  require(currentSetter == address(0), \"Already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4494:4515   */\n      mstore\n        /* \"#utility.yul\":4551:4553   */\n      0x0b\n        /* \"#utility.yul\":4531:4549   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4524:4554   */\n      mstore\n        /* \"#utility.yul\":4590:4603   */\n      0x416c726561647920736574000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4570:4588   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4563:4604   */\n      mstore\n        /* \"#utility.yul\":4621:4639   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3643:3694  require(currentSetter == address(0), \"Already set\") */\n      tag_61\n        /* \"#utility.yul\":4310:4645   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3643:3694  require(currentSetter == address(0), \"Already set\") */\n    tag_121:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3727:3785  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3765:3784  INTERFACE_ID_ERC721 */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3727:3785  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":158:256   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3727:3764  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":131:149   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3727:3785  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_127:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3727:3856  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||... */\n      dup1\n      tag_132\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3797:3856  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3835:3855  INTERFACE_ID_ERC1155 */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3797:3856  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":158:256   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3797:3834  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":131:149   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3797:3856  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_132:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3705:3909  require(... */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4852:4854   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3705:3909  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4834:4855   */\n      mstore\n        /* \"#utility.yul\":4891:4893   */\n      0x1a\n        /* \"#utility.yul\":4871:4889   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4864:4894   */\n      mstore\n        /* \"#utility.yul\":4930:4958   */\n      0x204e6f7420536574206f66204552433732312f45524331313535000000000000\n        /* \"#utility.yul\":4910:4928   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4903:4959   */\n      mstore\n        /* \"#utility.yul\":4976:4994   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3705:3909  require(... */\n      tag_61\n        /* \"#utility.yul\":4650:5000   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3705:3909  require(... */\n    tag_133:\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3920:4025  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      mload(0x40)\n      0xbbdf9b6800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3920:3990  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5315:5330   */\n      dup7\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3920:4025  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5297:5331   */\n      mstore\n        /* \"#utility.yul\":5367:5382   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5347:5365   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5340:5383   */\n      mstore\n        /* \"#utility.yul\":5419:5434   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":5399:5417   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5392:5435   */\n      mstore\n        /* \"#utility.yul\":5451:5469   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5444:5478   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3940:3958  royaltyFeeRegistry */\n      immutable(\"0x911a39fbf665a24ad3b6efc185d4b936bbda1900793ae2f7c00f4d18bdd96685\")\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3920:3990  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection */\n      and\n      swap1\n      0xbbdf9b68\n      swap1\n        /* \"#utility.yul\":5208:5227   */\n      0x84\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3920:4025  IRoyaltyFeeRegistry(royaltyFeeRegistry).updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3518:4032  {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":3349:4032  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5691:5693   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5673:5694   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5710:5728   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5703:5733   */\n      mstore\n        /* \"#utility.yul\":5769:5803   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5749:5767   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5742:5804   */\n      mstore\n        /* \"#utility.yul\":5821:5839   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_61\n        /* \"#utility.yul\":5489:5845   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":267:421   */\n    tag_150:\n        /* \"#utility.yul\":353:395   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":342:396   */\n      and\n        /* \"#utility.yul\":335:340   */\n      dup2\n        /* \"#utility.yul\":332:397   */\n      eq\n        /* \"#utility.yul\":322:415   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":411:412   */\n      0x00\n        /* \"#utility.yul\":408:409   */\n      dup1\n        /* \"#utility.yul\":401:413   */\n      revert\n        /* \"#utility.yul\":426:1024   */\n    tag_23:\n        /* \"#utility.yul\":512:518   */\n      0x00\n        /* \"#utility.yul\":520:526   */\n      dup1\n        /* \"#utility.yul\":528:534   */\n      0x00\n        /* \"#utility.yul\":536:542   */\n      dup1\n        /* \"#utility.yul\":589:592   */\n      0x80\n        /* \"#utility.yul\":577:586   */\n      dup6\n        /* \"#utility.yul\":568:575   */\n      dup8\n        /* \"#utility.yul\":564:587   */\n      sub\n        /* \"#utility.yul\":560:593   */\n      slt\n        /* \"#utility.yul\":557:610   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":606:607   */\n      0x00\n        /* \"#utility.yul\":603:604   */\n      dup1\n        /* \"#utility.yul\":596:608   */\n      revert\n        /* \"#utility.yul\":557:610   */\n    tag_156:\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":632:655   */\n      calldataload\n        /* \"#utility.yul\":664:695   */\n      tag_157\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":664:695   */\n      tag_150\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":714:719   */\n      swap4\n      pop\n        /* \"#utility.yul\":771:773   */\n      0x20\n        /* \"#utility.yul\":756:774   */\n      dup6\n      add\n        /* \"#utility.yul\":743:775   */\n      calldataload\n        /* \"#utility.yul\":784:817   */\n      tag_158\n        /* \"#utility.yul\":743:775   */\n      dup2\n        /* \"#utility.yul\":784:817   */\n      tag_150\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":836:843   */\n      swap3\n      pop\n        /* \"#utility.yul\":895:897   */\n      0x40\n        /* \"#utility.yul\":880:898   */\n      dup6\n      add\n        /* \"#utility.yul\":867:899   */\n      calldataload\n        /* \"#utility.yul\":908:941   */\n      tag_159\n        /* \"#utility.yul\":867:899   */\n      dup2\n        /* \"#utility.yul\":908:941   */\n      tag_150\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":426:1024   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":960:967   */\n      swap3\n      swap4\n        /* \"#utility.yul\":1014:1016   */\n      0x60\n        /* \"#utility.yul\":999:1017   */\n      add\n        /* \"#utility.yul\":986:1018   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":426:1024   */\n      jump\t// out\n        /* \"#utility.yul\":1260:1440   */\n    tag_39:\n        /* \"#utility.yul\":1319:1325   */\n      0x00\n        /* \"#utility.yul\":1372:1374   */\n      0x20\n        /* \"#utility.yul\":1360:1369   */\n      dup3\n        /* \"#utility.yul\":1351:1358   */\n      dup5\n        /* \"#utility.yul\":1347:1370   */\n      sub\n        /* \"#utility.yul\":1343:1375   */\n      slt\n        /* \"#utility.yul\":1340:1392   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1340:1392   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":1411:1434   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1260:1440   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1445:1692   */\n    tag_49:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1557:1559   */\n      0x20\n        /* \"#utility.yul\":1545:1554   */\n      dup3\n        /* \"#utility.yul\":1536:1543   */\n      dup5\n        /* \"#utility.yul\":1532:1555   */\n      sub\n        /* \"#utility.yul\":1528:1560   */\n      slt\n        /* \"#utility.yul\":1525:1577   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1573:1574   */\n      0x00\n        /* \"#utility.yul\":1570:1571   */\n      dup1\n        /* \"#utility.yul\":1563:1575   */\n      revert\n        /* \"#utility.yul\":1525:1577   */\n    tag_164:\n        /* \"#utility.yul\":1612:1621   */\n      dup2\n        /* \"#utility.yul\":1599:1622   */\n      calldataload\n        /* \"#utility.yul\":1631:1662   */\n      tag_165\n        /* \"#utility.yul\":1656:1661   */\n      dup2\n        /* \"#utility.yul\":1631:1662   */\n      tag_150\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1681:1686   */\n      swap4\n        /* \"#utility.yul\":1445:1692   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1697:1974   */\n    tag_59:\n        /* \"#utility.yul\":1764:1770   */\n      0x00\n        /* \"#utility.yul\":1817:1819   */\n      0x20\n        /* \"#utility.yul\":1805:1814   */\n      dup3\n        /* \"#utility.yul\":1796:1803   */\n      dup5\n        /* \"#utility.yul\":1792:1815   */\n      sub\n        /* \"#utility.yul\":1788:1820   */\n      slt\n        /* \"#utility.yul\":1785:1837   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1830:1831   */\n      dup1\n        /* \"#utility.yul\":1823:1835   */\n      revert\n        /* \"#utility.yul\":1785:1837   */\n    tag_167:\n        /* \"#utility.yul\":1865:1874   */\n      dup2\n        /* \"#utility.yul\":1859:1875   */\n      mload\n        /* \"#utility.yul\":1918:1923   */\n      dup1\n        /* \"#utility.yul\":1911:1924   */\n      iszero\n        /* \"#utility.yul\":1904:1925   */\n      iszero\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1894:1926   */\n      eq\n        /* \"#utility.yul\":1884:1944   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1937:1938   */\n      dup1\n        /* \"#utility.yul\":1930:1942   */\n      revert\n        /* \"#utility.yul\":2328:2579   */\n    tag_66:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2451:2453   */\n      0x20\n        /* \"#utility.yul\":2439:2448   */\n      dup3\n        /* \"#utility.yul\":2430:2437   */\n      dup5\n        /* \"#utility.yul\":2426:2449   */\n      sub\n        /* \"#utility.yul\":2422:2454   */\n      slt\n        /* \"#utility.yul\":2419:2471   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2467:2468   */\n      0x00\n        /* \"#utility.yul\":2464:2465   */\n      dup1\n        /* \"#utility.yul\":2457:2469   */\n      revert\n        /* \"#utility.yul\":2419:2471   */\n    tag_171:\n        /* \"#utility.yul\":2499:2508   */\n      dup2\n        /* \"#utility.yul\":2493:2509   */\n      mload\n        /* \"#utility.yul\":2518:2549   */\n      tag_165\n        /* \"#utility.yul\":2543:2548   */\n      dup2\n        /* \"#utility.yul\":2518:2549   */\n      tag_150\n      jump\t// in\n        /* \"#utility.yul\":3859:4305   */\n    tag_120:\n        /* \"#utility.yul\":3947:3953   */\n      0x00\n        /* \"#utility.yul\":3955:3961   */\n      dup1\n        /* \"#utility.yul\":3963:3969   */\n      0x00\n        /* \"#utility.yul\":4016:4018   */\n      0x60\n        /* \"#utility.yul\":4004:4013   */\n      dup5\n        /* \"#utility.yul\":3995:4002   */\n      dup7\n        /* \"#utility.yul\":3991:4014   */\n      sub\n        /* \"#utility.yul\":3987:4019   */\n      slt\n        /* \"#utility.yul\":3984:4036   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":4032:4033   */\n      0x00\n        /* \"#utility.yul\":4029:4030   */\n      dup1\n        /* \"#utility.yul\":4022:4034   */\n      revert\n        /* \"#utility.yul\":3984:4036   */\n    tag_178:\n        /* \"#utility.yul\":4064:4073   */\n      dup4\n        /* \"#utility.yul\":4058:4074   */\n      mload\n        /* \"#utility.yul\":4083:4114   */\n      tag_179\n        /* \"#utility.yul\":4108:4113   */\n      dup2\n        /* \"#utility.yul\":4083:4114   */\n      tag_150\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4183:4185   */\n      0x20\n        /* \"#utility.yul\":4168:4186   */\n      dup6\n      add\n        /* \"#utility.yul\":4162:4187   */\n      mload\n        /* \"#utility.yul\":4133:4138   */\n      swap1\n      swap4\n      pop\n        /* \"#utility.yul\":4196:4229   */\n      tag_180\n        /* \"#utility.yul\":4162:4187   */\n      dup2\n        /* \"#utility.yul\":4196:4229   */\n      tag_150\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4248:4255   */\n      dup1\n        /* \"#utility.yul\":4238:4255   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":4295:4297   */\n      0x40\n        /* \"#utility.yul\":4284:4293   */\n      dup5\n        /* \"#utility.yul\":4280:4298   */\n      add\n        /* \"#utility.yul\":4274:4299   */\n      mload\n        /* \"#utility.yul\":4264:4299   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:4305   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n\n    auxdata: 0xa264697066735822122035e060f446b0b6dcb532b69d8157f96d9269200815a55c6b43efabeef12185a964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 73,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:6"
															},
															"nodeType": "YulIf",
															"src": "204:70:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:290:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b50604051610f9f380380610f9f83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b608051610e9f61010060003960008181610200015281816106da0152818161079c015281816108ca0152610bde0152610e9f6000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b060dd8611610081578063c16f51561161005b578063c16f5156146101fb578063e72ba45614610222578063f2fde38b1461023557600080fd5b8063b060dd861461019a578063b9223c9d146101c1578063bc6bc0cd146101d457600080fd5b8063715018a6116100b2578063715018a6146101405780638da5cb5b14610148578063ab0166701461018757600080fd5b806333bf6156146100ce5780633755fa801461012b575b600080fd5b6100f57fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61013e610139366004610d59565b610248565b005b61013e610477565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610122565b61013e610195366004610d59565b61048b565b6100f57f2a55205a0000000000000000000000000000000000000000000000000000000081565b61013e6101cf366004610daa565b6106a3565b6100f57f80ac58cd0000000000000000000000000000000000000000000000000000000081565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b61013e610230366004610dc3565b61074f565b61013e610243366004610dc3565b6107cb565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa1580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610de7565b15610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610e09565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f7420746865206f776e65720000000000000000000000000000000000006044820152606401610359565b61047184848484610882565b50505050565b61047f610c41565b6104896000610cc2565b565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190610de7565b156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f7420626520455243323938310000000000000000000000006044820152606401610359565b8373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190610e09565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f74207468652061646d696e0000000000000000000000000000000000006044820152606401610359565b6106ab610c41565b6040517fb9223c9d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b9223c9d906024015b600060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b5050505050565b610757610c41565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063f2fde38b9060240161071a565b6107d3610c41565b73ffffffffffffffffffffffffffffffffffffffff8116610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610359565b61087f81610cc2565b50565b6040517fe31ef91c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e31ef91c90602401606060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610e26565b509091505073ffffffffffffffffffffffffffffffffffffffff8116156109ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f416c7265616479207365740000000000000000000000000000000000000000006044820152606401610359565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a689190610de7565b80610b1c57506040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190610de7565b610b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f455243313135350000000000006044820152606401610359565b6040517fbbdf9b6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301528481166044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063bbdf9b6890608401600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610359565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461087f57600080fd5b60008060008060808587031215610d6f57600080fd5b8435610d7a81610d37565b93506020850135610d8a81610d37565b92506040850135610d9a81610d37565b9396929550929360600135925050565b600060208284031215610dbc57600080fd5b5035919050565b600060208284031215610dd557600080fd5b8135610de081610d37565b9392505050565b600060208284031215610df957600080fd5b81518015158114610de057600080fd5b600060208284031215610e1b57600080fd5b8151610de081610d37565b600080600060608486031215610e3b57600080fd5b8351610e4681610d37565b6020850151909350610e5781610d37565b8092505060408401519050925092509256fea264697066735822122035e060f446b0b6dcb532b69d8157f96d9269200815a55c6b43efabeef12185a964736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF9F CODESIZE SUB DUP1 PUSH2 0xF9F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x99 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xE9F PUSH2 0x100 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x200 ADD MSTORE DUP2 DUP2 PUSH2 0x6DA ADD MSTORE DUP2 DUP2 PUSH2 0x79C ADD MSTORE DUP2 DUP2 PUSH2 0x8CA ADD MSTORE PUSH2 0xBDE ADD MSTORE PUSH2 0xE9F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB060DD86 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC16F5156 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC16F5156 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE72BA456 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xAB016670 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x477 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0xF5 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0xF5 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH2 0x13E PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST ISZERO PUSH2 0x362 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420746865206F776E6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x471 DUP5 DUP5 DUP5 DUP5 PUSH2 0x882 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x47F PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x489 PUSH1 0x0 PUSH2 0xCC2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x515 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F74207468652061646D696E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB9223C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xB9223C9D SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x757 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF2FDE38B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH2 0x71A JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xC41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x87F DUP2 PUSH2 0xCC2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE31EF91C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE31EF91C SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x937 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920736574000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST DUP1 PUSH2 0xB1C JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xBBDF9B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xBBDF9B68 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xD7A DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xD8A DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xD9A DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE0 DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDE0 DUP2 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0xE46 DUP2 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0xE57 DUP2 PUSH2 0xD37 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xE0 PUSH1 0xF4 CHAINID 0xB0 0xB6 0xDC 0xB5 ORIGIN 0xB6 SWAP14 DUP2 JUMPI 0xF9 PUSH14 0x9269200815A55C6B43EFABEEF121 DUP6 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "358:3676:4:-:0;;;761:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;-1:-1:-1;;;;;812:40:4;;;358:3676;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;:::-;358:3676:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC2981_185": {
									"entryPoint": null,
									"id": 185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3137,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3266,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateRoyaltyInfoForCollectionIfOwnerOrAdmin_370": {
									"entryPoint": 2178,
									"id": 370,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1143,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeRegistry_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1995,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateOwnerOfRoyaltyFeeRegistry_296": {
									"entryPoint": 1871,
									"id": 296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_311": {
									"entryPoint": 1699,
									"id": 311,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfAdmin_239": {
									"entryPoint": 1163,
									"id": 239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfOwner_281": {
									"entryPoint": 584,
									"id": 281,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5847:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "113:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "123:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "131:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "188:66:6",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "176:79:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "158:98:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "158:98:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "82:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "104:4:6",
														"type": ""
													}
												],
												"src": "14:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:109:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "399:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "411:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "401:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "401:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "401:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "335:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "346:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "353:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "342:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "342:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "332:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "332:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "325:73:6"
															},
															"nodeType": "YulIf",
															"src": "322:93:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "301:5:6",
														"type": ""
													}
												],
												"src": "267:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "547:477:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "594:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "603:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "606:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "596:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "596:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "596:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "568:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "577:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "564:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "589:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:33:6"
															},
															"nodeType": "YulIf",
															"src": "557:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "619:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "645:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "632:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "623:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "664:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "664:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "704:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "714:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "704:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "728:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "760:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "771:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "756:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "756:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "743:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "732:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "809:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "784:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "784:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "836:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "826:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "852:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "884:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "895:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "880:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "867:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:32:6"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "856:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "933:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "908:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "908:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "950:17:6",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "960:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "976:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1003:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1014:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "999:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "986:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "489:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "500:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "512:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "520:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "536:6:6",
														"type": ""
													}
												],
												"src": "426:598:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1130:125:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1140:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1152:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1163:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1148:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1140:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1182:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1197:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1205:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1193:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1193:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1175:74:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1175:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1099:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1110:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1121:4:6",
														"type": ""
													}
												],
												"src": "1029:226:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1351:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1360:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:32:6"
															},
															"nodeType": "YulIf",
															"src": "1340:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1401:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1424:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1411:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1296:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1307:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1319:6:6",
														"type": ""
													}
												],
												"src": "1260:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1515:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1561:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1570:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1573:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1563:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1563:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1563:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1532:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1532:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1557:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1528:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:32:6"
															},
															"nodeType": "YulIf",
															"src": "1525:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1586:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1599:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1590:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1656:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1631:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1631:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1631:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1671:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1681:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:6",
														"type": ""
													}
												],
												"src": "1445:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1775:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1833:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1823:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1823:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1823:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1796:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1805:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1792:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1792:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:32:6"
															},
															"nodeType": "YulIf",
															"src": "1785:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1846:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1865:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1859:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1850:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1928:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1937:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1930:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1930:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1930:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1897:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1918:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1911:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1911:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1904:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1904:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1894:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1894:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:40:6"
															},
															"nodeType": "YulIf",
															"src": "1884:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1953:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1963:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1953:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1741:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1752:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1764:6:6",
														"type": ""
													}
												],
												"src": "1697:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2153:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2163:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2204:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2215:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2200:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2200:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2193:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2193:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2243:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2254:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2239:18:6"
																	},
																	{
																		"hexValue": "204d757374206e6f742062652045524332393831",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2259:22:6",
																		"type": "",
																		"value": " Must not be ERC2981"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2232:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2232:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2291:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2291:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2130:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2144:4:6",
														"type": ""
													}
												],
												"src": "1979:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2409:170:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2455:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2464:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2467:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2457:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2457:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2457:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2430:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2426:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:32:6"
															},
															"nodeType": "YulIf",
															"src": "2419:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2480:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2499:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2493:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2484:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2543:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2518:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2518:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2558:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2568:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2375:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2386:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2398:6:6",
														"type": ""
													}
												],
												"src": "2328:251:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2758:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2775:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2786:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2768:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2768:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2768:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2809:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2805:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2805:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2825:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2798:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2848:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2859:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2844:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:18:6"
																	},
																	{
																		"hexValue": "204e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2864:16:6",
																		"type": "",
																		"value": " Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2837:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2837:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2890:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2902:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2913:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2898:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2890:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2735:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2749:4:6",
														"type": ""
													}
												],
												"src": "2584:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3101:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3118:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3129:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3111:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3152:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3163:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3148:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3168:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3141:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3141:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3141:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3202:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3187:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3187:18:6"
																	},
																	{
																		"hexValue": "204e6f74207468652061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3207:16:6",
																		"type": "",
																		"value": " Not the admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3180:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3233:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3245:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3256:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3241:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3233:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3078:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3092:4:6",
														"type": ""
													}
												],
												"src": "2927:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3371:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3381:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3393:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3404:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3389:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3381:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3423:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3434:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3416:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3340:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3351:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3362:4:6",
														"type": ""
													}
												],
												"src": "3270:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3626:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3643:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3654:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3636:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3677:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3688:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3673:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3693:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3716:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3727:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3712:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3732:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3705:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3798:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3783:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3783:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3803:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3821:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3833:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3821:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3603:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3617:4:6",
														"type": ""
													}
												],
												"src": "3452:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3974:331:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4020:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4029:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4022:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4022:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4022:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3991:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3991:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4016:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3987:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:32:6"
															},
															"nodeType": "YulIf",
															"src": "3984:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4045:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4064:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4058:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4058:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4049:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4108:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4083:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4083:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4133:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4147:40:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4172:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4183:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4162:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:25:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4151:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4221:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4196:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4238:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4248:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4264:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4284:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4295:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4280:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4280:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4274:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:25:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3924:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3935:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3947:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3955:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3963:6:6",
														"type": ""
													}
												],
												"src": "3859:446:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4484:161:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4501:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4512:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4494:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4494:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4535:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4546:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4531:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4531:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4551:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4524:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4524:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4524:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4574:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4585:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4570:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4570:18:6"
																	},
																	{
																		"hexValue": "416c726561647920736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4590:13:6",
																		"type": "",
																		"value": "Already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4563:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:41:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4613:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4625:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4636:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4621:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4613:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4461:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4475:4:6",
														"type": ""
													}
												],
												"src": "4310:335:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4824:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4841:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4852:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4834:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4834:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4834:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4914:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4925:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4910:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4910:18:6"
																	},
																	{
																		"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4930:28:6",
																		"type": "",
																		"value": " Not Set of ERC721/ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4903:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4968:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4980:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4991:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4968:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4801:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4815:4:6",
														"type": ""
													}
												],
												"src": "4650:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5190:294:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5200:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5212:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5223:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5208:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5208:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5200:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5236:52:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5246:42:6",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5240:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5304:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5319:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5327:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5315:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5297:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5297:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5297:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5351:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5362:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5347:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5347:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5371:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5379:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5367:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5367:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5340:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5403:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5414:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5399:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5399:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5423:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5431:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5419:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5419:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5392:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5392:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5392:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5455:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5466:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5451:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5451:18:6"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5471:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5135:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5146:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5154:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5162:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5170:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5181:4:6",
														"type": ""
													}
												],
												"src": "5005:479:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5663:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5680:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5691:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5673:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5673:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5714:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5725:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5710:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5710:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5730:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5703:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5703:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5753:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5764:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5749:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5749:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5769:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5742:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5742:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5742:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5813:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5825:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5821:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5821:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5813:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5640:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5654:4:6",
														"type": ""
													}
												],
												"src": "5489:356:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Must not be ERC2981\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not Set of ERC721/ERC1155\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"187": [
									{
										"length": 32,
										"start": 512
									},
									{
										"length": 32,
										"start": 1754
									},
									{
										"length": 32,
										"start": 1948
									},
									{
										"length": 32,
										"start": 2250
									},
									{
										"length": 32,
										"start": 3038
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b060dd8611610081578063c16f51561161005b578063c16f5156146101fb578063e72ba45614610222578063f2fde38b1461023557600080fd5b8063b060dd861461019a578063b9223c9d146101c1578063bc6bc0cd146101d457600080fd5b8063715018a6116100b2578063715018a6146101405780638da5cb5b14610148578063ab0166701461018757600080fd5b806333bf6156146100ce5780633755fa801461012b575b600080fd5b6100f57fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b61013e610139366004610d59565b610248565b005b61013e610477565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610122565b61013e610195366004610d59565b61048b565b6100f57f2a55205a0000000000000000000000000000000000000000000000000000000081565b61013e6101cf366004610daa565b6106a3565b6100f57f80ac58cd0000000000000000000000000000000000000000000000000000000081565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b61013e610230366004610dc3565b61074f565b61013e610243366004610dc3565b6107cb565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa1580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610de7565b15610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d19190610e09565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f7420746865206f776e65720000000000000000000000000000000000006044820152606401610359565b61047184848484610882565b50505050565b61047f610c41565b6104896000610cc2565b565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190610de7565b156105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f7420626520455243323938310000000000000000000000006044820152606401610359565b8373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190610e09565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f74207468652061646d696e0000000000000000000000000000000000006044820152606401610359565b6106ab610c41565b6040517fb9223c9d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b9223c9d906024015b600060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b5050505050565b610757610c41565b6040517ff2fde38b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063f2fde38b9060240161071a565b6107d3610c41565b73ffffffffffffffffffffffffffffffffffffffff8116610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610359565b61087f81610cc2565b50565b6040517fe31ef91c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e31ef91c90602401606060405180830381865afa158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190610e26565b509091505073ffffffffffffffffffffffffffffffffffffffff8116156109ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f416c7265616479207365740000000000000000000000000000000000000000006044820152606401610359565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a689190610de7565b80610b1c57506040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190610de7565b610b82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f455243313135350000000000006044820152606401610359565b6040517fbbdf9b6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301528481166044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000169063bbdf9b6890608401600060405180830381600087803b158015610c2257600080fd5b505af1158015610c36573d6000803e3d6000fd5b505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610359565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff8116811461087f57600080fd5b60008060008060808587031215610d6f57600080fd5b8435610d7a81610d37565b93506020850135610d8a81610d37565b92506040850135610d9a81610d37565b9396929550929360600135925050565b600060208284031215610dbc57600080fd5b5035919050565b600060208284031215610dd557600080fd5b8135610de081610d37565b9392505050565b600060208284031215610df957600080fd5b81518015158114610de057600080fd5b600060208284031215610e1b57600080fd5b8151610de081610d37565b600080600060608486031215610e3b57600080fd5b8351610e4681610d37565b6020850151909350610e5781610d37565b8092505060408401519050925092509256fea264697066735822122035e060f446b0b6dcb532b69d8157f96d9269200815a55c6b43efabeef12185a964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB060DD86 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC16F5156 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC16F5156 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE72BA456 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xAB016670 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x33BF6156 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x477 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0xD59 JUMP JUMPDEST PUSH2 0x48B JUMP JUMPDEST PUSH2 0xF5 PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xDAA JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0xF5 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH2 0x13E PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST ISZERO PUSH2 0x362 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420746865206F776E6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x471 DUP5 DUP5 DUP5 DUP5 PUSH2 0x882 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x47F PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x489 PUSH1 0x0 PUSH2 0xCC2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x515 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60F SWAP2 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F74207468652061646D696E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x6AB PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB9223C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xB9223C9D SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x757 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF2FDE38B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH2 0x71A JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xC41 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x359 JUMP JUMPDEST PUSH2 0x87F DUP2 PUSH2 0xCC2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE31EF91C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xE31EF91C SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x937 SWAP2 SWAP1 PUSH2 0xE26 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920736574000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST DUP1 PUSH2 0xB1C JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xBBDF9B6800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xBBDF9B68 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x359 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0xD7A DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0xD8A DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0xD9A DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDE0 DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDE0 DUP2 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0xE46 DUP2 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0xE57 DUP2 PUSH2 0xD37 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0xE0 PUSH1 0xF4 CHAINID 0xB0 0xB6 0xDC 0xB5 ORIGIN 0xB6 SWAP14 DUP2 JUMPI 0xF9 PUSH14 0x9269200815A55C6B43EFABEEF121 DUP6 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "358:3676:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;516:56;;;;;;;;188:66:6;176:79;;;158:98;;146:2;131:18;516:56:4;;;;;;;;1983:441;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;;;1201:85;;;1205:42:6;1193:55;;;1175:74;;1163:2;1148:18;1201:85:0;1029:226:6;1224:491:4;;;;;;:::i;:::-;;:::i;606:56::-;;;;;2922:172;;;;;;:::i;:::-;;:::i;427:55::-;;;;;669:43;;;;;2604:147;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1983:441:4:-;2163:59;;;;;2201:20;2163:59;;;158:98:6;2163:37:4;;;;;;131:18:6;;2163:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2162:60;2154:93;;;;;;;2181:2:6;2154:93:4;;;2163:21:6;2220:2;2200:18;;;2193:30;2259:22;2239:18;;;2232:50;2299:18;;2154:93:4;;;;;;;;;2288:10;2279:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2265:42;;:10;:42;;;2257:69;;;;;;;2786:2:6;2257:69:4;;;2768:21:6;2825:2;2805:18;;;2798:30;2864:16;2844:18;;;2837:44;2898:18;;2257:69:4;2584:338:6;2257:69:4;2337:80;2383:10;2395:6;2403:8;2413:3;2337:45;:80::i;:::-;1983:441;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1224:491:4:-;1454:59;;;;;1492:20;1454:59;;;158:98:6;1454:37:4;;;;;;131:18:6;;1454:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1453:60;1445:93;;;;;;;2181:2:6;1445:93:4;;;2163:21:6;2220:2;2200:18;;;2193:30;2259:22;2239:18;;;2232:50;2299:18;;1445:93:4;1979:344:6;1445:93:4;1579:10;1570:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1556:42;;:10;:42;;;1548:69;;;;;;;3129:2:6;1548:69:4;;;3111:21:6;3168:2;3148:18;;;3141:30;3207:16;3187:18;;;3180:44;3241:18;;1548:69:4;2927:338:6;2922:172:4;1094:13:0;:11;:13::i;:::-;3008:79:4::1;::::0;;;;::::1;::::0;::::1;3416:25:6::0;;;3028:18:4::1;3008:61;;::::0;::::1;::::0;3389:18:6;;3008:79:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2922:172:::0;:::o;2604:147::-;1094:13:0;:11;:13::i;:::-;2690:54:4::1;::::0;;;;:46:::1;1193:55:6::0;;;2690:54:4::1;::::0;::::1;1175:74:6::0;2699:18:4::1;2690:46;::::0;::::1;::::0;1148:18:6;;2690:54:4::1;1029:226:6::0;2081:198:0;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;3654:2:6;2161:73:0::1;::::0;::::1;3636:21:6::0;3693:2;3673:18;;;3666:30;3732:34;3712:18;;;3705:62;3803:8;3783:18;;;3776:36;3829:19;;2161:73:0::1;3452:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3349:683:4:-;3557:76;;;;;:64;1193:55:6;;;3557:76:4;;;1175:74:6;3529:21:4;;3577:18;3557:64;;;;;;1148:18:6;;3557:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3528:105:4;;-1:-1:-1;;3651:27:4;;;;3643:51;;;;;;;4512:2:6;3643:51:4;;;4494:21:6;4551:2;4531:18;;;4524:30;4590:13;4570:18;;;4563:41;4621:18;;3643:51:4;4310:335:6;3643:51:4;3727:58;;;;;3765:19;3727:58;;;158:98:6;3727:37:4;;;;;;131:18:6;;3727:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;3797:59:4;;;;;3835:20;3797:59;;;158:98:6;3797:37:4;;;;;;131:18:6;;3797:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3705:204;;;;;;;4852:2:6;3705:204:4;;;4834:21:6;4891:2;4871:18;;;4864:30;4930:28;4910:18;;;4903:56;4976:18;;3705:204:4;4650:350:6;3705:204:4;3920:105;;;;;:70;5315:15:6;;;3920:105:4;;;5297:34:6;5367:15;;;5347:18;;;5340:43;5419:15;;;5399:18;;;5392:43;5451:18;;;5444:34;;;3940:18:4;3920:70;;;;5208:19:6;;3920:105:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3518:514;3349:683;;;;:::o;1359:130:0:-;1247:7;1273:6;1422:23;1273:6;719:10:1;1422:23:0;1414:68;;;;;;;5691:2:6;1414:68:0;;;5673:21:6;;;5710:18;;;5703:30;5769:34;5749:18;;;5742:62;5821:18;;1414:68:0;5489:356:6;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;267:154:6:-;353:42;346:5;342:54;335:5;332:65;322:93;;411:1;408;401:12;426:598;512:6;520;528;536;589:3;577:9;568:7;564:23;560:33;557:53;;;606:1;603;596:12;557:53;645:9;632:23;664:31;689:5;664:31;:::i;:::-;714:5;-1:-1:-1;771:2:6;756:18;;743:32;784:33;743:32;784:33;:::i;:::-;836:7;-1:-1:-1;895:2:6;880:18;;867:32;908:33;867:32;908:33;:::i;:::-;426:598;;;;-1:-1:-1;960:7:6;;1014:2;999:18;986:32;;-1:-1:-1;;426:598:6:o;1260:180::-;1319:6;1372:2;1360:9;1351:7;1347:23;1343:32;1340:52;;;1388:1;1385;1378:12;1340:52;-1:-1:-1;1411:23:6;;1260:180;-1:-1:-1;1260:180:6:o;1445:247::-;1504:6;1557:2;1545:9;1536:7;1532:23;1528:32;1525:52;;;1573:1;1570;1563:12;1525:52;1612:9;1599:23;1631:31;1656:5;1631:31;:::i;:::-;1681:5;1445:247;-1:-1:-1;;;1445:247:6:o;1697:277::-;1764:6;1817:2;1805:9;1796:7;1792:23;1788:32;1785:52;;;1833:1;1830;1823:12;1785:52;1865:9;1859:16;1918:5;1911:13;1904:21;1897:5;1894:32;1884:60;;1940:1;1937;1930:12;2328:251;2398:6;2451:2;2439:9;2430:7;2426:23;2422:32;2419:52;;;2467:1;2464;2457:12;2419:52;2499:9;2493:16;2518:31;2543:5;2518:31;:::i;3859:446::-;3947:6;3955;3963;4016:2;4004:9;3995:7;3991:23;3987:32;3984:52;;;4032:1;4029;4022:12;3984:52;4064:9;4058:16;4083:31;4108:5;4083:31;:::i;:::-;4183:2;4168:18;;4162:25;4133:5;;-1:-1:-1;4196:33:6;4162:25;4196:33;:::i;:::-;4248:7;4238:17;;;4295:2;4284:9;4280:18;4274:25;4264:35;;3859:446;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "748600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "217",
								"INTERFACE_ID_ERC2981()": "216",
								"INTERFACE_ID_ERC721()": "260",
								"owner()": "2341",
								"renounceOwnership()": "infinite",
								"royaltyFeeRegistry()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateOwnerOfRoyaltyFeeRegistry(address)": "infinite",
								"updateRoyaltyFeeLimit(uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "infinite"
							},
							"internal": {
								"_updateRoyaltyInfoForCollectionIfOwnerOrAdmin(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 761,
									"end": 859,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 761,
									"end": 859,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 761,
									"end": 859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 812,
									"end": 852,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 812,
									"end": 852,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 812,
									"end": 852,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "187"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 4034,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035e060f446b0b6dcb532b69d8157f96d9269200815a55c6b43efabeef12185a964736f6c63430008110033",
									".code": [
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "C16F5156"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "C16F5156"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "E72BA456"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "BC6BC0CD"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "AB016670"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "33BF6156"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "3755FA80"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 358,
											"end": 4034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 188,
											"end": 254,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 176,
											"end": 255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 176,
											"end": 255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 176,
											"end": 255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 158,
											"end": 256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 158,
											"end": 256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 146,
											"end": 148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 516,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 516,
											"end": 572,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1983,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1247,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1029,
											"end": 1255,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1224,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1224,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 606,
											"end": 662,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 606,
											"end": 662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 606,
											"end": 662,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 606,
											"end": 662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 606,
											"end": 662,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2922,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 427,
											"end": 482,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 427,
											"end": 482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 427,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 427,
											"end": 482,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 427,
											"end": 482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 427,
											"end": 482,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 669,
											"end": 712,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 669,
											"end": 712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 669,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 669,
											"end": 712,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 669,
											"end": 712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 669,
											"end": 712,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2604,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2604,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 158,
											"end": 256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 2163,
											"end": 2200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 131,
											"end": 149,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2163,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2163,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2222,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "PUSH",
											"source": 6,
											"value": "204D757374206E6F742062652045524332393831000000000000000000000000"
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2154,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2298,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2279,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2279,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2307,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2880,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F7420746865206F776E6572000000000000000000000000000000000000"
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2837,
											"end": 2881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2898,
											"end": 2916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2584,
											"end": 2922,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2257,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2383,
											"end": 2393,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2411,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2413,
											"end": 2416,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2337,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2417,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2337,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1224,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 158,
											"end": 256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 1454,
											"end": 1491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 131,
											"end": 149,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1454,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1454,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1513,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2193,
											"end": 2223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "PUSH",
											"source": 6,
											"value": "204D757374206E6F742062652045524332393831000000000000000000000000"
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2239,
											"end": 2257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1979,
											"end": 2323,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1445,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1570,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1570,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1566,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3131,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3170,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3207,
											"end": 3223,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F74207468652061646D696E000000000000000000000000000000000000"
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3187,
											"end": 3205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3180,
											"end": 3224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2927,
											"end": 3265,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3028,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3008,
											"end": 3069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 3008,
											"end": 3069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3087,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 3094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2604,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2690,
											"end": 2744,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2690,
											"end": 2736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2690,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 2690,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1029,
											"end": 1255,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3766,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3829,
											"end": 3848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3452,
											"end": 3854,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3349,
											"end": 4032,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3349,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "E31EF91C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3595,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3557,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3621,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "E31EF91C"
										},
										{
											"begin": 3557,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3557,
											"end": 3633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3557,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3528,
											"end": 3633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3633,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3651,
											"end": 3678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3651,
											"end": 3678,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4494,
											"end": 4515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4553,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4531,
											"end": 4549,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4531,
											"end": 4549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4603,
											"name": "PUSH",
											"source": 6,
											"value": "416C726561647920736574000000000000000000000000000000000000000000"
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4310,
											"end": 4645,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3643,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3784,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 158,
											"end": 256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 131,
											"end": 149,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3727,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3727,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3727,
											"end": 3856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3855,
											"name": "PUSH",
											"source": 4,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 158,
											"end": 256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 131,
											"end": 149,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 131,
											"end": 149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3797,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3797,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4834,
											"end": 4855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 4893,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4930,
											"end": 4958,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F7420536574206F66204552433732312F45524331313535000000000000"
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4903,
											"end": 4959,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4976,
											"end": 4994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4650,
											"end": 5000,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3705,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "BBDF9B6800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5315,
											"end": 5330,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5330,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5382,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5434,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5417,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5399,
											"end": 5417,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5478,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3920,
											"end": 3990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "BBDF9B68"
										},
										{
											"begin": 3920,
											"end": 3990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5208,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5208,
											"end": 5227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 4025,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 4032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5691,
											"end": 5693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 5728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5703,
											"end": 5733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5803,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5749,
											"end": 5767,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5749,
											"end": 5767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5821,
											"end": 5839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5489,
											"end": 5845,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 267,
											"end": 421,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 267,
											"end": 421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 353,
											"end": 395,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 342,
											"end": 396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 335,
											"end": 340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 332,
											"end": 397,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 322,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 322,
											"end": 415,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 411,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 409,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 413,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 426,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 426,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 528,
											"end": 534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 592,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 577,
											"end": 586,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 568,
											"end": 575,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 564,
											"end": 587,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 560,
											"end": 593,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 557,
											"end": 610,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 557,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 557,
											"end": 610,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 606,
											"end": 607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 596,
											"end": 608,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 557,
											"end": 610,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 557,
											"end": 610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 632,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 664,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 664,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 664,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 664,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 664,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 714,
											"end": 719,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 771,
											"end": 773,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 774,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 756,
											"end": 774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 775,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 784,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 743,
											"end": 775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 784,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 784,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 784,
											"end": 817,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 784,
											"end": 817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 836,
											"end": 843,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 895,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 898,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 880,
											"end": 898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 867,
											"end": 899,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 908,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 867,
											"end": 899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 908,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 908,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 908,
											"end": 941,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 908,
											"end": 941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 1024,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 426,
											"end": 1024,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 426,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 426,
											"end": 1024,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 960,
											"end": 967,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 960,
											"end": 967,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 999,
											"end": 1017,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1018,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 426,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1260,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1370,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1375,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1434,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1692,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1445,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 1554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1536,
											"end": 1543,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1575,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1525,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1622,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1631,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1662,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1631,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1692,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1445,
											"end": 1692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1974,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1697,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1820,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1823,
											"end": 1835,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1859,
											"end": 1875,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1924,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1925,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1884,
											"end": 1944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2579,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2328,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2437,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2419,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2493,
											"end": 2509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2543,
											"end": 2548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2518,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 4305,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3859,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 3953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3963,
											"end": 3969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4014,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4019,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3984,
											"end": 4036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4036,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3984,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4064,
											"end": 4073,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4083,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4114,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4083,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4138,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4162,
											"end": 4187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4196,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4255,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4264,
											"end": 4299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 4305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 4305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 4305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 4305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 4305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 4305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/interface/IOwnable.sol",
								"contracts/Manager/royalty/RoyaltyFeeSetter.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeRegistry()": "c16f5156",
							"transferOwnership(address)": "f2fde38b",
							"updateOwnerOfRoyaltyFeeRegistry(address)": "e72ba456",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "ab016670",
							"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "3755fa80"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyFeeRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"updateOwnerOfRoyaltyFeeRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":\"RoyaltyFeeSetter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]},\"contracts/Manager/royalty/RoyaltyFeeSetter.sol\":{\"keccak256\":\"0x0f5088c6ddb28e8f5f60b95facfdab248058b97135fc75c5cce11e06e556ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80aa866b57d0555e80ea9875f7b36ee849c9fb43d65d87f7fdd5a07518bf7b3f\",\"dweb:/ipfs/QmbgQDGw5QYUsAMaVsffeyjx7WoK4usMoHuD1DadPY5Qc9\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/royalty/RoyaltyFeeSetter.sol:RoyaltyFeeSetter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollection(address,address,address,uint256)": "bbdf9b68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 146,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IOwnable",
							"nameLocation": "67:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "91:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "117:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "109:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:3"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:0:3"
									},
									"scope": 164,
									"src": "82:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "151:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:2:3"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "182:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:9:3"
									},
									"scope": 164,
									"src": "142:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f851a440",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "206:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "237:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:3"
									},
									"scope": 164,
									"src": "197:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "57:191:3",
							"usedErrors": []
						}
					],
					"src": "32:217:3"
				},
				"id": 3
			},
			"contracts/Manager/royalty/RoyaltyFeeSetter.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/RoyaltyFeeSetter.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						],
						"IOwnable": [
							164
						],
						"IRoyaltyFeeRegistry": [
							412
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeSetter": [
							371
						]
					},
					"id": 372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 372,
							"sourceUnit": 113,
							"src": "57:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 167,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 372,
							"sourceUnit": 147,
							"src": "125:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 146,
										"src": "133:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./interface/IRoyaltyFeeRegistry.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 372,
							"sourceUnit": 413,
							"src": "207:72:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 412,
										"src": "215:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/IOwnable.sol",
							"file": "../interface/IOwnable.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 372,
							"sourceUnit": 165,
							"src": "280:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 164,
										"src": "288:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 175,
										"name": "Ownable",
										"nameLocations": [
											"387:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "387:7:4"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "387:7:4"
								}
							],
							"canonicalName": "RoyaltyFeeSetter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 371,
							"linearizedBaseContracts": [
								371,
								112,
								134
							],
							"name": "RoyaltyFeeSetter",
							"nameLocation": "367:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 179,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "450:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 371,
									"src": "427:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 177,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "427:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 178,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "472:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 182,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "539:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 371,
									"src": "516:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 180,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "516:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "562:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 185,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "629:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 371,
									"src": "606:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 183,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "606:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "652:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c16f5156",
									"id": 187,
									"mutability": "immutable",
									"name": "royaltyFeeRegistry",
									"nameLocation": "694:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 371,
									"src": "669:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 186,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "802:57:4",
										"statements": [
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 192,
														"name": "royaltyFeeRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "812:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 193,
														"name": "_royaltyFeeRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "833:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "812:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "812:40:4"
											}
										]
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_royaltyFeeRegistry",
												"nameLocation": "781:19:4",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "773:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:29:4"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "802:0:4"
									},
									"scope": 371,
									"src": "761:98:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1385:330:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1453:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 213,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1492:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 210,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "1462:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 209,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "1454:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1454:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1474:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "1454:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1454:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1515:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1445:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1445:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "1445:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 220,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1556:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1560:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1556:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 223,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "1579:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 222,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "1570:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1570:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1591:5:4",
																	"memberName": "admin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 163,
																	"src": "1570:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1570:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1556:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f74207468652061646d696e",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1600:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															},
															"value": " Not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															}
														],
														"id": 219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1548:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1548:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1674:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 233,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "1686:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "1694:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1704:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 231,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1628:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1628:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1628:80:4"
											}
										]
									},
									"functionSelector": "ab016670",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfAdmin",
									"nameLocation": "1233:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1288:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1280:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1340:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1332:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1366:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1358:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:105:4"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:0:4"
									},
									"scope": 371,
									"src": "1224:491:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "2144:280:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2162:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 255,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2201:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 252,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "2171:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 251,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "2163:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2163:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2183:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "2163:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2163:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2224:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2154:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 262,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2265:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2269:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2265:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "2288:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 264,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "2279:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2279:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2300:5:4",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 158,
																	"src": "2279:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2279:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2265:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420746865206f776e6572",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															},
															"value": " Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2257:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2257:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2383:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 275,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2395:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2403:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2413:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "2337:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2337:80:4"
											}
										]
									},
									"functionSelector": "3755fa80",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfOwner",
									"nameLocation": "1992:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2047:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2039:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "2075:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2067:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2099:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2091:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2125:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2117:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:105:4"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:4"
									},
									"scope": 371,
									"src": "1983:441:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2680:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "2737:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 289,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "2699:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 288,
																"name": "IOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2690:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																	"typeString": "type(contract IOwnable)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnable_$164",
																"typeString": "contract IOwnable"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2719:17:4",
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "2690:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2690:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "2690:54:4"
											}
										]
									},
									"functionSelector": "e72ba456",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 285,
												"name": "onlyOwner",
												"nameLocations": [
													"2670:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2670:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2670:9:4"
										}
									],
									"name": "updateOwnerOfRoyaltyFeeRegistry",
									"nameLocation": "2613:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "2653:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2645:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2644:16:4"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:4"
									},
									"scope": 371,
									"src": "2604:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2998:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "3070:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 304,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "3028:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 303,
																"name": "IRoyaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3008:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$412_$",
																	"typeString": "type(contract IRoyaltyFeeRegistry)"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3008:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$412",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3048:21:4",
														"memberName": "updateRoyaltyFeeLimit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 389,
														"src": "3008:61:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3008:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "3008:79:4"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 300,
												"name": "onlyOwner",
												"nameLocations": [
													"2988:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2988:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2988:9:4"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "2931:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "2961:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2953:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:26:4"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2998:0:4"
									},
									"scope": 371,
									"src": "2922:172:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3518:514:4",
										"statements": [
											{
												"assignments": [
													323,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "3537:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "3529:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3529:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 330,
												"initialValue": {
													"arguments": [
														{
															"id": 328,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3622:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 325,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "3577:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 324,
																"name": "IRoyaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3557:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$412_$",
																	"typeString": "type(contract IRoyaltyFeeRegistry)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3557:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$412",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3597:24:4",
														"memberName": "royaltyFeeInfoCollection",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 411,
														"src": "3557:64:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$_t_address_$_t_uint256_$",
															"typeString": "function (address) view external returns (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3528:105:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "currentSetter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "3651:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3676:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3668:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3668:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3668:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3651:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920736574",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3680:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															},
															"value": "Already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3643:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3643:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3643:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 346,
																				"name": "INTERFACE_ID_ERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "3765:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 343,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 313,
																						"src": "3735:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 342,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "3727:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3727:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3747:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "3727:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3727:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 352,
																				"name": "INTERFACE_ID_ERC1155",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 182,
																				"src": "3835:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 349,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 313,
																						"src": "3805:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 348,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "3797:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3797:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3817:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "3797:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3797:59:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3727:129:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 355,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3726:131:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3871:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															},
															"value": " Not Set of ERC721/ERC1155"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3705:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3705:204:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "3705:204:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3991:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4003:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4011:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "4021:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 360,
																	"name": "royaltyFeeRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "3940:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 359,
																"name": "IRoyaltyFeeRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "3920:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoyaltyFeeRegistry_$412_$",
																	"typeString": "type(contract IRoyaltyFeeRegistry)"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3920:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoyaltyFeeRegistry_$412",
																"typeString": "contract IRoyaltyFeeRegistry"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:30:4",
														"memberName": "updateRoyaltyInfoForCollection",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 384,
														"src": "3920:70:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256) external"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3920:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3920:105:4"
											}
										]
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
									"nameLocation": "3358:45:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3421:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3413:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3413:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "3449:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3441:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3441:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3473:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3465:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3499:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3491:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3403:105:4"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3518:0:4"
									},
									"scope": 371,
									"src": "3349:683:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 372,
							"src": "358:3676:4",
							"usedErrors": []
						}
					],
					"src": "32:4003:4"
				},
				"id": 4
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							412
						]
					},
					"id": 413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 412,
							"linearizedBaseContracts": [
								412
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bbdf9b68",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "102:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "150:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "142:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "178:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "170:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "202:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "194:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "228:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "220:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:105:5"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:5"
									},
									"scope": 412,
									"src": "93:154:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9223c9d",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "261:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "291:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "283:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:26:5"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:5"
									},
									"scope": 412,
									"src": "252:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "333:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "353:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "345:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "373:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "365:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:36:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "404:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "413:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:18:5"
									},
									"scope": 412,
									"src": "324:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "437:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "470:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "462:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:20:5"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "542:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "563:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "584:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:73:5"
									},
									"scope": 412,
									"src": "428:174:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 413,
							"src": "57:547:5",
							"usedErrors": []
						}
					],
					"src": "32:573:5"
				},
				"id": 5
			}
		}
	}
}