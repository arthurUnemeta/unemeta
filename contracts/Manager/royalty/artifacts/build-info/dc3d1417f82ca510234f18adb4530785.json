{
	"id": "dc3d1417f82ca510234f18adb4530785",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IOwnable} from \"../interface/IOwnable.sol\";\n\nimport {IRoyaltyFeeRegistry} from \"./interface/IRoyaltyFeeRegistry.sol\";\n\n//  register royalty fee\ncontract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {\n    struct FeeInfo {\n        address setter;\n        address receiver;\n        uint256 fee;\n    }\n       // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    // ERC2981 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    // limit max royalty fee（10,000 = 100%）\n    uint256 public royaltyFeeLimit;\n\n    //compile royalty information mapping \n    mapping(address => FeeInfo) private _royaltyFeeInfoCollection;\n\n    event NewRoyaltyFeeLimit(uint256 royaltyFeeLimit);\n    event RoyaltyFeeUpdate(address indexed collection, address indexed setter, address indexed receiver, uint256 fee);\n\n    //  initialize royalty fee\n    constructor(uint256 _royaltyFeeLimit) {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n    }\n\n    // Update a collection's upper limit of royalty fee\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n\n        emit NewRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal{\n        require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\");\n\n        _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee});\n\n        emit RoyaltyFeeUpdate(collection, setter, receiver, fee);\n    }\n\n    //\n    // function royaltyInfo\n    //  @Description: calculate royalty fee\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {\n        return (\n        _royaltyFeeInfoCollection[collection].receiver,\n        (amount * _royaltyFeeInfoCollection[collection].fee) / 10000\n        );\n    }\n    /*Check collection information*/\n    function royaltyFeeInfoCollection(address collection)\n    external\n    view\n    override\n    returns (\n        address,\n        address,\n        uint256\n    )\n    {\n        return (\n        _royaltyFeeInfoCollection[collection].setter,\n        _royaltyFeeInfoCollection[collection].receiver,\n        _royaltyFeeInfoCollection[collection].fee\n        );\n    }\n\n        //\n    // function checkForCollectionSetter\n    //  @Description: Confirm royalty fee seeting information\n    //  @param address\n    //  @return external Return editor, regarless of admin or owner\n    //\n    function checkForCollectionSetter(address collection) external view returns (address, uint8) {\n        try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {\n            if (interfaceSupport) {\n                return (address(0), 1);\n            }\n        } catch {}\n\n        try IOwnable(collection).owner() returns (address setter) {\n            return (setter, 2);\n        } catch {\n            try IOwnable(collection).admin() returns (address setter) {\n                return (setter, 3);\n            } catch {\n                return (address(0), 4);\n            }\n        }\n    }\n\n    //\n    // function updateRoyaltyInfoForCollectionIfAdmin\n    //  @Description: Update royalty info if this is the admin of the collection\n    //  @param address collection address\n    //  @param address  Editor address\n    //  @param address  Wallet address receiving royalty fee\n    //  @param uint256 royalty fee 500=5%\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        //https://eips.ethereum.org/EIPS/eip-2981\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).admin(), \" Not the admin\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // tion updateRoyaltyInfoForCollectionIfOwner\n    //  @Description: Update royalty info if this is the owner of the collection\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfOwner(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).owner(), \" Not the owner\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin\n    //  @Description: Update royalty fee information\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return internal\n    //\n    function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal {\n        address currentSetter = _royaltyFeeInfoCollection[collection].setter;\n        require(currentSetter == address(0), \"Already set\");\n\n        require(\n            (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||\n        IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)),\n            \" Not Set of ERC721/ERC1155\"\n        );\n\n        updateRoyaltyInfoForCollection(collection, setter, receiver, fee);\n    }\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n  \n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IOwnable {\n    function transferOwnership(address newOwner) external;\n\n    function owner() external view returns (address);\n\n    function admin() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"RoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "NewRoyaltyFeeLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "RoyaltyFeeUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkForCollectionSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6277  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1194:1398  constructor(uint256 _royaltyFeeLimit) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1312:1316  9500 */\n  0x251c\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1292:1308  _royaltyFeeLimit */\n  dup2\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1292:1316  _royaltyFeeLimit <= 9500 */\n  gt\n  iszero\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":405:407   */\n  0x20\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":387:408   */\n  mstore\n    /* \"#utility.yul\":444:446   */\n  0x1a\n    /* \"#utility.yul\":424:442   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":417:447   */\n  mstore\n    /* \"#utility.yul\":483:511   */\n  0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n    /* \"#utility.yul\":463:481   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":456:512   */\n  mstore\n    /* \"#utility.yul\":529:547   */\n  0x64\n  add\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1284:1347  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1357:1372  royaltyFeeLimit */\n  0x01\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1357:1391  royaltyFeeLimit = _royaltyFeeLimit */\n  sstore\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6277  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:553   */\ntag_18:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6277  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":357:6277  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xab016670\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xbc6bc0cd\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc54e5497\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe31ef91c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0xab016670\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb060dd86\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb9223c9d\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x4fb7d3f9\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x4fb7d3f9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x2782d6c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x33bf6156\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3755fa80\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_3:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":697:739   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":685:740   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":667:741   */\n      dup4\n      mstore\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":757:775   */\n      dup4\n      add\n        /* \"#utility.yul\":750:784   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":640:658   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":639:695  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_4:\n      tag_25\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":969:1035   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":957:1036   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":939:1037   */\n      dup2\n      mstore\n        /* \"#utility.yul\":927:929   */\n      0x20\n        /* \"#utility.yul\":912:930   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":639:695  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n      tag_23\n        /* \"#utility.yul\":795:1043   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4976:5417  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_5:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":840:870  uint256 public royaltyFeeLimit */\n    tag_6:\n      tag_33\n      sload(0x01)\n      dup2\n      jump\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":840:870  uint256 public royaltyFeeLimit */\n      tag_23\n        /* \"#utility.yul\":1651:1828   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_29\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1979:2053   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1967:1969   */\n      0x20\n        /* \"#utility.yul\":1952:1970   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_23\n        /* \"#utility.yul\":1833:2059   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4217:4708  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_9:\n      tag_29\n      tag_44\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":729:785  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_10:\n      tag_25\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_11:\n      tag_29\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":550:605  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_12:\n      tag_25\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3225:3853  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_13:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2701:2743   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2689:2744   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2671:2745   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2793:2797   */\n      0xff\n        /* \"#utility.yul\":2781:2798   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2761:2779   */\n      dup4\n      add\n        /* \"#utility.yul\":2754:2799   */\n      mstore\n        /* \"#utility.yul\":2644:2662   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3225:3853  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      tag_23\n        /* \"#utility.yul\":2501:2805   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2649:3007  function royaltyFeeInfoCollection(address collection)... */\n    tag_14:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_63:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2876  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2760:2767  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2876  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2864  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2876  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2883  _royaltyFeeInfoCollection[collection].setter */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2893:2939  _royaltyFeeInfoCollection[collection].receiver */\n      dup3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2949:2990  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2839:2883  _royaltyFeeInfoCollection[collection].setter */\n      swap2\n      dup4\n      and\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2893:2939  _royaltyFeeInfoCollection[collection].receiver */\n      swap3\n      and\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2649:3007  function royaltyFeeInfoCollection(address collection)... */\n      jump\n    tag_62:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3022:3064   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3091:3106   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":3073:3107   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3143:3158   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3138:3140   */\n      0x20\n        /* \"#utility.yul\":3123:3141   */\n      dup5\n      add\n        /* \"#utility.yul\":3116:3159   */\n      mstore\n        /* \"#utility.yul\":3175:3193   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3168:3202   */\n      mstore\n        /* \"#utility.yul\":3000:3002   */\n      0x60\n        /* \"#utility.yul\":2985:3003   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2649:3007  function royaltyFeeInfoCollection(address collection)... */\n      tag_23\n        /* \"#utility.yul\":2810:3208   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_29\n      tag_68\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_22:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2511  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup4\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2429:2436  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2511  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2499  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2511  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2520  _royaltyFeeInfoCollection[collection].receiver */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2540:2581  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2429:2436  address */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2474:2520  _royaltyFeeInfoCollection[collection].receiver */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2585:2590  10000 */\n      0x2710\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2531:2581  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_71\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2531:2537  amount */\n      dup7\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2531:2581  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2530:2590  (amount * _royaltyFeeInfoCollection[collection].fee) / 10000 */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2457:2600  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2340:2607  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4976:5417  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_32:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5156:5215  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5194:5214  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5156:5215  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":939:1037   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5156:5193  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":912:930   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5156:5215  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5155:5215  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5147:5240  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4303:4305   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5147:5240  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4285:4306   */\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x14\n        /* \"#utility.yul\":4322:4340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4315:4345   */\n      mstore\n        /* \"#utility.yul\":4381:4403   */\n      0x204d757374206e6f742062652045524332393831000000000000000000000000\n        /* \"#utility.yul\":4361:4379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4354:4404   */\n      mstore\n        /* \"#utility.yul\":4421:4439   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5147:5240  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5281:5291  collection */\n      dup4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5272:5298  IOwnable(collection).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5272:5300  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5258:5300  msg.sender == IOwnable(collection).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5258:5268  msg.sender */\n      caller\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5258:5300  msg.sender == IOwnable(collection).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5250:5319  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4908:4910   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5250:5319  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4890:4911   */\n      mstore\n        /* \"#utility.yul\":4947:4949   */\n      0x0e\n        /* \"#utility.yul\":4927:4945   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4920:4950   */\n      mstore\n        /* \"#utility.yul\":4986:5002   */\n      0x204e6f7420746865206f776e6572000000000000000000000000000000000000\n        /* \"#utility.yul\":4966:4984   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4959:5003   */\n      mstore\n        /* \"#utility.yul\":5020:5038   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5250:5319  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_82\n        /* \"#utility.yul\":4706:5044   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5250:5319  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n    tag_88:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5330:5410  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      tag_91\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5376:5386  collection */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5388:5394  setter */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5396:5404  receiver */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5406:5409  fee */\n      dup5\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5330:5375  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin */\n      tag_92\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5330:5410  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4976:5417  function updateRoyaltyInfoForCollectionIfOwner(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4217:4708  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_45:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4447:4506  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4485:4505  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4447:4506  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":939:1037   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4447:4484  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":912:930   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4447:4506  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_104:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4446:4506  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4438:4531  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4303:4305   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4438:4531  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4285:4306   */\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x14\n        /* \"#utility.yul\":4322:4340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4315:4345   */\n      mstore\n        /* \"#utility.yul\":4381:4403   */\n      0x204d757374206e6f742062652045524332393831000000000000000000000000\n        /* \"#utility.yul\":4361:4379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4354:4404   */\n      mstore\n        /* \"#utility.yul\":4421:4439   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4438:4531  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_82\n        /* \"#utility.yul\":4101:4445   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4438:4531  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_105:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4572:4582  collection */\n      dup4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4563:4589  IOwnable(collection).admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4563:4591  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_109:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4549:4591  msg.sender == IOwnable(collection).admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4549:4559  msg.sender */\n      caller\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4549:4591  msg.sender == IOwnable(collection).admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4541:4610  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5251:5253   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4541:4610  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5233:5254   */\n      mstore\n        /* \"#utility.yul\":5290:5292   */\n      0x0e\n        /* \"#utility.yul\":5270:5288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5263:5293   */\n      mstore\n        /* \"#utility.yul\":5329:5345   */\n      0x204e6f74207468652061646d696e000000000000000000000000000000000000\n        /* \"#utility.yul\":5309:5327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5302:5346   */\n      mstore\n        /* \"#utility.yul\":5363:5381   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":4541:4610  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_82\n        /* \"#utility.yul\":5049:5387   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1625:1629  9500 */\n      0x251c\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1605:1621  _royaltyFeeLimit */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1605:1629  _royaltyFeeLimit <= 9500 */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5594:5596   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5576:5597   */\n      mstore\n        /* \"#utility.yul\":5633:5635   */\n      0x1a\n        /* \"#utility.yul\":5613:5631   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5606:5636   */\n      mstore\n        /* \"#utility.yul\":5672:5700   */\n      0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n        /* \"#utility.yul\":5652:5670   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5645:5701   */\n      mstore\n        /* \"#utility.yul\":5718:5736   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_82\n        /* \"#utility.yul\":5392:5742   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1597:1660  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n    tag_117:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1670:1685  royaltyFeeLimit */\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1670:1704  royaltyFeeLimit = _royaltyFeeLimit */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      0x2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256\n      swap1\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1720:1756  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1460:1763  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3225:3853  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_59:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3332:3391  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3370:3390  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3332:3391  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":939:1037   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3302:3309  address */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3332:3369  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":912:930   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3332:3391  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_124\n      swap2\n      dup2\n      add\n      swap1\n      tag_80\n      jump\t// in\n    tag_124:\n      0x01\n    tag_123:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3328:3534  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3442:3458  interfaceSupport */\n      dup1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3438:3515  if (interfaceSupport) {... */\n      iszero\n      tag_130\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3494:3495  0 */\n      0x00\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3498:3499  1 */\n      0x01\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3225:3853  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3438:3515  if (interfaceSupport) {... */\n    tag_130:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3392:3525  returns (bool interfaceSupport) {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3328:3534  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n    tag_129:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3557:3567  collection */\n      dup3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3548:3574  IOwnable(collection).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3548:3576  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_132\n      swap2\n      dup2\n      add\n      swap1\n      tag_87\n      jump\t// in\n    tag_132:\n      0x01\n    tag_131:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3544:3847  try IOwnable(collection).owner() returns (address setter) {... */\n      tag_133\n      jumpi\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3679:3689  collection */\n      dup3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3670:3696  IOwnable(collection).admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf851a440\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3670:3698  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_138\n      swap2\n      dup2\n      add\n      swap1\n      tag_87\n      jump\t// in\n    tag_138:\n      0x01\n    tag_137:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3666:3837  try IOwnable(collection).admin() returns (address setter) {... */\n      tag_139\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3816:3817  0 */\n      0x00\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3820:3821  4 */\n      0x04\n      swap3\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3225:3853  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3666:3837  try IOwnable(collection).admin() returns (address setter) {... */\n    tag_139:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3750:3756  setter */\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3758:3759  3 */\n      0x03\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3225:3853  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3544:3847  try IOwnable(collection).owner() returns (address setter) {... */\n    tag_133:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3624:3630  setter */\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3632:3633  2 */\n      0x02\n      swap4\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":3225:3853  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5949:5951   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5931:5952   */\n      mstore\n        /* \"#utility.yul\":5988:5990   */\n      0x26\n        /* \"#utility.yul\":5968:5986   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5961:5991   */\n      mstore\n        /* \"#utility.yul\":6027:6061   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6007:6025   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6000:6062   */\n      mstore\n        /* \"#utility.yul\":6098:6106   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6078:6096   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6071:6107   */\n      mstore\n        /* \"#utility.yul\":6124:6143   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_82\n        /* \"#utility.yul\":5747:6149   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5669:6275  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n    tag_92:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5872:5909  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5848:5869  address currentSetter */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5872:5909  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5872:5897  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5872:5909  _royaltyFeeInfoCollection[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5872:5916  _royaltyFeeInfoCollection[collection].setter */\n      sload\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5934:5961  currentSetter == address(0) */\n      dup1\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5926:5977  require(currentSetter == address(0), \"Already set\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6356:6358   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5926:5977  require(currentSetter == address(0), \"Already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6338:6359   */\n      mstore\n        /* \"#utility.yul\":6395:6397   */\n      0x0b\n        /* \"#utility.yul\":6375:6393   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6368:6398   */\n      mstore\n        /* \"#utility.yul\":6434:6447   */\n      0x416c726561647920736574000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6414:6432   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6407:6448   */\n      mstore\n        /* \"#utility.yul\":6465:6483   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5926:5977  require(currentSetter == address(0), \"Already set\") */\n      tag_82\n        /* \"#utility.yul\":6154:6489   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5926:5977  require(currentSetter == address(0), \"Already set\") */\n    tag_154:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6010:6068  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6048:6067  INTERFACE_ID_ERC721 */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6010:6068  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":939:1037   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6010:6047  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":912:930   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6010:6068  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_160:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6010:6139  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||... */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6080:6139  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6118:6138  INTERFACE_ID_ERC1155 */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6080:6139  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":939:1037   */\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6080:6117  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":912:930   */\n      0x24\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6080:6139  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_165:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5988:6192  require(... */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6696:6698   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5988:6192  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6678:6699   */\n      mstore\n        /* \"#utility.yul\":6735:6737   */\n      0x1a\n        /* \"#utility.yul\":6715:6733   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6708:6738   */\n      mstore\n        /* \"#utility.yul\":6774:6802   */\n      0x204e6f7420536574206f66204552433732312f45524331313535000000000000\n        /* \"#utility.yul\":6754:6772   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6747:6803   */\n      mstore\n        /* \"#utility.yul\":6820:6838   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5988:6192  require(... */\n      tag_82\n        /* \"#utility.yul\":6494:6844   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5988:6192  require(... */\n    tag_166:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6203:6268  updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      tag_169\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6234:6244  collection */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6246:6252  setter */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6254:6262  receiver */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6264:6267  fee */\n      dup6\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6203:6233  updateRoyaltyInfoForCollection */\n      tag_170\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":6203:6268  updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5838:6275  {... */\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":5669:6275  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7051:7053   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7033:7054   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7070:7088   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7063:7093   */\n      mstore\n        /* \"#utility.yul\":7129:7163   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7109:7127   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7102:7164   */\n      mstore\n        /* \"#utility.yul\":7181:7199   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_82\n        /* \"#utility.yul\":6849:7205   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1769:2177  function updateRoyaltyInfoForCollection(... */\n    tag_170:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1947:1962  royaltyFeeLimit */\n      sload(0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1940:1943  fee */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1940:1962  fee <= royaltyFeeLimit */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7412:7414   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7394:7415   */\n      mstore\n        /* \"#utility.yul\":7451:7453   */\n      0x1e\n        /* \"#utility.yul\":7431:7449   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7424:7454   */\n      mstore\n        /* \"#utility.yul\":7490:7522   */\n      0x52656769737472793a20526f79616c74792066656520746f6f20686967680000\n        /* \"#utility.yul\":7470:7488   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7463:7523   */\n      mstore\n        /* \"#utility.yul\":7540:7558   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_82\n        /* \"#utility.yul\":7210:7564   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1932:1997  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n    tag_180:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2048:2103  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      dup6\n      dup3\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup9\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2045  _royaltyFeeInfoCollection[collection] */\n      dup12\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2033  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2045  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2008:2103  _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap2\n      dup3\n      and\n      or\n      dup11\n      sstore\n      swap4\n      mload\n      0x01\n      dup11\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap10\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap7\n      sstore\n      mload\n      swap6\n      add\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2119:2170  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      swap4\n      mload\n        /* \"#utility.yul\":1797:1822   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2048:2103  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap1\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2119:2170  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      0xd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64\n      swap2\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2119:2170  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1769:2177  function updateRoyaltyInfoForCollection(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:168   */\n    tag_185:\n        /* \"#utility.yul\":100:142   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":89:143   */\n      and\n        /* \"#utility.yul\":82:87   */\n      dup2\n        /* \"#utility.yul\":79:144   */\n      eq\n        /* \"#utility.yul\":69:162   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":158:159   */\n      0x00\n        /* \"#utility.yul\":155:156   */\n      dup1\n        /* \"#utility.yul\":148:160   */\n      revert\n        /* \"#utility.yul\":173:488   */\n    tag_21:\n        /* \"#utility.yul\":241:247   */\n      0x00\n        /* \"#utility.yul\":249:255   */\n      dup1\n        /* \"#utility.yul\":302:304   */\n      0x40\n        /* \"#utility.yul\":290:299   */\n      dup4\n        /* \"#utility.yul\":281:288   */\n      dup6\n        /* \"#utility.yul\":277:300   */\n      sub\n        /* \"#utility.yul\":273:305   */\n      slt\n        /* \"#utility.yul\":270:322   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":315:316   */\n      dup1\n        /* \"#utility.yul\":308:320   */\n      revert\n        /* \"#utility.yul\":270:322   */\n    tag_190:\n        /* \"#utility.yul\":357:366   */\n      dup3\n        /* \"#utility.yul\":344:367   */\n      calldataload\n        /* \"#utility.yul\":376:407   */\n      tag_191\n        /* \"#utility.yul\":401:406   */\n      dup2\n        /* \"#utility.yul\":376:407   */\n      tag_185\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":426:431   */\n      swap5\n        /* \"#utility.yul\":478:480   */\n      0x20\n        /* \"#utility.yul\":463:481   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":450:482   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":173:488   */\n      jump\t// out\n        /* \"#utility.yul\":1048:1646   */\n    tag_31:\n        /* \"#utility.yul\":1134:1140   */\n      0x00\n        /* \"#utility.yul\":1142:1148   */\n      dup1\n        /* \"#utility.yul\":1150:1156   */\n      0x00\n        /* \"#utility.yul\":1158:1164   */\n      dup1\n        /* \"#utility.yul\":1211:1214   */\n      0x80\n        /* \"#utility.yul\":1199:1208   */\n      dup6\n        /* \"#utility.yul\":1190:1197   */\n      dup8\n        /* \"#utility.yul\":1186:1209   */\n      sub\n        /* \"#utility.yul\":1182:1215   */\n      slt\n        /* \"#utility.yul\":1179:1232   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":1228:1229   */\n      0x00\n        /* \"#utility.yul\":1225:1226   */\n      dup1\n        /* \"#utility.yul\":1218:1230   */\n      revert\n        /* \"#utility.yul\":1179:1232   */\n    tag_195:\n        /* \"#utility.yul\":1267:1276   */\n      dup5\n        /* \"#utility.yul\":1254:1277   */\n      calldataload\n        /* \"#utility.yul\":1286:1317   */\n      tag_196\n        /* \"#utility.yul\":1311:1316   */\n      dup2\n        /* \"#utility.yul\":1286:1317   */\n      tag_185\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1336:1341   */\n      swap4\n      pop\n        /* \"#utility.yul\":1393:1395   */\n      0x20\n        /* \"#utility.yul\":1378:1396   */\n      dup6\n      add\n        /* \"#utility.yul\":1365:1397   */\n      calldataload\n        /* \"#utility.yul\":1406:1439   */\n      tag_197\n        /* \"#utility.yul\":1365:1397   */\n      dup2\n        /* \"#utility.yul\":1406:1439   */\n      tag_185\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1458:1465   */\n      swap3\n      pop\n        /* \"#utility.yul\":1517:1519   */\n      0x40\n        /* \"#utility.yul\":1502:1520   */\n      dup6\n      add\n        /* \"#utility.yul\":1489:1521   */\n      calldataload\n        /* \"#utility.yul\":1530:1563   */\n      tag_198\n        /* \"#utility.yul\":1489:1521   */\n      dup2\n        /* \"#utility.yul\":1530:1563   */\n      tag_185\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1048:1646   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":1582:1589   */\n      swap3\n      swap4\n        /* \"#utility.yul\":1636:1638   */\n      0x60\n        /* \"#utility.yul\":1621:1639   */\n      add\n        /* \"#utility.yul\":1608:1640   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":1048:1646   */\n      jump\t// out\n        /* \"#utility.yul\":2064:2244   */\n    tag_51:\n        /* \"#utility.yul\":2123:2129   */\n      0x00\n        /* \"#utility.yul\":2176:2178   */\n      0x20\n        /* \"#utility.yul\":2164:2173   */\n      dup3\n        /* \"#utility.yul\":2155:2162   */\n      dup5\n        /* \"#utility.yul\":2151:2174   */\n      sub\n        /* \"#utility.yul\":2147:2179   */\n      slt\n        /* \"#utility.yul\":2144:2196   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2192:2193   */\n      0x00\n        /* \"#utility.yul\":2189:2190   */\n      dup1\n        /* \"#utility.yul\":2182:2194   */\n      revert\n        /* \"#utility.yul\":2144:2196   */\n    tag_202:\n      pop\n        /* \"#utility.yul\":2215:2238   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2064:2244   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2249:2496   */\n    tag_58:\n        /* \"#utility.yul\":2308:2314   */\n      0x00\n        /* \"#utility.yul\":2361:2363   */\n      0x20\n        /* \"#utility.yul\":2349:2358   */\n      dup3\n        /* \"#utility.yul\":2340:2347   */\n      dup5\n        /* \"#utility.yul\":2336:2359   */\n      sub\n        /* \"#utility.yul\":2332:2364   */\n      slt\n        /* \"#utility.yul\":2329:2381   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":2377:2378   */\n      0x00\n        /* \"#utility.yul\":2374:2375   */\n      dup1\n        /* \"#utility.yul\":2367:2379   */\n      revert\n        /* \"#utility.yul\":2329:2381   */\n    tag_204:\n        /* \"#utility.yul\":2416:2425   */\n      dup2\n        /* \"#utility.yul\":2403:2426   */\n      calldataload\n        /* \"#utility.yul\":2435:2466   */\n      tag_205\n        /* \"#utility.yul\":2460:2465   */\n      dup2\n        /* \"#utility.yul\":2435:2466   */\n      tag_185\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2485:2490   */\n      swap4\n        /* \"#utility.yul\":2249:2496   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3535   */\n    tag_72:\n        /* \"#utility.yul\":3286:3295   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3317:3326   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3334:3349   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3328:3350   */\n      dup5\n      eq\n        /* \"#utility.yul\":3314:3351   */\n      or\n        /* \"#utility.yul\":3304:3529   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":3385:3462   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3382:3383   */\n      0x00\n        /* \"#utility.yul\":3375:3463   */\n      mstore\n        /* \"#utility.yul\":3486:3490   */\n      0x11\n        /* \"#utility.yul\":3483:3484   */\n      0x04\n        /* \"#utility.yul\":3476:3491   */\n      mstore\n        /* \"#utility.yul\":3514:3518   */\n      0x24\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3504:3519   */\n      revert\n        /* \"#utility.yul\":3304:3529   */\n    tag_209:\n        /* \"#utility.yul\":3213:3535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3814   */\n    tag_74:\n        /* \"#utility.yul\":3580:3581   */\n      0x00\n        /* \"#utility.yul\":3606:3607   */\n      dup3\n        /* \"#utility.yul\":3596:3785   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3641:3718   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3638:3639   */\n      0x00\n        /* \"#utility.yul\":3631:3719   */\n      mstore\n        /* \"#utility.yul\":3742:3746   */\n      0x12\n        /* \"#utility.yul\":3739:3740   */\n      0x04\n        /* \"#utility.yul\":3732:3747   */\n      mstore\n        /* \"#utility.yul\":3770:3774   */\n      0x24\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3760:3775   */\n      revert\n        /* \"#utility.yul\":3596:3785   */\n    tag_211:\n      pop\n        /* \"#utility.yul\":3799:3808   */\n      div\n      swap1\n        /* \"#utility.yul\":3540:3814   */\n      jump\t// out\n        /* \"#utility.yul\":3819:4096   */\n    tag_80:\n        /* \"#utility.yul\":3886:3892   */\n      0x00\n        /* \"#utility.yul\":3939:3941   */\n      0x20\n        /* \"#utility.yul\":3927:3936   */\n      dup3\n        /* \"#utility.yul\":3918:3925   */\n      dup5\n        /* \"#utility.yul\":3914:3937   */\n      sub\n        /* \"#utility.yul\":3910:3942   */\n      slt\n        /* \"#utility.yul\":3907:3959   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":3955:3956   */\n      0x00\n        /* \"#utility.yul\":3952:3953   */\n      dup1\n        /* \"#utility.yul\":3945:3957   */\n      revert\n        /* \"#utility.yul\":3907:3959   */\n    tag_213:\n        /* \"#utility.yul\":3987:3996   */\n      dup2\n        /* \"#utility.yul\":3981:3997   */\n      mload\n        /* \"#utility.yul\":4040:4045   */\n      dup1\n        /* \"#utility.yul\":4033:4046   */\n      iszero\n        /* \"#utility.yul\":4026:4047   */\n      iszero\n        /* \"#utility.yul\":4019:4024   */\n      dup2\n        /* \"#utility.yul\":4016:4048   */\n      eq\n        /* \"#utility.yul\":4006:4066   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":4062:4063   */\n      0x00\n        /* \"#utility.yul\":4059:4060   */\n      dup1\n        /* \"#utility.yul\":4052:4064   */\n      revert\n        /* \"#utility.yul\":4450:4701   */\n    tag_87:\n        /* \"#utility.yul\":4520:4526   */\n      0x00\n        /* \"#utility.yul\":4573:4575   */\n      0x20\n        /* \"#utility.yul\":4561:4570   */\n      dup3\n        /* \"#utility.yul\":4552:4559   */\n      dup5\n        /* \"#utility.yul\":4548:4571   */\n      sub\n        /* \"#utility.yul\":4544:4576   */\n      slt\n        /* \"#utility.yul\":4541:4593   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":4589:4590   */\n      0x00\n        /* \"#utility.yul\":4586:4587   */\n      dup1\n        /* \"#utility.yul\":4579:4591   */\n      revert\n        /* \"#utility.yul\":4541:4593   */\n    tag_217:\n        /* \"#utility.yul\":4621:4630   */\n      dup2\n        /* \"#utility.yul\":4615:4631   */\n      mload\n        /* \"#utility.yul\":4640:4671   */\n      tag_205\n        /* \"#utility.yul\":4665:4670   */\n      dup2\n        /* \"#utility.yul\":4640:4671   */\n      tag_185\n      jump\t// in\n\n    auxdata: 0xa26469706673582212205edca1c15cc2ea512a704df208b56bf72e70d55244176a05205aa6b711d89fcd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_232": {
									"entryPoint": null,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 150,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:555:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "387:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:6"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "483:28:6",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "521:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "354:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "368:4:6",
														"type": ""
													}
												],
												"src": "203:350:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516112c73803806112c783398101604081905261002f916100e6565b61003833610096565b61251c81111561008e5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640160405180910390fd5b6001556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f857600080fd5b5051919050565b6111b98061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063ab0166701161008c578063bc6bc0cd11610066578063bc6bc0cd14610229578063c54e549714610250578063e31ef91c14610291578063f2fde38b1461031057600080fd5b8063ab016670146101dc578063b060dd86146101ef578063b9223c9d1461021657600080fd5b80634fb7d3f9116100bd5780634fb7d3f914610195578063715018a6146101ac5780638da5cb5b146101b457600080fd5b80632782d6c7146100e457806333bf6156146101285780633755fa8014610180575b600080fd5b6100f76100f236600461100b565b610323565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b61014f7fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161011f565b61019361018e366004611037565b61037d565b005b61019e60015481565b60405190815260200161011f565b6101936105ac565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011f565b6101936101ea366004611037565b6105c0565b61014f7f2a55205a0000000000000000000000000000000000000000000000000000000081565b610193610224366004611088565b6107d8565b61014f7f80ac58cd0000000000000000000000000000000000000000000000000000000081565b61026361025e3660046110a1565b610887565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260ff90911660208301520161011f565b6102dd61029f3660046110a1565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401529082015260600161011f565b61019361031e3660046110a1565b610a9c565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061036890866110c5565b6103729190611109565b915091509250929050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190611144565b15610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190611166565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f7420746865206f776e6572000000000000000000000000000000000000604482015260640161048e565b6105a684848484610b53565b50505050565b6105b4610dbe565b6105be6000610e3f565b565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190611144565b156106d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f742062652045524332393831000000000000000000000000604482015260640161048e565b8373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190611166565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f74207468652061646d696e000000000000000000000000000000000000604482015260640161048e565b6107e0610dbe565b61251c81111561084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640161048e565b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff8416906301ffc9a790602401602060405180830381865afa925050508015610950575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261094d91810190611144565b60015b1561096a578015610968575060009360019350915050565b505b8273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109ef575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526109ec91810190611166565b60015b610a92578273ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a78575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610a7591810190611166565b60015b610a885750600092600492509050565b9360039350915050565b9360029350915050565b610aa4610dbe565b73ffffffffffffffffffffffffffffffffffffffff8116610b47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161048e565b610b5081610e3f565b50565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260026020526040902054168015610be3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f416c726561647920736574000000000000000000000000000000000000000000604482015260640161048e565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c919190611144565b80610d4557506040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190611144565b610dab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f45524331313535000000000000604482015260640161048e565b610db785858585610eb4565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600154811115610f20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f20686967680000604482015260640161048e565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610b5057600080fd5b6000806040838503121561101e57600080fd5b823561102981610fe9565b946020939093013593505050565b6000806000806080858703121561104d57600080fd5b843561105881610fe9565b9350602085013561106881610fe9565b9250604085013561107881610fe9565b9396929550929360600135925050565b60006020828403121561109a57600080fd5b5035919050565b6000602082840312156110b357600080fd5b81356110be81610fe9565b9392505050565b8082028115828204841417611103577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60008261113f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561115657600080fd5b815180151581146110be57600080fd5b60006020828403121561117857600080fd5b81516110be81610fe956fea26469706673582212205edca1c15cc2ea512a704df208b56bf72e70d55244176a05205aa6b711d89fcd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x12C7 CODESIZE SUB DUP1 PUSH2 0x12C7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x96 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11B9 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB016670 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB016670 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4FB7D3F9 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x14F PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x14F PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x2DD PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x368 SWAP1 DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x407 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST ISZERO PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420746865206F776E6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0x5A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB53 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x5BE PUSH1 0x0 PUSH2 0xE3F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F74207468652061646D696E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x950 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x94D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x96A JUMPI DUP1 ISZERO PUSH2 0x968 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9EF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9EC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA92 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA78 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA75 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA88 JUMPI POP PUSH1 0x0 SWAP3 PUSH1 0x4 SWAP3 POP SWAP1 POP JUMP JUMPDEST SWAP4 PUSH1 0x3 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP4 PUSH1 0x2 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA4 PUSH2 0xDBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xE3F JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920736574000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST DUP1 PUSH2 0xD45 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0xDB7 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEB4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1029 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x104D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1058 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1068 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1078 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10BE DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1103 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x113F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x10BE DUP2 PUSH2 0xFE9 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xDC LOG1 0xC1 0x5C 0xC2 0xEA MLOAD 0x2A PUSH17 0x4DF208B56BF72E70D55244176A05205AA6 0xB7 GT 0xD8 SWAP16 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "357:5920:4:-:0;;;1194:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;1312:4:4;1292:16;:24;;1284:63;;;;-1:-1:-1;;;1284:63:4;;405:2:6;1284:63:4;;;387:21:6;444:2;424:18;;;417:30;483:28;463:18;;;456:56;529:18;;1284:63:4;;;;;;;;1357:15;:34;357:5920;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:184:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:6;;14:184;-1:-1:-1;14:184:6:o;203:350::-;357:5920:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC2981_194": {
									"entryPoint": null,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3518,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3647,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateRoyaltyInfoForCollectionIfOwnerOrAdmin_560": {
									"entryPoint": 2899,
									"id": 560,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@checkForCollectionSetter_422": {
									"entryPoint": 2183,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1452,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeInfoCollection_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@royaltyFeeLimit_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_320": {
									"entryPoint": 803,
									"id": 320,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@transferOwnership_91": {
									"entryPoint": 2716,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_256": {
									"entryPoint": 2008,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfAdmin_464": {
									"entryPoint": 1472,
									"id": 464,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfOwner_506": {
									"entryPoint": 893,
									"id": 506,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollection_292": {
									"entryPoint": 3764,
									"id": 292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7566:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:109:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "146:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "155:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "158:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "148:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "148:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "148:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "100:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:73:6"
															},
															"nodeType": "YulIf",
															"src": "69:93:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:6",
														"type": ""
													}
												],
												"src": "14:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "260:228:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "306:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "281:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "290:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "277:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "277:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "302:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "273:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "273:32:6"
															},
															"nodeType": "YulIf",
															"src": "270:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "357:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "344:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "344:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "335:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "401:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "376:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "376:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "416:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "426:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "440:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "450:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "450:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "440:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "218:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "229:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "241:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "249:6:6",
														"type": ""
													}
												],
												"src": "173:315:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "622:168:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "632:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "644:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "655:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "640:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "632:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "674:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "689:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "697:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "685:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:74:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "667:74:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "761:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "772:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "777:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "583:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "594:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "602:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "613:4:6",
														"type": ""
													}
												],
												"src": "493:297:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "894:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "904:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "916:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "927:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "904:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "946:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "969:66:6",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "957:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:79:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:98:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:98:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "863:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "874:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "885:4:6",
														"type": ""
													}
												],
												"src": "795:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1169:477:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1216:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1225:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1228:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1218:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1218:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1218:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1190:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1199:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1186:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1186:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1211:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1182:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:33:6"
															},
															"nodeType": "YulIf",
															"src": "1179:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1241:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1267:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1254:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1245:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1311:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1286:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1286:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1326:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1336:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1350:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1382:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1393:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1378:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1378:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1365:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1354:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1431:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1406:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1406:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1448:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1458:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1448:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1517:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1502:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1489:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1489:32:6"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1478:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1555:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1530:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1530:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1572:17:6",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "1582:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1572:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1598:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1625:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1636:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1621:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1621:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1608:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:32:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1111:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1122:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1134:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1142:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1150:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1158:6:6",
														"type": ""
													}
												],
												"src": "1048:598:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1762:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1774:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1762:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1804:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1815:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1797:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1721:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1732:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1743:4:6",
														"type": ""
													}
												],
												"src": "1651:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:125:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1944:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1956:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1944:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1986:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2001:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2009:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1997:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1997:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1979:74:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1979:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1903:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1914:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1925:4:6",
														"type": ""
													}
												],
												"src": "1833:226:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2180:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2189:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2192:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2182:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2182:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2182:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2164:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2151:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2151:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2176:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2147:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:32:6"
															},
															"nodeType": "YulIf",
															"src": "2144:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2205:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2228:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2215:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2100:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2111:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2123:6:6",
														"type": ""
													}
												],
												"src": "2064:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2319:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2365:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2374:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2367:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2367:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2367:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2340:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2349:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2336:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2361:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:32:6"
															},
															"nodeType": "YulIf",
															"src": "2329:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2390:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2416:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2403:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2394:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2460:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2435:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2435:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2475:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2485:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2296:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2308:6:6",
														"type": ""
													}
												],
												"src": "2249:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2626:179:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2636:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2659:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2636:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2678:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2693:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2701:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:74:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2671:74:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2765:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2761:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2793:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2754:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2754:45:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2587:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2598:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2606:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2617:4:6",
														"type": ""
													}
												],
												"src": "2501:304:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2967:241:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2977:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2989:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3000:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2985:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2977:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3012:52:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3022:42:6",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3016:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3080:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3103:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3073:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3127:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3138:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3155:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3143:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3143:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3179:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3190:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3175:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3195:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2920:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2931:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2939:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2947:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2958:4:6",
														"type": ""
													}
												],
												"src": "2810:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3265:270:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3275:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3290:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3293:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3286:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3275:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3361:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3385:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3375:88:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3375:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3486:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3476:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3324:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3317:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3317:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3331:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3338:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3347:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3334:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3334:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3328:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3328:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3314:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3307:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3307:45:6"
															},
															"nodeType": "YulIf",
															"src": "3304:225:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3244:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3247:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3253:7:6",
														"type": ""
													}
												],
												"src": "3213:322:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3586:228:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3638:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3641:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3631:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3631:88:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3631:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3739:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3742:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3732:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3732:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3732:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3767:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3770:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3760:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3760:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3760:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3606:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:9:6"
															},
															"nodeType": "YulIf",
															"src": "3596:189:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3794:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3803:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3806:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3799:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3799:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3794:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3571:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3574:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3580:1:6",
														"type": ""
													}
												],
												"src": "3540:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3897:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3943:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3952:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3955:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3945:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3945:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3945:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3918:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3927:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3914:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3914:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3910:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:32:6"
															},
															"nodeType": "YulIf",
															"src": "3907:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3968:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3987:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3981:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3972:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4050:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4059:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4062:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4052:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4052:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4052:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4019:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4040:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4033:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4033:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4026:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4026:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4016:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4016:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4009:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:40:6"
															},
															"nodeType": "YulIf",
															"src": "4006:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4075:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4085:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4075:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3863:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3874:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3886:6:6",
														"type": ""
													}
												],
												"src": "3819:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4275:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4285:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4285:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4326:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4337:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4342:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4315:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:6"
																	},
																	{
																		"hexValue": "204d757374206e6f742062652045524332393831",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4381:22:6",
																		"type": "",
																		"value": " Must not be ERC2981"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4421:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4413:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4252:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4266:4:6",
														"type": ""
													}
												],
												"src": "4101:344:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4531:170:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4577:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4586:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4589:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4579:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4579:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4579:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4552:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4561:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4548:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4573:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4544:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:32:6"
															},
															"nodeType": "YulIf",
															"src": "4541:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4602:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4621:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4615:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4606:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4665:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4640:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4640:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4680:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4690:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4497:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4508:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4520:6:6",
														"type": ""
													}
												],
												"src": "4450:251:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4880:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4897:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4890:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4890:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4931:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4942:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4927:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4947:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4920:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4970:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4981:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4966:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4966:18:6"
																	},
																	{
																		"hexValue": "204e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4986:16:6",
																		"type": "",
																		"value": " Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4959:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4959:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5012:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5024:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5035:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5012:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4857:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4871:4:6",
														"type": ""
													}
												],
												"src": "4706:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5223:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5240:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5251:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5233:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5274:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5285:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5290:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5313:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5324:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:18:6"
																	},
																	{
																		"hexValue": "204e6f74207468652061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5329:16:6",
																		"type": "",
																		"value": " Not the admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5302:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:44:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5302:44:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5355:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5367:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5378:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5363:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5355:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5200:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5214:4:6",
														"type": ""
													}
												],
												"src": "5049:338:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5566:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5583:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5576:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5576:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5617:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5628:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5633:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5606:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5606:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5656:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5667:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5652:18:6"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5672:28:6",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5645:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5645:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5710:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5722:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5733:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5710:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5543:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5557:4:6",
														"type": ""
													}
												],
												"src": "5392:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5921:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5938:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5931:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5931:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5931:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5972:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5983:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5968:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5968:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5988:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5961:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5961:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6022:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6007:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6007:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6027:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6000:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6000:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6082:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6093:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6078:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6078:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6098:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6071:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6071:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6071:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6116:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6128:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6139:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6124:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6124:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6116:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5898:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5912:4:6",
														"type": ""
													}
												],
												"src": "5747:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6328:161:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6345:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6356:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6338:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6338:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6379:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6390:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6375:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6375:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6395:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6368:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6368:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6368:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6418:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6429:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6414:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6414:18:6"
																	},
																	{
																		"hexValue": "416c726561647920736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6434:13:6",
																		"type": "",
																		"value": "Already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6407:41:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6457:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6469:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6465:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6465:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6457:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6305:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6319:4:6",
														"type": ""
													}
												],
												"src": "6154:335:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6668:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6685:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6678:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6678:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6719:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6730:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6715:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6758:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6769:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6754:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6754:18:6"
																	},
																	{
																		"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6774:28:6",
																		"type": "",
																		"value": " Not Set of ERC721/ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6747:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6747:56:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6812:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6824:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6820:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6812:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6645:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6659:4:6",
														"type": ""
													}
												],
												"src": "6494:350:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7023:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7040:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7051:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7033:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7033:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7074:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7085:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7070:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7070:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7090:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7063:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7063:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7113:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7124:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7109:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7129:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7102:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7173:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7185:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7196:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7173:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7000:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7014:4:6",
														"type": ""
													}
												],
												"src": "6849:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7384:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7401:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7412:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7394:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7435:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7446:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7431:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7431:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7451:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7424:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7424:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7424:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7485:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7470:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7470:18:6"
																	},
																	{
																		"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7490:32:6",
																		"type": "",
																		"value": "Registry: Royalty fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7463:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:60:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7463:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7532:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7544:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7555:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7540:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7532:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7361:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7375:4:6",
														"type": ""
													}
												],
												"src": "7210:354:6"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Must not be ERC2981\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not Set of ERC721/ERC1155\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Registry: Royalty fee too high\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100df5760003560e01c8063ab0166701161008c578063bc6bc0cd11610066578063bc6bc0cd14610229578063c54e549714610250578063e31ef91c14610291578063f2fde38b1461031057600080fd5b8063ab016670146101dc578063b060dd86146101ef578063b9223c9d1461021657600080fd5b80634fb7d3f9116100bd5780634fb7d3f914610195578063715018a6146101ac5780638da5cb5b146101b457600080fd5b80632782d6c7146100e457806333bf6156146101285780633755fa8014610180575b600080fd5b6100f76100f236600461100b565b610323565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b61014f7fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161011f565b61019361018e366004611037565b61037d565b005b61019e60015481565b60405190815260200161011f565b6101936105ac565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161011f565b6101936101ea366004611037565b6105c0565b61014f7f2a55205a0000000000000000000000000000000000000000000000000000000081565b610193610224366004611088565b6107d8565b61014f7f80ac58cd0000000000000000000000000000000000000000000000000000000081565b61026361025e3660046110a1565b610887565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260ff90911660208301520161011f565b6102dd61029f3660046110a1565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401529082015260600161011f565b61019361031e3660046110a1565b610a9c565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061036890866110c5565b6103729190611109565b915091509250929050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa158015610407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042b9190611144565b15610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064015b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190611166565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f7420746865206f776e6572000000000000000000000000000000000000604482015260640161048e565b6105a684848484610b53565b50505050565b6105b4610dbe565b6105be6000610e3f565b565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa15801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190611144565b156106d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f742062652045524332393831000000000000000000000000604482015260640161048e565b8373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa158015610720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107449190611166565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f74207468652061646d696e000000000000000000000000000000000000604482015260640161048e565b6107e0610dbe565b61251c81111561084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640161048e565b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a000000000000000000000000000000000000000000000000000000006004820152600090819073ffffffffffffffffffffffffffffffffffffffff8416906301ffc9a790602401602060405180830381865afa925050508015610950575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261094d91810190611144565b60015b1561096a578015610968575060009360019350915050565b505b8273ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109ef575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526109ec91810190611166565b60015b610a92578273ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a78575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610a7591810190611166565b60015b610a885750600092600492509050565b9360039350915050565b9360029350915050565b610aa4610dbe565b73ffffffffffffffffffffffffffffffffffffffff8116610b47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161048e565b610b5081610e3f565b50565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260026020526040902054168015610be3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f416c726561647920736574000000000000000000000000000000000000000000604482015260640161048e565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c919190611144565b80610d4557506040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190611144565b610dab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f45524331313535000000000000604482015260640161048e565b610db785858585610eb4565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600154811115610f20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f20686967680000604482015260640161048e565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610b5057600080fd5b6000806040838503121561101e57600080fd5b823561102981610fe9565b946020939093013593505050565b6000806000806080858703121561104d57600080fd5b843561105881610fe9565b9350602085013561106881610fe9565b9250604085013561107881610fe9565b9396929550929360600135925050565b60006020828403121561109a57600080fd5b5035919050565b6000602082840312156110b357600080fd5b81356110be81610fe9565b9392505050565b8082028115828204841417611103577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60008261113f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561115657600080fd5b815180151581146110be57600080fd5b60006020828403121561117857600080fd5b81516110be81610fe956fea26469706673582212205edca1c15cc2ea512a704df208b56bf72e70d55244176a05205aa6b711d89fcd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB016670 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB016670 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4FB7D3F9 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x100B JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH2 0x14F PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x14F PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x263 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x2DD PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10A1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x11F JUMP JUMPDEST PUSH2 0x193 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x10A1 JUMP JUMPDEST PUSH2 0xA9C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x368 SWAP1 DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x407 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST ISZERO PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420746865206F776E6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0x5A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB53 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x5BE PUSH1 0x0 PUSH2 0xE3F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST ISZERO PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x720 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F74207468652061646D696E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x950 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x94D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x96A JUMPI DUP1 ISZERO PUSH2 0x968 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9EF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9EC SWAP2 DUP2 ADD SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA92 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA78 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA75 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA88 JUMPI POP PUSH1 0x0 SWAP3 PUSH1 0x4 SWAP3 POP SWAP1 POP JUMP JUMPDEST SWAP4 PUSH1 0x3 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP4 PUSH1 0x2 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA4 PUSH2 0xDBE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xE3F JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920736574000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST DUP1 PUSH2 0xD45 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x1144 JUMP JUMPDEST PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH2 0xDB7 DUP6 DUP6 DUP6 DUP6 PUSH2 0xEB4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1029 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x104D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1058 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1068 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1078 DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10BE DUP2 PUSH2 0xFE9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1103 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x113F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x10BE DUP2 PUSH2 0xFE9 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xDC LOG1 0xC1 0x5C 0xC2 0xEA MLOAD 0x2A PUSH17 0x4DF208B56BF72E70D55244176A05205AA6 0xB7 GT 0xD8 SWAP16 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "357:5920:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2340:267;;;;;;:::i;:::-;;:::i;:::-;;;;697:42:6;685:55;;;667:74;;772:2;757:18;;750:34;;;;640:18;2340:267:4;;;;;;;;639:56;;;;;;;;969:66:6;957:79;;;939:98;;927:2;912:18;639:56:4;795:248:6;4976:441:4;;;;;;:::i;:::-;;:::i;:::-;;840:30;;;;;;;;;1797:25:6;;;1785:2;1770:18;840:30:4;1651:177:6;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;1273:6;;;;1979:74:6;;1967:2;1952:18;1201:85:0;1833:226:6;4217:491:4;;;;;;:::i;:::-;;:::i;729:56::-;;;;;1460:303;;;;;;:::i;:::-;;:::i;550:55::-;;;;;3225:628;;;;;;:::i;:::-;;:::i;:::-;;;;2701:42:6;2689:55;;;2671:74;;2793:4;2781:17;;;2776:2;2761:18;;2754:45;2644:18;3225:628:4;2501:304:6;2649:358:4;;;;;;:::i;:::-;2839:37;;;;2760:7;2839:37;;;:25;:37;;;;;;;;:44;;;2893:46;;;2949:41;;;;;2839:44;;;;2893:46;;;2649:358;;;;;3022:42:6;3091:15;;;3073:34;;3143:15;;;;3138:2;3123:18;;3116:43;3175:18;;;3168:34;3000:2;2985:18;2649:358:4;2810:398:6;2081:198:0;;;;;;:::i;:::-;;:::i;2340:267:4:-;2474:37;;;;2429:7;2474:37;;;:25;:37;;;;;;;:46;;;;2540:41;;;2429:7;;;;2474:46;;;2585:5;;2531:50;;:6;:50;:::i;:::-;2530:60;;;;:::i;:::-;2457:143;;;;2340:267;;;;;:::o;4976:441::-;5156:59;;;;;5194:20;5156:59;;;939:98:6;5156:37:4;;;;;;912:18:6;;5156:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5155:60;5147:93;;;;;;;4303:2:6;5147:93:4;;;4285:21:6;4342:2;4322:18;;;4315:30;4381:22;4361:18;;;4354:50;4421:18;;5147:93:4;;;;;;;;;5281:10;5272:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5258:42;;:10;:42;;;5250:69;;;;;;;4908:2:6;5250:69:4;;;4890:21:6;4947:2;4927:18;;;4920:30;4986:16;4966:18;;;4959:44;5020:18;;5250:69:4;4706:338:6;5250:69:4;5330:80;5376:10;5388:6;5396:8;5406:3;5330:45;:80::i;:::-;4976:441;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4217:491:4:-;4447:59;;;;;4485:20;4447:59;;;939:98:6;4447:37:4;;;;;;912:18:6;;4447:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4446:60;4438:93;;;;;;;4303:2:6;4438:93:4;;;4285:21:6;4342:2;4322:18;;;4315:30;4381:22;4361:18;;;4354:50;4421:18;;4438:93:4;4101:344:6;4438:93:4;4572:10;4563:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4549:42;;:10;:42;;;4541:69;;;;;;;5251:2:6;4541:69:4;;;5233:21:6;5290:2;5270:18;;;5263:30;5329:16;5309:18;;;5302:44;5363:18;;4541:69:4;5049:338:6;1460:303:4;1094:13:0;:11;:13::i;:::-;1625:4:4::1;1605:16;:24;;1597:63;;;::::0;::::1;::::0;;5594:2:6;1597:63:4::1;::::0;::::1;5576:21:6::0;5633:2;5613:18;;;5606:30;5672:28;5652:18;;;5645:56;5718:18;;1597:63:4::1;5392:350:6::0;1597:63:4::1;1670:15;:34:::0;;;1720:36:::1;::::0;1797:25:6;;;1720:36:4::1;::::0;1785:2:6;1770:18;1720:36:4::1;;;;;;;1460:303:::0;:::o;3225:628::-;3332:59;;;;;3370:20;3332:59;;;939:98:6;3302:7:4;;;;3332:37;;;;;;912:18:6;;3332:59:4;;;;;;;;;;;;;;;;;;-1:-1:-1;3332:59:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3328:206;;;3442:16;3438:77;;;-1:-1:-1;3494:1:4;;3498;;-1:-1:-1;3225:628:4;-1:-1:-1;;3225:628:4:o;3438:77::-;3392:133;3328:206;3557:10;3548:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3548:28:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3544:303;;3679:10;3670:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3670:28:4;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3666:171;;-1:-1:-1;3816:1:4;;3820;;-1:-1:-1;3225:628:4;-1:-1:-1;3225:628:4:o;3666:171::-;3750:6;3758:1;;-1:-1:-1;3225:628:4;-1:-1:-1;;3225:628:4:o;3544:303::-;3624:6;3632:1;;-1:-1:-1;3225:628:4;-1:-1:-1;;3225:628:4:o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;5949:2:6;2161:73:0::1;::::0;::::1;5931:21:6::0;5988:2;5968:18;;;5961:30;6027:34;6007:18;;;6000:62;6098:8;6078:18;;;6071:36;6124:19;;2161:73:0::1;5747:402:6::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;5669:606:4:-;5872:37;;;;5848:21;5872:37;;;:25;:37;;;;;:44;;5934:27;;5926:51;;;;;;;6356:2:6;5926:51:4;;;6338:21:6;6395:2;6375:18;;;6368:30;6434:13;6414:18;;;6407:41;6465:18;;5926:51:4;6154:335:6;5926:51:4;6010:58;;;;;6048:19;6010:58;;;939:98:6;6010:37:4;;;;;;912:18:6;;6010:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;6080:59:4;;;;;6118:20;6080:59;;;939:98:6;6080:37:4;;;;;;912:18:6;;6080:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5988:204;;;;;;;6696:2:6;5988:204:4;;;6678:21:6;6735:2;6715:18;;;6708:30;6774:28;6754:18;;;6747:56;6820:18;;5988:204:4;6494:350:6;5988:204:4;6203:65;6234:10;6246:6;6254:8;6264:3;6203:30;:65::i;:::-;5838:437;5669:606;;;;:::o;1359:130:0:-;1247:7;1273:6;1422:23;1273:6;719:10:1;1422:23:0;1414:68;;;;;;;7051:2:6;1414:68:0;;;7033:21:6;;;7070:18;;;7063:30;7129:34;7109:18;;;7102:62;7181:18;;1414:68:0;6849:356:6;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1769:408:4:-;1947:15;;1940:3;:22;;1932:65;;;;;;;7412:2:6;1932:65:4;;;7394:21:6;7451:2;7431:18;;;7424:30;7490:32;7470:18;;;7463:60;7540:18;;1932:65:4;7210:354:6;1932:65:4;2048:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:37;;;-1:-1:-1;2008:37:4;;;:25;:37;;;;;;;:95;;;;;;;;;;;;;;;;-1:-1:-1;2008:95:4;;;;;;;;;;;;;;;;;;;;;;;;2119:51;;1797:25:6;;;2048:55:4;;2119:51;;1770:18:6;2119:51:4;;;;;;;1769:408;;;;:::o;14:154:6:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:6:o;1048:598::-;1134:6;1142;1150;1158;1211:3;1199:9;1190:7;1186:23;1182:33;1179:53;;;1228:1;1225;1218:12;1179:53;1267:9;1254:23;1286:31;1311:5;1286:31;:::i;:::-;1336:5;-1:-1:-1;1393:2:6;1378:18;;1365:32;1406:33;1365:32;1406:33;:::i;:::-;1458:7;-1:-1:-1;1517:2:6;1502:18;;1489:32;1530:33;1489:32;1530:33;:::i;:::-;1048:598;;;;-1:-1:-1;1582:7:6;;1636:2;1621:18;1608:32;;-1:-1:-1;;1048:598:6:o;2064:180::-;2123:6;2176:2;2164:9;2155:7;2151:23;2147:32;2144:52;;;2192:1;2189;2182:12;2144:52;-1:-1:-1;2215:23:6;;2064:180;-1:-1:-1;2064:180:6:o;2249:247::-;2308:6;2361:2;2349:9;2340:7;2336:23;2332:32;2329:52;;;2377:1;2374;2367:12;2329:52;2416:9;2403:23;2435:31;2460:5;2435:31;:::i;:::-;2485:5;2249:247;-1:-1:-1;;;2249:247:6:o;3213:322::-;3286:9;;;3317;;3334:15;;;3328:22;;3314:37;3304:225;;3385:77;3382:1;3375:88;3486:4;3483:1;3476:15;3514:4;3511:1;3504:15;3304:225;3213:322;;;;:::o;3540:274::-;3580:1;3606;3596:189;;3641:77;3638:1;3631:88;3742:4;3739:1;3732:15;3770:4;3767:1;3760:15;3596:189;-1:-1:-1;3799:9:6;;3540:274::o;3819:277::-;3886:6;3939:2;3927:9;3918:7;3914:23;3910:32;3907:52;;;3955:1;3952;3945:12;3907:52;3987:9;3981:16;4040:5;4033:13;4026:21;4019:5;4016:32;4006:60;;4062:1;4059;4052:12;4450:251;4520:6;4573:2;4561:9;4552:7;4548:23;4544:32;4541:52;;;4589:1;4586;4579:12;4541:52;4621:9;4615:16;4640:31;4665:5;4640:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "907400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "250",
								"INTERFACE_ID_ERC2981()": "249",
								"INTERFACE_ID_ERC721()": "226",
								"checkForCollectionSetter(address)": "infinite",
								"owner()": "2356",
								"renounceOwnership()": "infinite",
								"royaltyFeeInfoCollection(address)": "6884",
								"royaltyFeeLimit()": "2318",
								"royaltyInfo(address,uint256)": "4911",
								"transferOwnership(address)": "infinite",
								"updateRoyaltyFeeLimit(uint256)": "25634",
								"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "infinite"
							},
							"internal": {
								"_updateRoyaltyInfoForCollectionIfOwnerOrAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollection(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 357,
									"end": 6277,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1194,
									"end": 1398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1194,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1312,
									"end": 1316,
									"name": "PUSH",
									"source": 4,
									"value": "251C"
								},
								{
									"begin": 1292,
									"end": 1308,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 387,
									"end": 408,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "1A"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 442,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 417,
									"end": 447,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 483,
									"end": 511,
									"name": "PUSH",
									"source": 6,
									"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 456,
									"end": 512,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1284,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1357,
									"end": 1372,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1357,
									"end": 1391,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 203,
									"end": 553,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 203,
									"end": 553,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 6277,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205edca1c15cc2ea512a704df208b56bf72e70d55244176a05205aa6b711d89fcd64736f6c63430008110033",
									".code": [
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "AB016670"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "BC6BC0CD"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "BC6BC0CD"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "C54E5497"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "E31EF91C"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "AB016670"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "B060DD86"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "B9223C9D"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "4FB7D3F9"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "4FB7D3F9"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "2782D6C7"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "33BF6156"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "3755FA80"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 357,
											"end": 6277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2340,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2340,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 697,
											"end": 739,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 740,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 685,
											"end": 740,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 667,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 667,
											"end": 741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 757,
											"end": 775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 750,
											"end": 784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 640,
											"end": 658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 969,
											"end": 1035,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 927,
											"end": 929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 639,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 795,
											"end": 1043,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4976,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4976,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 870,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 840,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1651,
											"end": 1828,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1979,
											"end": 2053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1833,
											"end": 2059,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4217,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4217,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 729,
											"end": 785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 729,
											"end": 785,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 729,
											"end": 785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 729,
											"end": 785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3225,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3225,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2797,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2799,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2501,
											"end": 2805,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2649,
											"end": 3007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2864,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2876,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2990,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2883,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3159,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3002,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2810,
											"end": 3208,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2499,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2511,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2581,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2540,
											"end": 2581,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2531,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2530,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2530,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5194,
											"end": 5214,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5156,
											"end": 5215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5156,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5155,
											"end": 5215,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "204D757374206E6F742062652045524332393831000000000000000000000000"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5147,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5298,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5272,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5272,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5258,
											"end": 5300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5268,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5300,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5258,
											"end": 5300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5300,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4908,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4949,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5002,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F7420746865206F776E6572000000000000000000000000000000000000"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4959,
											"end": 5003,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5020,
											"end": 5038,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5020,
											"end": 5038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4706,
											"end": 5044,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5250,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5376,
											"end": 5386,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5394,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5404,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5409,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5330,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5410,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5330,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4217,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4505,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 4447,
											"end": 4484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4447,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4447,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4446,
											"end": 4506,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "204D757374206E6F742062652045524332393831000000000000000000000000"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4101,
											"end": 4445,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4438,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4582,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4563,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4563,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4549,
											"end": 4591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4559,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4549,
											"end": 4591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4591,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5345,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F74207468652061646D696E000000000000000000000000000000000000"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "251C"
										},
										{
											"begin": 1605,
											"end": 1621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1629,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5594,
											"end": 5596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 1660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5597,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5700,
											"name": "PUSH",
											"source": 6,
											"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5392,
											"end": 5742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1597,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1704,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1756,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256"
										},
										{
											"begin": 1720,
											"end": 1756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1756,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3370,
											"end": 3390,
											"name": "PUSH",
											"source": 4,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3302,
											"end": 3309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3332,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3332,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3328,
											"end": 3534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3515,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3438,
											"end": 3515,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3515,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3438,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3534,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3328,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3548,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3548,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3544,
											"end": 3847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3689,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3696,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3696,
											"name": "PUSH",
											"source": 4,
											"value": "F851A440"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3670,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3670,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3666,
											"end": 3837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3837,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3666,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3758,
											"end": 3759,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3758,
											"end": 3759,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3847,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3544,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3630,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5949,
											"end": 5951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 5990,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6061,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6062,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6098,
											"end": 6106,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6124,
											"end": 6143,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6124,
											"end": 6143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5747,
											"end": 6149,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 6275,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5669,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5897,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5909,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5916,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5872,
											"end": 5916,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6358,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6359,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6395,
											"end": 6397,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6375,
											"end": 6393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6447,
											"name": "PUSH",
											"source": 6,
											"value": "416C726561647920736574000000000000000000000000000000000000000000"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6448,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6154,
											"end": 6489,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5926,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6067,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6047,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6047,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6047,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 6010,
											"end": 6047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6010,
											"end": 6068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6010,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6139,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6010,
											"end": 6139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6118,
											"end": 6138,
											"name": "PUSH",
											"source": 4,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6117,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6080,
											"end": 6117,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6117,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 6080,
											"end": 6117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 912,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6080,
											"end": 6139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6080,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6678,
											"end": 6699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6802,
											"name": "PUSH",
											"source": 6,
											"value": "204E6F7420536574206F66204552433732312F45524331313535000000000000"
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6747,
											"end": 6803,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6494,
											"end": 6844,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5988,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6234,
											"end": 6244,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6246,
											"end": 6252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6254,
											"end": 6262,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6267,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6203,
											"end": 6268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6203,
											"end": 6268,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6203,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 6275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 6275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 6275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 6275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 6275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 6275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7051,
											"end": 7053,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7070,
											"end": 7088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7063,
											"end": 7093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7163,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7181,
											"end": 7199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6849,
											"end": 7205,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1962,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1947,
											"end": 1962,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1962,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1940,
											"end": 1962,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 7431,
											"end": 7449,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7431,
											"end": 7449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7431,
											"end": 7449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7454,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7522,
											"name": "PUSH",
											"source": 6,
											"value": "52656769737472793A20526F79616C74792066656520746F6F20686967680000"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 7210,
											"end": 7564,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1932,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2045,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP10",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2103,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2103,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "PUSH",
											"source": 4,
											"value": "D01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64"
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2170,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 168,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 14,
											"end": 168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 100,
											"end": 142,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 89,
											"end": 143,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 82,
											"end": 87,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 79,
											"end": 144,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 69,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 158,
											"end": 159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 160,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 173,
											"end": 488,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 173,
											"end": 488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 299,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 281,
											"end": 288,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 277,
											"end": 300,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 273,
											"end": 305,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 270,
											"end": 322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 270,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 270,
											"end": 322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 308,
											"end": 320,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 270,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 270,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 344,
											"end": 367,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 376,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 401,
											"end": 406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 376,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 376,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 376,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 431,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 463,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 482,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 482,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 173,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1646,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1048,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1214,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1199,
											"end": 1208,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1190,
											"end": 1197,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1230,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1276,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1254,
											"end": 1277,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1311,
											"end": 1316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1286,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1336,
											"end": 1341,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1393,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1378,
											"end": 1396,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1378,
											"end": 1396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1365,
											"end": 1397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1406,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1406,
											"end": 1439,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1406,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1465,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1530,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1530,
											"end": 1563,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1530,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1646,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1646,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1646,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1646,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1582,
											"end": 1589,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1589,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1638,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2244,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2064,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2179,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2194,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2238,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2364,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2435,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2490,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3334,
											"end": 3349,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3351,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3490,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3519,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3304,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3814,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3540,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3580,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3718,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3638,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3775,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3596,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3819,
											"end": 4096,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3819,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3941,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3925,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3914,
											"end": 3937,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3910,
											"end": 3942,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3955,
											"end": 3956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3957,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3907,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 3997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4033,
											"end": 4046,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4026,
											"end": 4047,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4048,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4006,
											"end": 4066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4064,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4701,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4450,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4552,
											"end": 4559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4548,
											"end": 4571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4576,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4591,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4541,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4631,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4640,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4665,
											"end": 4670,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4640,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4640,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/interface/IOwnable.sol",
								"contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"checkForCollectionSetter(address)": "c54e5497",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyFeeLimit()": "4fb7d3f9",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"transferOwnership(address)": "f2fde38b",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "ab016670",
							"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "3755fa80"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"NewRoyaltyFeeLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RoyaltyFeeUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkForCollectionSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":\"RoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/interface/IOwnable.sol\":{\"keccak256\":\"0x41202418ac7e8136e6e27a583e2c505bdb5f294bdaf1c51e780e6882e8265481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2792390aae1f1dd981756c2966ef2c65871b00e8e3c9b1b90173805564a2fe3c\",\"dweb:/ipfs/QmRDxbyiKHkLSKe4UREDCt3KCfuyuM9fHDYuugsPGstagp\"]},\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x05e68cda05cfb562ca60b67f0027ce1f37278ea0778b85f00a3af2d68dd2a608\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f114f8162436dd9aff79ad03c46bf6738794bb2efdaacc98221faeb985e5dc6f\",\"dweb:/ipfs/QmeXQxf48cy6vz2ww85biuFMcbPEk5n7zqLjXqBrHSE6NK\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x711cb38bc94ecc1a78aec90fc798bcb553416122de86bb5d5ecab63e793b49f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59081b6554c25265051893dfde258a8b5476b37ec1b52f1f9c61742140b1d47\",\"dweb:/ipfs/QmaVeRoJv34nphsN27cdUP1hXuMhYL2SvRAByd938GkmLt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 196,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "royaltyFeeLimit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 201,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_royaltyFeeInfoCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(FeeInfo)185_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(FeeInfo)185_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(FeeInfo)185_storage"
							},
							"t_struct(FeeInfo)185_storage": {
								"encoding": "inplace",
								"label": "struct RoyaltyFeeRegistry.FeeInfo",
								"members": [
									{
										"astId": 180,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "setter",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 182,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "receiver",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 184,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "fee",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x711cb38bc94ecc1a78aec90fc798bcb553416122de86bb5d5ecab63e793b49f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59081b6554c25265051893dfde258a8b5476b37ec1b52f1f9c61742140b1d47\",\"dweb:/ipfs/QmaVeRoJv34nphsN27cdUP1hXuMhYL2SvRAByd938GkmLt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC165",
							"nameLocation": "415:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "801:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:2"
									},
									"scope": 146,
									"src": "774:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "405:447:2",
							"usedErrors": []
						}
					],
					"src": "100:753:2"
				},
				"id": 2
			},
			"contracts/Manager/interface/IOwnable.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							164
						]
					},
					"id": 165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "IOwnable",
							"nameLocation": "67:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "91:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "117:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "109:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:18:3"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:0:3"
									},
									"scope": 164,
									"src": "82:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "151:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:2:3"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "182:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "181:9:3"
									},
									"scope": 164,
									"src": "142:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f851a440",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "206:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "237:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "236:9:3"
									},
									"scope": 164,
									"src": "197:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 165,
							"src": "57:191:3",
							"usedErrors": []
						}
					],
					"src": "32:217:3"
				},
				"id": 3
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IERC165": [
							146
						],
						"IOwnable": [
							164
						],
						"IRoyaltyFeeRegistry": [
							591
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeRegistry": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 147,
							"src": "56:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 146,
										"src": "64:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 113,
							"src": "137:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "145:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/IOwnable.sol",
							"file": "../interface/IOwnable.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 165,
							"src": "205:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 164,
										"src": "213:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./interface/IRoyaltyFeeRegistry.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 592,
							"src": "258:72:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 591,
										"src": "266:19:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 175,
										"name": "IRoyaltyFeeRegistry",
										"nameLocations": [
											"388:19:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 591,
										"src": "388:19:4"
									},
									"id": 176,
									"nodeType": "InheritanceSpecifier",
									"src": "388:19:4"
								},
								{
									"baseName": {
										"id": 177,
										"name": "Ownable",
										"nameLocations": [
											"409:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "409:7:4"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "409:7:4"
								}
							],
							"canonicalName": "RoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561,
								112,
								134,
								591
							],
							"name": "RoyaltyFeeRegistry",
							"nameLocation": "366:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "RoyaltyFeeRegistry.FeeInfo",
									"id": 185,
									"members": [
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "setter",
											"nameLocation": "456:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "448:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 179,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "448:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "480:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "472:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 181,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "506:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "498:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeInfo",
									"nameLocation": "430:7:4",
									"nodeType": "StructDefinition",
									"scope": 561,
									"src": "423:93:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 188,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "573:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "550:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 186,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "550:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "595:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 191,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "662:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "639:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 189,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "639:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "685:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 194,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "752:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "729:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 192,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "729:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "775:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fb7d3f9",
									"id": 196,
									"mutability": "mutable",
									"name": "royaltyFeeLimit",
									"nameLocation": "855:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "840:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "840:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_royaltyFeeInfoCollection",
									"nameLocation": "956:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "920:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
										"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
									},
									"typeName": {
										"id": 200,
										"keyType": {
											"id": 197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "928:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "920:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
											"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
										},
										"valueType": {
											"id": 199,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 198,
												"name": "FeeInfo",
												"nameLocations": [
													"939:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 185,
												"src": "939:7:4"
											},
											"referencedDeclaration": 185,
											"src": "939:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeeInfo_$185_storage_ptr",
												"typeString": "struct RoyaltyFeeRegistry.FeeInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256",
									"id": 205,
									"name": "NewRoyaltyFeeLimit",
									"nameLocation": "994:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "royaltyFeeLimit",
												"nameLocation": "1021:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1013:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:25:4"
									},
									"src": "988:50:4"
								},
								{
									"anonymous": false,
									"eventSelector": "d01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64",
									"id": 215,
									"name": "RoyaltyFeeUpdate",
									"nameLocation": "1049:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1082:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1066:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1110:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1094:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1134:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1118:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1152:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1144:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:91:4"
									},
									"src": "1043:114:4"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "1232:166:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "1292:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1312:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1292:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1318:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1284:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1284:63:4"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1357:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 228,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1375:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1357:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "1357:34:4"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1214:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1206:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:26:4"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:0:4"
									},
									"scope": 561,
									"src": "1194:204:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										568
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1545:218:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1605:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1625:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1605:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1631:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1597:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "1597:63:4"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 247,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1670:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 248,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1688:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1670:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1670:34:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 252,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "1739:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 251,
														"name": "NewRoyaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1720:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "EmitStatement",
												"src": "1715:41:4"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 237,
												"name": "onlyOwner",
												"nameLocations": [
													"1535:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1535:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1535:9:4"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "1469:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 236,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1526:8:4"
									},
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1499:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1491:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:26:4"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:0:4"
									},
									"scope": 561,
									"src": "1460:303:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1922:255:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "1940:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 269,
																"name": "royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "1947:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1940:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1964:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															},
															"value": "Registry: Royalty fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1932:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1932:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1932:65:4"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 274,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "2008:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 276,
														"indexExpression": {
															"id": 275,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2034:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2008:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 278,
																"name": "setter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2065:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 279,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2083:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 280,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2098:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 277,
															"name": "FeeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2048:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FeeInfo_$185_storage_ptr_$",
																"typeString": "type(struct RoyaltyFeeRegistry.FeeInfo storage pointer)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2057:6:4",
															"2073:8:4",
															"2093:3:4"
														],
														"names": [
															"setter",
															"receiver",
															"fee"
														],
														"nodeType": "FunctionCall",
														"src": "2048:55:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_memory_ptr",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo memory"
														}
													},
													"src": "2008:95:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
														"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2008:95:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 285,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2136:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2148:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2156:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 288,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2166:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"name": "RoyaltyFeeUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "2119:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2119:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "EmitStatement",
												"src": "2114:56:4"
											}
										]
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "1778:30:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1826:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1854:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1846:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1878:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1870:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1904:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1896:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:105:4"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:0:4"
									},
									"scope": 561,
									"src": "1769:408:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "2447:160:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 304,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2474:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 306,
																"indexExpression": {
																	"id": 305,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "2500:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2474:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2512:8:4",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "2474:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 308,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "2531:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 309,
																					"name": "_royaltyFeeInfoCollection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 201,
																					"src": "2540:25:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																						"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																					}
																				},
																				"id": 311,
																				"indexExpression": {
																					"id": 310,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 294,
																					"src": "2566:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2540:37:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																					"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																				}
																			},
																			"id": 312,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2578:3:4",
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 184,
																			"src": "2540:41:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2531:50:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2530:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2585:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2530:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 317,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2464:136:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 303,
												"id": 318,
												"nodeType": "Return",
												"src": "2457:143:4"
											}
										]
									},
									"functionSelector": "2782d6c7",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "2349:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2411:8:4"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2369:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2361:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2389:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2381:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:36:4"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2429:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "2438:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:18:4"
									},
									"scope": 561,
									"src": "2340:267:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "2812:195:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 332,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2839:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 334,
																"indexExpression": {
																	"id": 333,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2865:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2839:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2877:6:4",
															"memberName": "setter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 180,
															"src": "2839:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 336,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2893:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 338,
																"indexExpression": {
																	"id": 337,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2919:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2893:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2931:8:4",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "2893:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 340,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2949:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 342,
																"indexExpression": {
																	"id": 341,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "2975:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2949:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2987:3:4",
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "2949:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 344,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2829:171:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 331,
												"id": 345,
												"nodeType": "Return",
												"src": "2822:178:4"
											}
										]
									},
									"functionSelector": "e31ef91c",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "2658:24:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2729:8:4"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2691:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2683:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:20:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2760:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2777:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2794:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2750:57:4"
									},
									"scope": 561,
									"src": "2649:358:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "3318:535:4",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 375,
															"nodeType": "Block",
															"src": "3424:101:4",
															"statements": [
																{
																	"condition": {
																		"id": 365,
																		"name": "interfaceSupport",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "3442:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 374,
																	"nodeType": "IfStatement",
																	"src": "3438:77:4",
																	"trueBody": {
																		"id": 373,
																		"nodeType": "Block",
																		"src": "3460:55:4",
																		"statements": [
																			{
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 368,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3494:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 367,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "3486:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 366,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "3486:7:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 369,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3486:10:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"hexValue": "31",
																							"id": 370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3498:1:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						}
																					],
																					"id": 371,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3485:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_address_$_t_rational_1_by_1_$",
																						"typeString": "tuple(address,int_const 1)"
																					}
																				},
																				"functionReturnParameters": 355,
																				"id": 372,
																				"nodeType": "Return",
																				"src": "3478:22:4"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 376,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 364,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 363,
																	"mutability": "mutable",
																	"name": "interfaceSupport",
																	"nameLocation": "3406:16:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 376,
																	"src": "3401:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 362,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3401:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3400:23:4"
														},
														"src": "3392:133:4"
													},
													{
														"block": {
															"id": 377,
															"nodeType": "Block",
															"src": "3532:2:4",
															"statements": []
														},
														"errorName": "",
														"id": 378,
														"nodeType": "TryCatchClause",
														"src": "3526:8:4"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 360,
															"name": "INTERFACE_ID_ERC2981",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "3370:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 357,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "3340:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 356,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "3332:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3332:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$146",
																"typeString": "contract IERC165"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3352:17:4",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3332:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view external returns (bool)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:59:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "TryStatement",
												"src": "3328:206:4"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 392,
															"nodeType": "Block",
															"src": "3602:43:4",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"id": 388,
																				"name": "setter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "3624:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3632:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"id": 390,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3623:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_address_$_t_rational_2_by_1_$",
																			"typeString": "tuple(address,int_const 2)"
																		}
																	},
																	"functionReturnParameters": 355,
																	"id": 391,
																	"nodeType": "Return",
																	"src": "3616:18:4"
																}
															]
														},
														"errorName": "",
														"id": 393,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 387,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 386,
																	"mutability": "mutable",
																	"name": "setter",
																	"nameLocation": "3594:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 393,
																	"src": "3586:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3586:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3585:16:4"
														},
														"src": "3577:68:4"
													},
													{
														"block": {
															"id": 418,
															"nodeType": "Block",
															"src": "3652:195:4",
															"statements": [
																{
																	"clauses": [
																		{
																			"block": {
																				"id": 406,
																				"nodeType": "Block",
																				"src": "3724:51:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"id": 402,
																									"name": "setter",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 400,
																									"src": "3750:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "33",
																									"id": 403,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3758:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								}
																							],
																							"id": 404,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3749:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_3_by_1_$",
																								"typeString": "tuple(address,int_const 3)"
																							}
																						},
																						"functionReturnParameters": 355,
																						"id": 405,
																						"nodeType": "Return",
																						"src": "3742:18:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 407,
																			"nodeType": "TryCatchClause",
																			"parameters": {
																				"id": 401,
																				"nodeType": "ParameterList",
																				"parameters": [
																					{
																						"constant": false,
																						"id": 400,
																						"mutability": "mutable",
																						"name": "setter",
																						"nameLocation": "3716:6:4",
																						"nodeType": "VariableDeclaration",
																						"scope": 407,
																						"src": "3708:14:4",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 399,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3708:7:4",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"src": "3707:16:4"
																			},
																			"src": "3699:76:4"
																		},
																		{
																			"block": {
																				"id": 415,
																				"nodeType": "Block",
																				"src": "3782:55:4",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 410,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "3816:1:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 409,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "3808:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 408,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "3808:7:4",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 411,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3808:10:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "34",
																									"id": 412,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3820:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_4_by_1",
																										"typeString": "int_const 4"
																									},
																									"value": "4"
																								}
																							],
																							"id": 413,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3807:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_4_by_1_$",
																								"typeString": "tuple(address,int_const 4)"
																							}
																						},
																						"functionReturnParameters": 355,
																						"id": 414,
																						"nodeType": "Return",
																						"src": "3800:22:4"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 416,
																			"nodeType": "TryCatchClause",
																			"src": "3776:61:4"
																		}
																	],
																	"externalCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 395,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 349,
																						"src": "3679:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 394,
																					"name": "IOwnable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "3670:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																						"typeString": "type(contract IOwnable)"
																					}
																				},
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3670:20:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IOwnable_$164",
																					"typeString": "contract IOwnable"
																				}
																			},
																			"id": 397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3691:5:4",
																			"memberName": "admin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 163,
																			"src": "3670:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3670:28:4",
																		"tryCall": true,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 417,
																	"nodeType": "TryStatement",
																	"src": "3666:171:4"
																}
															]
														},
														"errorName": "",
														"id": 419,
														"nodeType": "TryCatchClause",
														"src": "3646:201:4"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 381,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "3557:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 380,
																"name": "IOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3548:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																	"typeString": "type(contract IOwnable)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3548:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnable_$164",
																"typeString": "contract IOwnable"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3569:5:4",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "3548:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3548:28:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 420,
												"nodeType": "TryStatement",
												"src": "3544:303:4"
											}
										]
									},
									"functionSelector": "c54e5497",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkForCollectionSetter",
									"nameLocation": "3234:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3267:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3259:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3259:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3258:20:4"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3302:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3311:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 353,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3311:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:16:4"
									},
									"scope": 561,
									"src": "3225:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "4378:330:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4446:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 438,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "4485:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 435,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "4455:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 434,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "4447:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4447:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4467:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "4447:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4447:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4508:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4438:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "4438:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 445,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4549:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4553:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4549:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 448,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "4572:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 447,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "4563:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4563:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4584:5:4",
																	"memberName": "admin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 163,
																	"src": "4563:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4563:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4549:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f74207468652061646d696e",
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4593:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															},
															"value": " Not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4541:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4541:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "4541:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4667:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "4679:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "4687:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "4697:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4621:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4621:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "4621:80:4"
											}
										]
									},
									"functionSelector": "ab016670",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfAdmin",
									"nameLocation": "4226:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "4281:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4273:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4273:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "4309:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4301:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4359:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "4351:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4263:105:4"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4378:0:4"
									},
									"scope": 561,
									"src": "4217:491:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "5137:280:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5155:60:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 480,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "5194:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 477,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 466,
																				"src": "5164:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 476,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "5156:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5156:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$146",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5176:17:4",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "5156:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5156:59:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5217:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5147:93:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "5147:93:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 487,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5258:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5262:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5258:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 490,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 466,
																				"src": "5281:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 489,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "5272:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$164_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5272:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$164",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5293:5:4",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 158,
																	"src": "5272:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5272:28:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5258:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420746865206f776e6572",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5302:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															},
															"value": " Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															}
														],
														"id": 486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5250:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5250:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "5250:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 499,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "5376:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 500,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5388:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "5396:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5406:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "5330:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "5330:80:4"
											}
										]
									},
									"functionSelector": "3755fa80",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfOwner",
									"nameLocation": "4985:37:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "5040:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5032:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "5068:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5060:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5060:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5092:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5084:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "5118:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "5110:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5022:105:4"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5137:0:4"
									},
									"scope": 561,
									"src": "4976:441:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "5838:437:4",
										"statements": [
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "5856:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "5848:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 517,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5848:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 519,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5872:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$185_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 521,
														"indexExpression": {
															"id": 520,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5898:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5872:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$185_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5910:6:4",
													"memberName": "setter",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 180,
													"src": "5872:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5848:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "currentSetter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "5934:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5959:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5951:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5951:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5951:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5934:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920736574",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5963:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															},
															"value": "Already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5926:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5926:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "5926:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 539,
																				"name": "INTERFACE_ID_ERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 188,
																				"src": "6048:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 536,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 508,
																						"src": "6018:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 535,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "6010:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6010:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6030:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "6010:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6010:58:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "INTERFACE_ID_ERC1155",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "6118:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 542,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 508,
																						"src": "6088:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 541,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "6080:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$146_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6080:19:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$146",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6100:17:4",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 145,
																			"src": "6080:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6080:59:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6010:129:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 548,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6009:131:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6154:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															},
															"value": " Not Set of ERC721/ERC1155"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5988:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5988:204:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "5988:204:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6234:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "6246:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "6254:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "6264:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "updateRoyaltyInfoForCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6203:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6203:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "6203:65:4"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
									"nameLocation": "5678:45:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "5741:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5733:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5733:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "5769:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5761:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5761:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5793:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5785:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "5819:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5811:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5811:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5723:105:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5838:0:4"
									},
									"scope": 561,
									"src": "5669:606:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 562,
							"src": "357:5920:4",
							"usedErrors": []
						}
					],
					"src": "32:6246:4"
				},
				"id": 4
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							591
						]
					},
					"id": 592,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 591,
							"linearizedBaseContracts": [
								591
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b9223c9d",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "105:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "135:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "127:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:26:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "161:0:5"
									},
									"scope": 591,
									"src": "96:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "177:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "197:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "189:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "217:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "209:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:36:5"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "257:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "257:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:18:5"
									},
									"scope": 591,
									"src": "168:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "281:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "314:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "306:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:20:5"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "386:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "407:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "428:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:73:5"
									},
									"scope": 591,
									"src": "272:174:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 592,
							"src": "57:391:5",
							"usedErrors": []
						}
					],
					"src": "32:417:5"
				},
				"id": 5
			}
		}
	}
}