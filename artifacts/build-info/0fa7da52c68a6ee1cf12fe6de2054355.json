{
	"id": "0fa7da52c68a6ee1cf12fe6de2054355",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"RoyaltyFeeRegistry_flat.sol": {
				"content": "\n// File: contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\n\n\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n  \n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n\n// File: contracts/Manager/interface/IOwnable.sol\n\n\npragma solidity ^0.8.9;\n\ninterface IOwnable {\n    function transferOwnership(address newOwner) external;\n\n    function owner() external view returns (address);\n\n    function admin() external view returns (address);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: contracts/Manager/royalty/RoyaltyFeeRegistry.sol\n\n\npragma solidity ^0.8.9;\n\n\n\n\n\n//  register royalty fee\ncontract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {\n    struct FeeInfo {\n        address setter;\n        address receiver;\n        uint256 fee;\n    }\n       // ERC721 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    // ERC1155 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    // ERC2981 interfaceID\n    bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a;\n\n    // limit max royalty fee（10,000 = 100%）\n    uint256 public royaltyFeeLimit;\n\n    //compile royalty information mapping \n    mapping(address => FeeInfo) private _royaltyFeeInfoCollection;\n\n    event NewRoyaltyFeeLimit(uint256 royaltyFeeLimit);\n    event RoyaltyFeeUpdate(address indexed collection, address indexed setter, address indexed receiver, uint256 fee);\n\n    //  initialize royalty fee\n    constructor(uint256 _royaltyFeeLimit) {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n    }\n\n    // Update a collection's upper limit of royalty fee\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n\n        emit NewRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal{\n        require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\");\n\n        _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee});\n\n        emit RoyaltyFeeUpdate(collection, setter, receiver, fee);\n    }\n\n    //\n    // function royaltyInfo\n    //  @Description: calculate royalty fee\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {\n        return (\n        _royaltyFeeInfoCollection[collection].receiver,\n        (amount * _royaltyFeeInfoCollection[collection].fee) / 10000\n        );\n    }\n    /*Check collection information*/\n    function royaltyFeeInfoCollection(address collection)\n    external\n    view\n    override\n    returns (\n        address,\n        address,\n        uint256\n    )\n    {\n        return (\n        _royaltyFeeInfoCollection[collection].setter,\n        _royaltyFeeInfoCollection[collection].receiver,\n        _royaltyFeeInfoCollection[collection].fee\n        );\n    }\n\n\n   function updateRoyaltyInfoForCollectionIfSetter(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        address currentSetter = _royaltyFeeInfoCollection[collection].setter;\n        require(msg.sender == currentSetter, \"Setter: Not the setter\");\n\n        updateRoyaltyInfoForCollection(collection, setter, receiver, fee);\n    }\n\n\n        //\n    // function checkForCollectionSetter\n    //  @Description: Confirm royalty fee seeting information\n    //  @param address\n    //  @return external Return editor, regarless of admin or owner\n    //\n    function checkForCollectionSetter(address collection) external view returns (address, uint8) {\n        address currentSetter = _royaltyFeeInfoCollection[collection].setter;\n        if (currentSetter != address(0)){\n            return (currentSetter,0);\n        }\n        try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {\n            if (interfaceSupport) {\n                return (address(0), 1);\n            }\n        } catch {}\n\n        try IOwnable(collection).owner() returns (address setter) {\n            return (setter, 2);\n        } catch {\n            try IOwnable(collection).admin() returns (address setter) {\n                return (setter, 3);\n            } catch {\n                return (address(0), 4);\n            }\n        }\n    }\n\n    //\n    // function updateRoyaltyInfoForCollectionIfAdmin\n    //  @Description: Update royalty info if this is the admin of the collection\n    //  @param address collection address\n    //  @param address  Editor address\n    //  @param address  Wallet address receiving royalty fee\n    //  @param uint256 royalty fee 500=5%\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        //https://eips.ethereum.org/EIPS/eip-2981\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).admin(), \" Not the admin\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // tion updateRoyaltyInfoForCollectionIfOwner\n    //  @Description: Update royalty info if this is the owner of the collection\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function updateRoyaltyInfoForCollectionIfOwner(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external {\n        require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\");\n        require(msg.sender == IOwnable(collection).owner(), \" Not the owner\");\n\n        _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee);\n    }\n\n    //\n    // function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin\n    //  @Description: Update royalty fee information\n    //  @param address\n    //  @param address\n    //  @param address\n    //  @param uint256\n    //  @return internal\n    //\n    function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) internal {\n        address currentSetter = _royaltyFeeInfoCollection[collection].setter;\n        require(currentSetter == address(0), \"Already set\");\n\n        require(\n            (IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||\n        IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155)),\n            \" Not Set of ERC721/ERC1155\"\n        );\n\n        updateRoyaltyInfoForCollection(collection, setter, receiver, fee);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"RoyaltyFeeRegistry_flat.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RoyaltyFeeRegistry_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"RoyaltyFeeRegistry_flat.sol\":{\"keccak256\":\"0x6322cb2d7b9533b87d8113b13596e21da6f88e77a70ef73d53ca37fa09aef653\",\"urls\":[\"bzz-raw://d12a9770c3d11db85edf819c3f6c623bd7343f1a2e039b1b35b07828b66ae2b8\",\"dweb:/ipfs/QmYmGMTi88QHYSvp9LxQ8L5QGkxnaBmXAUB4mxRubxfwJC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RoyaltyFeeRegistry_flat.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"RoyaltyFeeRegistry_flat.sol\":{\"keccak256\":\"0x6322cb2d7b9533b87d8113b13596e21da6f88e77a70ef73d53ca37fa09aef653\",\"urls\":[\"bzz-raw://d12a9770c3d11db85edf819c3f6c623bd7343f1a2e039b1b35b07828b66ae2b8\",\"dweb:/ipfs/QmYmGMTi88QHYSvp9LxQ8L5QGkxnaBmXAUB4mxRubxfwJC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"admin()": "f851a440",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RoyaltyFeeRegistry_flat.sol\":\"IOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"RoyaltyFeeRegistry_flat.sol\":{\"keccak256\":\"0x6322cb2d7b9533b87d8113b13596e21da6f88e77a70ef73d53ca37fa09aef653\",\"urls\":[\"bzz-raw://d12a9770c3d11db85edf819c3f6c623bd7343f1a2e039b1b35b07828b66ae2b8\",\"dweb:/ipfs/QmYmGMTi88QHYSvp9LxQ8L5QGkxnaBmXAUB4mxRubxfwJC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RoyaltyFeeRegistry_flat.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"RoyaltyFeeRegistry_flat.sol\":{\"keccak256\":\"0x6322cb2d7b9533b87d8113b13596e21da6f88e77a70ef73d53ca37fa09aef653\",\"urls\":[\"bzz-raw://d12a9770c3d11db85edf819c3f6c623bd7343f1a2e039b1b35b07828b66ae2b8\",\"dweb:/ipfs/QmYmGMTi88QHYSvp9LxQ8L5QGkxnaBmXAUB4mxRubxfwJC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RoyaltyFeeRegistry_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"RoyaltyFeeRegistry_flat.sol\":{\"keccak256\":\"0x6322cb2d7b9533b87d8113b13596e21da6f88e77a70ef73d53ca37fa09aef653\",\"urls\":[\"bzz-raw://d12a9770c3d11db85edf819c3f6c623bd7343f1a2e039b1b35b07828b66ae2b8\",\"dweb:/ipfs/QmYmGMTi88QHYSvp9LxQ8L5QGkxnaBmXAUB4mxRubxfwJC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "RoyaltyFeeRegistry_flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "NewRoyaltyFeeLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "RoyaltyFeeUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC2981",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INTERFACE_ID_ERC721",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkForCollectionSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollectionIfSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RoyaltyFeeRegistry_flat.sol\":5244:11734  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"RoyaltyFeeRegistry_flat.sol\":6081:6285  constructor(uint256 _royaltyFeeLimit) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"RoyaltyFeeRegistry_flat.sol\":2553:2585  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"RoyaltyFeeRegistry_flat.sol\":1500:1510  msg.sender */\n  caller\n    /* \"RoyaltyFeeRegistry_flat.sol\":2553:2571  _transferOwnership */\n  tag_10\n    /* \"RoyaltyFeeRegistry_flat.sol\":2553:2585  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"RoyaltyFeeRegistry_flat.sol\":6199:6203  9500 */\n  0x251c\n    /* \"RoyaltyFeeRegistry_flat.sol\":6179:6195  _royaltyFeeLimit */\n  dup2\n    /* \"RoyaltyFeeRegistry_flat.sol\":6179:6203  _royaltyFeeLimit <= 9500 */\n  gt\n  iszero\n    /* \"RoyaltyFeeRegistry_flat.sol\":6171:6234  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":405:407   */\n  0x20\n    /* \"RoyaltyFeeRegistry_flat.sol\":6171:6234  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":387:408   */\n  mstore\n    /* \"#utility.yul\":444:446   */\n  0x1a\n    /* \"#utility.yul\":424:442   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":417:447   */\n  mstore\n    /* \"#utility.yul\":483:511   */\n  0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n    /* \"#utility.yul\":463:481   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":456:512   */\n  mstore\n    /* \"#utility.yul\":529:547   */\n  0x64\n  add\n    /* \"RoyaltyFeeRegistry_flat.sol\":6171:6234  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"RoyaltyFeeRegistry_flat.sol\":6244:6259  royaltyFeeLimit */\n  0x01\n    /* \"RoyaltyFeeRegistry_flat.sol\":6244:6278  royaltyFeeLimit = _royaltyFeeLimit */\n  sstore\n    /* \"RoyaltyFeeRegistry_flat.sol\":5244:11734  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  jump(tag_18)\n    /* \"RoyaltyFeeRegistry_flat.sol\":4050:4237  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"RoyaltyFeeRegistry_flat.sol\":4123:4139  address oldOwner */\n  0x00\n    /* \"RoyaltyFeeRegistry_flat.sol\":4142:4148  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"RoyaltyFeeRegistry_flat.sol\":4158:4175  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"RoyaltyFeeRegistry_flat.sol\":4190:4230  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"RoyaltyFeeRegistry_flat.sol\":4142:4148  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"RoyaltyFeeRegistry_flat.sol\":4190:4230  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"RoyaltyFeeRegistry_flat.sol\":4123:4139  address oldOwner */\n  swap1\n    /* \"RoyaltyFeeRegistry_flat.sol\":4190:4230  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"RoyaltyFeeRegistry_flat.sol\":4113:4237  {... */\n  pop\n    /* \"RoyaltyFeeRegistry_flat.sol\":4050:4237  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:553   */\ntag_18:\n    /* \"RoyaltyFeeRegistry_flat.sol\":5244:11734  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RoyaltyFeeRegistry_flat.sol\":5244:11734  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xab016670\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbc6bc0cd\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbc6bc0cd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc54e5497\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe31ef91c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0xab016670\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb060dd86\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb9223c9d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x3755fa80\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x3755fa80\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4fb7d3f9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x275da5ef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2782d6c7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x33bf6156\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RoyaltyFeeRegistry_flat.sol\":7900:8295  function updateRoyaltyInfoForCollectionIfSetter(... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"RoyaltyFeeRegistry_flat.sol\":7227:7494  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1300:1342   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1288:1343   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":1270:1344   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1375:1377   */\n      0x20\n        /* \"#utility.yul\":1360:1378   */\n      dup4\n      add\n        /* \"#utility.yul\":1353:1387   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1243:1261   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":7227:7494  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RoyaltyFeeRegistry_flat.sol\":5526:5582  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n    tag_5:\n      tag_30\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1572:1638   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1560:1639   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1542:1640   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1530:1532   */\n      0x20\n        /* \"#utility.yul\":1515:1533   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":5526:5582  bytes4 public constant INTERFACE_ID_ERC1155 = 0xd9b67a26 */\n      tag_28\n        /* \"#utility.yul\":1398:1646   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":10433:10874  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_6:\n      tag_20\n      tag_35\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"RoyaltyFeeRegistry_flat.sol\":5727:5757  uint256 public royaltyFeeLimit */\n    tag_7:\n      tag_37\n      sload(0x01)\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":5727:5757  uint256 public royaltyFeeLimit */\n      tag_28\n        /* \"#utility.yul\":1651:1828   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":3448:3549  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_20\n      tag_42\n      jump\t// in\n        /* \"RoyaltyFeeRegistry_flat.sol\":2818:2903  function owner() public view virtual returns (address) {... */\n    tag_9:\n        /* \"RoyaltyFeeRegistry_flat.sol\":2864:2871  address */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":2890:2896  _owner */\n      sload\n        /* \"RoyaltyFeeRegistry_flat.sol\":2818:2903  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"RoyaltyFeeRegistry_flat.sol\":2890:2896  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1979:2053   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1967:1969   */\n      0x20\n        /* \"#utility.yul\":1952:1970   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":2818:2903  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":1833:2059   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":9674:10165  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_10:\n      tag_20\n      tag_48\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"RoyaltyFeeRegistry_flat.sol\":5616:5672  bytes4 public constant INTERFACE_ID_ERC2981 = 0x2a55205a */\n    tag_11:\n      tag_30\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":6347:6650  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_12:\n      tag_20\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"RoyaltyFeeRegistry_flat.sol\":5437:5492  bytes4 public constant INTERFACE_ID_ERC721 = 0x80ac58cd */\n    tag_13:\n      tag_30\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      dup2\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_14:\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2701:2743   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2689:2744   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2671:2745   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2793:2797   */\n      0xff\n        /* \"#utility.yul\":2781:2798   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2776:2778   */\n      0x20\n        /* \"#utility.yul\":2761:2779   */\n      dup4\n      add\n        /* \"#utility.yul\":2754:2799   */\n      mstore\n        /* \"#utility.yul\":2644:2662   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      tag_28\n        /* \"#utility.yul\":2501:2805   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":7536:7894  function royaltyFeeInfoCollection(address collection)... */\n    tag_15:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_67:\n        /* \"RoyaltyFeeRegistry_flat.sol\":7726:7763  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":7647:7654  address */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":7726:7763  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":7726:7751  _royaltyFeeInfoCollection */\n      0x02\n        /* \"RoyaltyFeeRegistry_flat.sol\":7726:7763  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"RoyaltyFeeRegistry_flat.sol\":7726:7770  _royaltyFeeInfoCollection[collection].setter */\n      dup1\n      sload\n      0x01\n        /* \"RoyaltyFeeRegistry_flat.sol\":7780:7826  _royaltyFeeInfoCollection[collection].receiver */\n      dup3\n      add\n      sload\n        /* \"RoyaltyFeeRegistry_flat.sol\":7836:7877  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      swap1\n      swap3\n      add\n      sload\n        /* \"RoyaltyFeeRegistry_flat.sol\":7726:7770  _royaltyFeeInfoCollection[collection].setter */\n      swap2\n      dup4\n      and\n      swap4\n        /* \"RoyaltyFeeRegistry_flat.sol\":7780:7826  _royaltyFeeInfoCollection[collection].receiver */\n      swap3\n      and\n      swap2\n        /* \"RoyaltyFeeRegistry_flat.sol\":7536:7894  function royaltyFeeInfoCollection(address collection)... */\n      jump\n    tag_66:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3022:3064   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3091:3106   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":3073:3107   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3143:3158   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3138:3140   */\n      0x20\n        /* \"#utility.yul\":3123:3141   */\n      dup5\n      add\n        /* \"#utility.yul\":3116:3159   */\n      mstore\n        /* \"#utility.yul\":3175:3193   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3168:3202   */\n      mstore\n        /* \"#utility.yul\":3000:3002   */\n      0x60\n        /* \"#utility.yul\":2985:3003   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":7536:7894  function royaltyFeeInfoCollection(address collection)... */\n      tag_28\n        /* \"#utility.yul\":2810:3208   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":3698:3896  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_20\n      tag_72\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"RoyaltyFeeRegistry_flat.sol\":7900:8295  function updateRoyaltyInfoForCollectionIfSetter(... */\n    tag_23:\n        /* \"RoyaltyFeeRegistry_flat.sol\":8096:8133  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":8072:8093  address currentSetter */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":8096:8133  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":8096:8121  _royaltyFeeInfoCollection */\n      0x02\n        /* \"RoyaltyFeeRegistry_flat.sol\":8096:8133  _royaltyFeeInfoCollection[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"RoyaltyFeeRegistry_flat.sol\":8096:8140  _royaltyFeeInfoCollection[collection].setter */\n      sload\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":8158:8168  msg.sender */\n      caller\n        /* \"RoyaltyFeeRegistry_flat.sol\":8158:8185  msg.sender == currentSetter */\n      dup2\n      eq\n        /* \"RoyaltyFeeRegistry_flat.sol\":8150:8212  require(msg.sender == currentSetter, \"Setter: Not the setter\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3415:3417   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":8150:8212  require(msg.sender == currentSetter, \"Setter: Not the setter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3397:3418   */\n      mstore\n        /* \"#utility.yul\":3454:3456   */\n      0x16\n        /* \"#utility.yul\":3434:3452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3427:3457   */\n      mstore\n        /* \"#utility.yul\":3493:3517   */\n      0x5365747465723a204e6f74207468652073657474657200000000000000000000\n        /* \"#utility.yul\":3473:3491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3466:3518   */\n      mstore\n        /* \"#utility.yul\":3535:3553   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":8150:8212  require(msg.sender == currentSetter, \"Setter: Not the setter\") */\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"RoyaltyFeeRegistry_flat.sol\":8223:8288  updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      tag_78\n        /* \"RoyaltyFeeRegistry_flat.sol\":8254:8264  collection */\n      dup6\n        /* \"RoyaltyFeeRegistry_flat.sol\":8266:8272  setter */\n      dup6\n        /* \"RoyaltyFeeRegistry_flat.sol\":8274:8282  receiver */\n      dup6\n        /* \"RoyaltyFeeRegistry_flat.sol\":8284:8287  fee */\n      dup6\n        /* \"RoyaltyFeeRegistry_flat.sol\":8223:8253  updateRoyaltyInfoForCollection */\n      tag_79\n        /* \"RoyaltyFeeRegistry_flat.sol\":8223:8288  updateRoyaltyInfoForCollection(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_78:\n        /* \"RoyaltyFeeRegistry_flat.sol\":8062:8295  {... */\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":7900:8295  function updateRoyaltyInfoForCollectionIfSetter(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":7227:7494  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_27:\n        /* \"RoyaltyFeeRegistry_flat.sol\":7361:7398  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup4\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":7316:7323  address */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":7361:7398  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":7361:7386  _royaltyFeeInfoCollection */\n      0x02\n        /* \"RoyaltyFeeRegistry_flat.sol\":7361:7398  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"RoyaltyFeeRegistry_flat.sol\":7361:7407  _royaltyFeeInfoCollection[collection].receiver */\n      0x01\n      dup2\n      add\n      sload\n        /* \"RoyaltyFeeRegistry_flat.sol\":7427:7468  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      add\n      sload\n        /* \"RoyaltyFeeRegistry_flat.sol\":7316:7323  address */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"RoyaltyFeeRegistry_flat.sol\":7361:7407  _royaltyFeeInfoCollection[collection].receiver */\n      swap2\n      and\n      swap1\n        /* \"RoyaltyFeeRegistry_flat.sol\":7472:7477  10000 */\n      0x2710\n      swap1\n        /* \"RoyaltyFeeRegistry_flat.sol\":7418:7468  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_81\n      swap1\n        /* \"RoyaltyFeeRegistry_flat.sol\":7418:7424  amount */\n      dup7\n        /* \"RoyaltyFeeRegistry_flat.sol\":7418:7468  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"RoyaltyFeeRegistry_flat.sol\":7417:7477  (amount * _royaltyFeeInfoCollection[collection].fee) / 10000 */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"RoyaltyFeeRegistry_flat.sol\":7344:7487  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":7227:7494  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":10433:10874  function updateRoyaltyInfoForCollectionIfOwner(... */\n    tag_36:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10613:10672  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":10651:10671  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"RoyaltyFeeRegistry_flat.sol\":10613:10672  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1542:1640   */\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":10613:10650  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":1515:1533   */\n      0x24\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":10613:10672  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10612:10672  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"RoyaltyFeeRegistry_flat.sol\":10604:10697  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4654:4656   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":10604:10697  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4636:4657   */\n      mstore\n        /* \"#utility.yul\":4693:4695   */\n      0x14\n        /* \"#utility.yul\":4673:4691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4666:4696   */\n      mstore\n        /* \"#utility.yul\":4732:4754   */\n      0x204d757374206e6f742062652045524332393831000000000000000000000000\n        /* \"#utility.yul\":4712:4730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4705:4755   */\n      mstore\n        /* \"#utility.yul\":4772:4790   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":10604:10697  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_76\n        /* \"#utility.yul\":4452:4796   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":10604:10697  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_91:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10738:10748  collection */\n      dup4\n        /* \"RoyaltyFeeRegistry_flat.sol\":10729:10755  IOwnable(collection).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"RoyaltyFeeRegistry_flat.sol\":10729:10757  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10715:10757  msg.sender == IOwnable(collection).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":10715:10725  msg.sender */\n      caller\n        /* \"RoyaltyFeeRegistry_flat.sol\":10715:10757  msg.sender == IOwnable(collection).owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"RoyaltyFeeRegistry_flat.sol\":10707:10776  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5259:5261   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":10707:10776  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5241:5262   */\n      mstore\n        /* \"#utility.yul\":5298:5300   */\n      0x0e\n        /* \"#utility.yul\":5278:5296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5271:5301   */\n      mstore\n        /* \"#utility.yul\":5337:5353   */\n      0x204e6f7420746865206f776e6572000000000000000000000000000000000000\n        /* \"#utility.yul\":5317:5335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5310:5354   */\n      mstore\n        /* \"#utility.yul\":5371:5389   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":10707:10776  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n      tag_76\n        /* \"#utility.yul\":5057:5395   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":10707:10776  require(msg.sender == IOwnable(collection).owner(), \" Not the owner\") */\n    tag_98:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10787:10867  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      tag_101\n        /* \"RoyaltyFeeRegistry_flat.sol\":10833:10843  collection */\n      dup5\n        /* \"RoyaltyFeeRegistry_flat.sol\":10845:10851  setter */\n      dup5\n        /* \"RoyaltyFeeRegistry_flat.sol\":10853:10861  receiver */\n      dup5\n        /* \"RoyaltyFeeRegistry_flat.sol\":10863:10866  fee */\n      dup5\n        /* \"RoyaltyFeeRegistry_flat.sol\":10787:10832  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin */\n      tag_102\n        /* \"RoyaltyFeeRegistry_flat.sol\":10787:10867  _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(collection, setter, receiver, fee) */\n      jump\t// in\n    tag_101:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10433:10874  function updateRoyaltyInfoForCollectionIfOwner(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":3448:3549  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2724  _checkOwner() */\n      tag_104\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2722  _checkOwner */\n      tag_105\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2724  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"RoyaltyFeeRegistry_flat.sol\":3512:3542  _transferOwnership(address(0)) */\n      tag_107\n        /* \"RoyaltyFeeRegistry_flat.sol\":3539:3540  0 */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":3512:3530  _transferOwnership */\n      tag_108\n        /* \"RoyaltyFeeRegistry_flat.sol\":3512:3542  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_107:\n        /* \"RoyaltyFeeRegistry_flat.sol\":3448:3549  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":9674:10165  function updateRoyaltyInfoForCollectionIfAdmin(... */\n    tag_49:\n        /* \"RoyaltyFeeRegistry_flat.sol\":9904:9963  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":9942:9962  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"RoyaltyFeeRegistry_flat.sol\":9904:9963  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1542:1640   */\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":9904:9941  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":1515:1533   */\n      0x24\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":9904:9963  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_114:\n        /* \"RoyaltyFeeRegistry_flat.sol\":9903:9963  !IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      iszero\n        /* \"RoyaltyFeeRegistry_flat.sol\":9895:9988  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4654:4656   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":9895:9988  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4636:4657   */\n      mstore\n        /* \"#utility.yul\":4693:4695   */\n      0x14\n        /* \"#utility.yul\":4673:4691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4666:4696   */\n      mstore\n        /* \"#utility.yul\":4732:4754   */\n      0x204d757374206e6f742062652045524332393831000000000000000000000000\n        /* \"#utility.yul\":4712:4730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4705:4755   */\n      mstore\n        /* \"#utility.yul\":4772:4790   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":9895:9988  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n      tag_76\n        /* \"#utility.yul\":4452:4796   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":9895:9988  require(!IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981), \" Must not be ERC2981\") */\n    tag_115:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10029:10039  collection */\n      dup4\n        /* \"RoyaltyFeeRegistry_flat.sol\":10020:10046  IOwnable(collection).admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf851a440\n        /* \"RoyaltyFeeRegistry_flat.sol\":10020:10048  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_119:\n        /* \"RoyaltyFeeRegistry_flat.sol\":10006:10048  msg.sender == IOwnable(collection).admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":10006:10016  msg.sender */\n      caller\n        /* \"RoyaltyFeeRegistry_flat.sol\":10006:10048  msg.sender == IOwnable(collection).admin() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"RoyaltyFeeRegistry_flat.sol\":9998:10067  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5602:5604   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":9998:10067  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5584:5605   */\n      mstore\n        /* \"#utility.yul\":5641:5643   */\n      0x0e\n        /* \"#utility.yul\":5621:5639   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5614:5644   */\n      mstore\n        /* \"#utility.yul\":5680:5696   */\n      0x204e6f74207468652061646d696e000000000000000000000000000000000000\n        /* \"#utility.yul\":5660:5678   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5653:5697   */\n      mstore\n        /* \"#utility.yul\":5714:5732   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":9998:10067  require(msg.sender == IOwnable(collection).admin(), \" Not the admin\") */\n      tag_76\n        /* \"#utility.yul\":5400:5738   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":6347:6650  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_56:\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2724  _checkOwner() */\n      tag_125\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2722  _checkOwner */\n      tag_105\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2724  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"RoyaltyFeeRegistry_flat.sol\":6512:6516  9500 */\n      0x251c\n        /* \"RoyaltyFeeRegistry_flat.sol\":6492:6508  _royaltyFeeLimit */\n      dup2\n        /* \"RoyaltyFeeRegistry_flat.sol\":6492:6516  _royaltyFeeLimit <= 9500 */\n      gt\n      iszero\n        /* \"RoyaltyFeeRegistry_flat.sol\":6484:6547  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5945:5947   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":6484:6547  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5927:5948   */\n      mstore\n        /* \"#utility.yul\":5984:5986   */\n      0x1a\n        /* \"#utility.yul\":5964:5982   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5957:5987   */\n      mstore\n        /* \"#utility.yul\":6023:6051   */\n      0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n        /* \"#utility.yul\":6003:6021   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5996:6052   */\n      mstore\n        /* \"#utility.yul\":6069:6087   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":6484:6547  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_76\n        /* \"#utility.yul\":5743:6093   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":6484:6547  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n    tag_127:\n        /* \"RoyaltyFeeRegistry_flat.sol\":6557:6572  royaltyFeeLimit */\n      0x01\n        /* \"RoyaltyFeeRegistry_flat.sol\":6557:6591  royaltyFeeLimit = _royaltyFeeLimit */\n      dup2\n      swap1\n      sstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":6607:6643  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":1797:1822   */\n      dup2\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":6607:6643  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      0x2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256\n      swap1\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":6607:6643  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"RoyaltyFeeRegistry_flat.sol\":6347:6650  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n    tag_63:\n        /* \"RoyaltyFeeRegistry_flat.sol\":8641:8678  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup3\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":8591:8598  address */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":8641:8678  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":8641:8666  _royaltyFeeInfoCollection */\n      0x02\n        /* \"RoyaltyFeeRegistry_flat.sol\":8641:8678  _royaltyFeeInfoCollection[collection] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"RoyaltyFeeRegistry_flat.sol\":8641:8685  _royaltyFeeInfoCollection[collection].setter */\n      sload\n        /* \"RoyaltyFeeRegistry_flat.sol\":8591:8598  address */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"RoyaltyFeeRegistry_flat.sol\":8641:8685  _royaltyFeeInfoCollection[collection].setter */\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":8699:8726  currentSetter != address(0) */\n      dup1\n      iszero\n        /* \"RoyaltyFeeRegistry_flat.sol\":8695:8776  if (currentSetter != address(0)){... */\n      tag_132\n      jumpi\n        /* \"RoyaltyFeeRegistry_flat.sol\":8749:8762  currentSetter */\n      swap4\n        /* \"RoyaltyFeeRegistry_flat.sol\":8763:8764  0 */\n      0x00\n      swap4\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":8695:8776  if (currentSetter != address(0)){... */\n    tag_132:\n        /* \"RoyaltyFeeRegistry_flat.sol\":8789:8848  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":8827:8847  INTERFACE_ID_ERC2981 */\n      0x2a55205a00000000000000000000000000000000000000000000000000000000\n        /* \"RoyaltyFeeRegistry_flat.sol\":8789:8848  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1542:1640   */\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":8789:8826  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":1515:1533   */\n      0x24\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":8789:8848  IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_135\n      swap2\n      dup2\n      add\n      swap1\n      tag_90\n      jump\t// in\n    tag_135:\n      0x01\n    tag_134:\n        /* \"RoyaltyFeeRegistry_flat.sol\":8785:8991  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"RoyaltyFeeRegistry_flat.sol\":8899:8915  interfaceSupport */\n      dup1\n        /* \"RoyaltyFeeRegistry_flat.sol\":8895:8972  if (interfaceSupport) {... */\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":8951:8952  0 */\n      0x00\n      swap5\n        /* \"RoyaltyFeeRegistry_flat.sol\":8955:8956  1 */\n      0x01\n      swap5\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":8895:8972  if (interfaceSupport) {... */\n    tag_141:\n        /* \"RoyaltyFeeRegistry_flat.sol\":8849:8982  returns (bool interfaceSupport) {... */\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":8785:8991  try IERC165(collection).supportsInterface(INTERFACE_ID_ERC2981) returns (bool interfaceSupport) {... */\n    tag_140:\n        /* \"RoyaltyFeeRegistry_flat.sol\":9014:9024  collection */\n      dup4\n        /* \"RoyaltyFeeRegistry_flat.sol\":9005:9031  IOwnable(collection).owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8da5cb5b\n        /* \"RoyaltyFeeRegistry_flat.sol\":9005:9033  IOwnable(collection).owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_143\n      swap2\n      dup2\n      add\n      swap1\n      tag_97\n      jump\t// in\n    tag_143:\n      0x01\n    tag_142:\n        /* \"RoyaltyFeeRegistry_flat.sol\":9001:9304  try IOwnable(collection).owner() returns (address setter) {... */\n      tag_144\n      jumpi\n        /* \"RoyaltyFeeRegistry_flat.sol\":9136:9146  collection */\n      dup4\n        /* \"RoyaltyFeeRegistry_flat.sol\":9127:9153  IOwnable(collection).admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf851a440\n        /* \"RoyaltyFeeRegistry_flat.sol\":9127:9155  IOwnable(collection).admin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_148\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_149\n      swap2\n      dup2\n      add\n      swap1\n      tag_97\n      jump\t// in\n    tag_149:\n      0x01\n    tag_148:\n        /* \"RoyaltyFeeRegistry_flat.sol\":9123:9294  try IOwnable(collection).admin() returns (address setter) {... */\n      tag_150\n      jumpi\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":9273:9274  0 */\n      0x00\n      swap4\n        /* \"RoyaltyFeeRegistry_flat.sol\":9277:9278  4 */\n      0x04\n      swap4\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":9123:9294  try IOwnable(collection).admin() returns (address setter) {... */\n    tag_150:\n        /* \"RoyaltyFeeRegistry_flat.sol\":9207:9213  setter */\n      swap5\n        /* \"RoyaltyFeeRegistry_flat.sol\":9215:9216  3 */\n      0x03\n      swap5\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":9001:9304  try IOwnable(collection).owner() returns (address setter) {... */\n    tag_144:\n        /* \"RoyaltyFeeRegistry_flat.sol\":9081:9087  setter */\n      swap5\n        /* \"RoyaltyFeeRegistry_flat.sol\":9089:9090  2 */\n      0x02\n      swap5\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":8514:9310  function checkForCollectionSetter(address collection) external view returns (address, uint8) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":3698:3896  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_73:\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2724  _checkOwner() */\n      tag_158\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2722  _checkOwner */\n      tag_105\n        /* \"RoyaltyFeeRegistry_flat.sol\":2711:2724  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"RoyaltyFeeRegistry_flat.sol\":3786:3808  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":3778:3851  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6300:6302   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":3778:3851  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6282:6303   */\n      mstore\n        /* \"#utility.yul\":6339:6341   */\n      0x26\n        /* \"#utility.yul\":6319:6337   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6312:6342   */\n      mstore\n        /* \"#utility.yul\":6378:6412   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6358:6376   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6351:6413   */\n      mstore\n        /* \"#utility.yul\":6449:6457   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6429:6447   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6422:6458   */\n      mstore\n        /* \"#utility.yul\":6475:6494   */\n      0x84\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":3778:3851  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_76\n        /* \"#utility.yul\":6098:6500   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":3778:3851  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_160:\n        /* \"RoyaltyFeeRegistry_flat.sol\":3861:3889  _transferOwnership(newOwner) */\n      tag_163\n        /* \"RoyaltyFeeRegistry_flat.sol\":3880:3888  newOwner */\n      dup2\n        /* \"RoyaltyFeeRegistry_flat.sol\":3861:3879  _transferOwnership */\n      tag_108\n        /* \"RoyaltyFeeRegistry_flat.sol\":3861:3889  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_163:\n        /* \"RoyaltyFeeRegistry_flat.sol\":3698:3896  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":6656:7064  function updateRoyaltyInfoForCollection(... */\n    tag_79:\n        /* \"RoyaltyFeeRegistry_flat.sol\":6834:6849  royaltyFeeLimit */\n      sload(0x01)\n        /* \"RoyaltyFeeRegistry_flat.sol\":6827:6830  fee */\n      dup2\n        /* \"RoyaltyFeeRegistry_flat.sol\":6827:6849  fee <= royaltyFeeLimit */\n      gt\n      iszero\n        /* \"RoyaltyFeeRegistry_flat.sol\":6819:6884  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6707:6709   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":6819:6884  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6689:6710   */\n      mstore\n        /* \"#utility.yul\":6746:6748   */\n      0x1e\n        /* \"#utility.yul\":6726:6744   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6719:6749   */\n      mstore\n        /* \"#utility.yul\":6785:6817   */\n      0x52656769737472793a20526f79616c74792066656520746f6f20686967680000\n        /* \"#utility.yul\":6765:6783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6758:6818   */\n      mstore\n        /* \"#utility.yul\":6835:6853   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":6819:6884  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_76\n        /* \"#utility.yul\":6505:6859   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":6819:6884  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n    tag_165:\n        /* \"RoyaltyFeeRegistry_flat.sol\":6935:6990  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      dup6\n      dup3\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup9\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":6895:6932  _royaltyFeeInfoCollection[collection] */\n      dup12\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":6895:6920  _royaltyFeeInfoCollection */\n      0x02\n        /* \"RoyaltyFeeRegistry_flat.sol\":6895:6932  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"RoyaltyFeeRegistry_flat.sol\":6895:6990  _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap2\n      dup3\n      and\n      or\n      dup11\n      sstore\n      swap4\n      mload\n      0x01\n      dup11\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap10\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap7\n      sstore\n      mload\n      swap6\n      add\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":7006:7057  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      swap4\n      mload\n        /* \"#utility.yul\":1797:1822   */\n      dup6\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":6935:6990  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap1\n      swap3\n        /* \"RoyaltyFeeRegistry_flat.sol\":7006:7057  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      0xd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64\n      swap2\n        /* \"#utility.yul\":1770:1788   */\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":7006:7057  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"RoyaltyFeeRegistry_flat.sol\":6656:7064  function updateRoyaltyInfoForCollection(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RoyaltyFeeRegistry_flat.sol\":11126:11732  function _updateRoyaltyInfoForCollectionIfOwnerOrAdmin(... */\n    tag_102:\n        /* \"RoyaltyFeeRegistry_flat.sol\":11329:11366  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup6\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":11305:11326  address currentSetter */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":11329:11366  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":11329:11354  _royaltyFeeInfoCollection */\n      0x02\n        /* \"RoyaltyFeeRegistry_flat.sol\":11329:11366  _royaltyFeeInfoCollection[collection] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"RoyaltyFeeRegistry_flat.sol\":11329:11373  _royaltyFeeInfoCollection[collection].setter */\n      sload\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":11391:11418  currentSetter == address(0) */\n      dup1\n      iszero\n        /* \"RoyaltyFeeRegistry_flat.sol\":11383:11434  require(currentSetter == address(0), \"Already set\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7066:7068   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":11383:11434  require(currentSetter == address(0), \"Already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7048:7069   */\n      mstore\n        /* \"#utility.yul\":7105:7107   */\n      0x0b\n        /* \"#utility.yul\":7085:7103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7078:7108   */\n      mstore\n        /* \"#utility.yul\":7144:7157   */\n      0x416c726561647920736574000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7124:7142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7117:7158   */\n      mstore\n        /* \"#utility.yul\":7175:7193   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":11383:11434  require(currentSetter == address(0), \"Already set\") */\n      tag_76\n        /* \"#utility.yul\":6864:7199   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":11383:11434  require(currentSetter == address(0), \"Already set\") */\n    tag_170:\n        /* \"RoyaltyFeeRegistry_flat.sol\":11467:11525  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":11505:11524  INTERFACE_ID_ERC721 */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"RoyaltyFeeRegistry_flat.sol\":11467:11525  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1542:1640   */\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":11467:11504  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":1515:1533   */\n      0x24\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":11467:11525  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_176:\n        /* \"RoyaltyFeeRegistry_flat.sol\":11467:11596  IERC165(collection).supportsInterface(INTERFACE_ID_ERC721) ||... */\n      dup1\n      tag_181\n      jumpi\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":11537:11596  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      mload(0x40)\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":11575:11595  INTERFACE_ID_ERC1155 */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"RoyaltyFeeRegistry_flat.sol\":11537:11596  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1542:1640   */\n      mstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":11537:11574  IERC165(collection).supportsInterface */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":1515:1533   */\n      0x24\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":11537:11596  IERC165(collection).supportsInterface(INTERFACE_ID_ERC1155) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_181:\n        /* \"RoyaltyFeeRegistry_flat.sol\":11445:11649  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7406:7408   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":11445:11649  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7388:7409   */\n      mstore\n        /* \"#utility.yul\":7445:7447   */\n      0x1a\n        /* \"#utility.yul\":7425:7443   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7418:7448   */\n      mstore\n        /* \"#utility.yul\":7484:7512   */\n      0x204e6f7420536574206f66204552433732312f45524331313535000000000000\n        /* \"#utility.yul\":7464:7482   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7457:7513   */\n      mstore\n        /* \"#utility.yul\":7530:7548   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":11445:11649  require(... */\n      tag_76\n        /* \"#utility.yul\":7204:7554   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":2976:3106  function _checkOwner() internal view virtual {... */\n    tag_105:\n        /* \"RoyaltyFeeRegistry_flat.sol\":2864:2871  address */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":2890:2896  _owner */\n      sload\n        /* \"RoyaltyFeeRegistry_flat.sol\":3039:3062  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"RoyaltyFeeRegistry_flat.sol\":2890:2896  _owner */\n      and\n        /* \"RoyaltyFeeRegistry_flat.sol\":1500:1510  msg.sender */\n      caller\n        /* \"RoyaltyFeeRegistry_flat.sol\":3039:3062  owner() == _msgSender() */\n      eq\n        /* \"RoyaltyFeeRegistry_flat.sol\":3031:3099  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7761:7763   */\n      0x20\n        /* \"RoyaltyFeeRegistry_flat.sol\":3031:3099  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7743:7764   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7780:7798   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7773:7803   */\n      mstore\n        /* \"#utility.yul\":7839:7873   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7819:7837   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7812:7874   */\n      mstore\n        /* \"#utility.yul\":7891:7909   */\n      0x64\n      add\n        /* \"RoyaltyFeeRegistry_flat.sol\":3031:3099  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n        /* \"#utility.yul\":7559:7915   */\n      jump\n        /* \"RoyaltyFeeRegistry_flat.sol\":4050:4237  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_108:\n        /* \"RoyaltyFeeRegistry_flat.sol\":4123:4139  address oldOwner */\n      0x00\n        /* \"RoyaltyFeeRegistry_flat.sol\":4142:4148  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"RoyaltyFeeRegistry_flat.sol\":4158:4175  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"RoyaltyFeeRegistry_flat.sol\":4190:4230  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"RoyaltyFeeRegistry_flat.sol\":4142:4148  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"RoyaltyFeeRegistry_flat.sol\":4190:4230  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"RoyaltyFeeRegistry_flat.sol\":4123:4139  address oldOwner */\n      swap1\n        /* \"RoyaltyFeeRegistry_flat.sol\":4190:4230  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"RoyaltyFeeRegistry_flat.sol\":4113:4237  {... */\n      pop\n        /* \"RoyaltyFeeRegistry_flat.sol\":4050:4237  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:168   */\n    tag_195:\n        /* \"#utility.yul\":100:142   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":89:143   */\n      and\n        /* \"#utility.yul\":82:87   */\n      dup2\n        /* \"#utility.yul\":79:144   */\n      eq\n        /* \"#utility.yul\":69:162   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":158:159   */\n      0x00\n        /* \"#utility.yul\":155:156   */\n      dup1\n        /* \"#utility.yul\":148:160   */\n      revert\n        /* \"#utility.yul\":173:771   */\n    tag_22:\n        /* \"#utility.yul\":259:265   */\n      0x00\n        /* \"#utility.yul\":267:273   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      0x00\n        /* \"#utility.yul\":283:289   */\n      dup1\n        /* \"#utility.yul\":336:339   */\n      0x80\n        /* \"#utility.yul\":324:333   */\n      dup6\n        /* \"#utility.yul\":315:322   */\n      dup8\n        /* \"#utility.yul\":311:334   */\n      sub\n        /* \"#utility.yul\":307:340   */\n      slt\n        /* \"#utility.yul\":304:357   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":350:351   */\n      dup1\n        /* \"#utility.yul\":343:355   */\n      revert\n        /* \"#utility.yul\":304:357   */\n    tag_200:\n        /* \"#utility.yul\":392:401   */\n      dup5\n        /* \"#utility.yul\":379:402   */\n      calldataload\n        /* \"#utility.yul\":411:442   */\n      tag_201\n        /* \"#utility.yul\":436:441   */\n      dup2\n        /* \"#utility.yul\":411:442   */\n      tag_195\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":461:466   */\n      swap4\n      pop\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":503:521   */\n      dup6\n      add\n        /* \"#utility.yul\":490:522   */\n      calldataload\n        /* \"#utility.yul\":531:564   */\n      tag_202\n        /* \"#utility.yul\":490:522   */\n      dup2\n        /* \"#utility.yul\":531:564   */\n      tag_195\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":583:590   */\n      swap3\n      pop\n        /* \"#utility.yul\":642:644   */\n      0x40\n        /* \"#utility.yul\":627:645   */\n      dup6\n      add\n        /* \"#utility.yul\":614:646   */\n      calldataload\n        /* \"#utility.yul\":655:688   */\n      tag_203\n        /* \"#utility.yul\":614:646   */\n      dup2\n        /* \"#utility.yul\":655:688   */\n      tag_195\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":173:771   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":707:714   */\n      swap3\n      swap4\n        /* \"#utility.yul\":761:763   */\n      0x60\n        /* \"#utility.yul\":746:764   */\n      add\n        /* \"#utility.yul\":733:765   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":173:771   */\n      jump\t// out\n        /* \"#utility.yul\":776:1091   */\n    tag_26:\n        /* \"#utility.yul\":844:850   */\n      0x00\n        /* \"#utility.yul\":852:858   */\n      dup1\n        /* \"#utility.yul\":905:907   */\n      0x40\n        /* \"#utility.yul\":893:902   */\n      dup4\n        /* \"#utility.yul\":884:891   */\n      dup6\n        /* \"#utility.yul\":880:903   */\n      sub\n        /* \"#utility.yul\":876:908   */\n      slt\n        /* \"#utility.yul\":873:925   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":921:922   */\n      0x00\n        /* \"#utility.yul\":918:919   */\n      dup1\n        /* \"#utility.yul\":911:923   */\n      revert\n        /* \"#utility.yul\":873:925   */\n    tag_205:\n        /* \"#utility.yul\":960:969   */\n      dup3\n        /* \"#utility.yul\":947:970   */\n      calldataload\n        /* \"#utility.yul\":979:1010   */\n      tag_206\n        /* \"#utility.yul\":1004:1009   */\n      dup2\n        /* \"#utility.yul\":979:1010   */\n      tag_195\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1029:1034   */\n      swap5\n        /* \"#utility.yul\":1081:1083   */\n      0x20\n        /* \"#utility.yul\":1066:1084   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1053:1085   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":776:1091   */\n      jump\t// out\n        /* \"#utility.yul\":2064:2244   */\n    tag_55:\n        /* \"#utility.yul\":2123:2129   */\n      0x00\n        /* \"#utility.yul\":2176:2178   */\n      0x20\n        /* \"#utility.yul\":2164:2173   */\n      dup3\n        /* \"#utility.yul\":2155:2162   */\n      dup5\n        /* \"#utility.yul\":2151:2174   */\n      sub\n        /* \"#utility.yul\":2147:2179   */\n      slt\n        /* \"#utility.yul\":2144:2196   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":2192:2193   */\n      0x00\n        /* \"#utility.yul\":2189:2190   */\n      dup1\n        /* \"#utility.yul\":2182:2194   */\n      revert\n        /* \"#utility.yul\":2144:2196   */\n    tag_212:\n      pop\n        /* \"#utility.yul\":2215:2238   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2064:2244   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2249:2496   */\n    tag_62:\n        /* \"#utility.yul\":2308:2314   */\n      0x00\n        /* \"#utility.yul\":2361:2363   */\n      0x20\n        /* \"#utility.yul\":2349:2358   */\n      dup3\n        /* \"#utility.yul\":2340:2347   */\n      dup5\n        /* \"#utility.yul\":2336:2359   */\n      sub\n        /* \"#utility.yul\":2332:2364   */\n      slt\n        /* \"#utility.yul\":2329:2381   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2377:2378   */\n      0x00\n        /* \"#utility.yul\":2374:2375   */\n      dup1\n        /* \"#utility.yul\":2367:2379   */\n      revert\n        /* \"#utility.yul\":2329:2381   */\n    tag_214:\n        /* \"#utility.yul\":2416:2425   */\n      dup2\n        /* \"#utility.yul\":2403:2426   */\n      calldataload\n        /* \"#utility.yul\":2435:2466   */\n      tag_215\n        /* \"#utility.yul\":2460:2465   */\n      dup2\n        /* \"#utility.yul\":2435:2466   */\n      tag_195\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2485:2490   */\n      swap4\n        /* \"#utility.yul\":2249:2496   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3564:3886   */\n    tag_82:\n        /* \"#utility.yul\":3637:3646   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3668:3677   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3685:3700   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3679:3701   */\n      dup5\n      eq\n        /* \"#utility.yul\":3665:3702   */\n      or\n        /* \"#utility.yul\":3655:3880   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":3736:3813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3814   */\n      mstore\n        /* \"#utility.yul\":3837:3841   */\n      0x11\n        /* \"#utility.yul\":3834:3835   */\n      0x04\n        /* \"#utility.yul\":3827:3842   */\n      mstore\n        /* \"#utility.yul\":3865:3869   */\n      0x24\n        /* \"#utility.yul\":3862:3863   */\n      0x00\n        /* \"#utility.yul\":3855:3870   */\n      revert\n        /* \"#utility.yul\":3655:3880   */\n    tag_220:\n        /* \"#utility.yul\":3564:3886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3891:4165   */\n    tag_84:\n        /* \"#utility.yul\":3931:3932   */\n      0x00\n        /* \"#utility.yul\":3957:3958   */\n      dup3\n        /* \"#utility.yul\":3947:4136   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":3992:4069   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3989:3990   */\n      0x00\n        /* \"#utility.yul\":3982:4070   */\n      mstore\n        /* \"#utility.yul\":4093:4097   */\n      0x12\n        /* \"#utility.yul\":4090:4091   */\n      0x04\n        /* \"#utility.yul\":4083:4098   */\n      mstore\n        /* \"#utility.yul\":4121:4125   */\n      0x24\n        /* \"#utility.yul\":4118:4119   */\n      0x00\n        /* \"#utility.yul\":4111:4126   */\n      revert\n        /* \"#utility.yul\":3947:4136   */\n    tag_222:\n      pop\n        /* \"#utility.yul\":4150:4159   */\n      div\n      swap1\n        /* \"#utility.yul\":3891:4165   */\n      jump\t// out\n        /* \"#utility.yul\":4170:4447   */\n    tag_90:\n        /* \"#utility.yul\":4237:4243   */\n      0x00\n        /* \"#utility.yul\":4290:4292   */\n      0x20\n        /* \"#utility.yul\":4278:4287   */\n      dup3\n        /* \"#utility.yul\":4269:4276   */\n      dup5\n        /* \"#utility.yul\":4265:4288   */\n      sub\n        /* \"#utility.yul\":4261:4293   */\n      slt\n        /* \"#utility.yul\":4258:4310   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":4306:4307   */\n      0x00\n        /* \"#utility.yul\":4303:4304   */\n      dup1\n        /* \"#utility.yul\":4296:4308   */\n      revert\n        /* \"#utility.yul\":4258:4310   */\n    tag_224:\n        /* \"#utility.yul\":4338:4347   */\n      dup2\n        /* \"#utility.yul\":4332:4348   */\n      mload\n        /* \"#utility.yul\":4391:4396   */\n      dup1\n        /* \"#utility.yul\":4384:4397   */\n      iszero\n        /* \"#utility.yul\":4377:4398   */\n      iszero\n        /* \"#utility.yul\":4370:4375   */\n      dup2\n        /* \"#utility.yul\":4367:4399   */\n      eq\n        /* \"#utility.yul\":4357:4417   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":4413:4414   */\n      0x00\n        /* \"#utility.yul\":4410:4411   */\n      dup1\n        /* \"#utility.yul\":4403:4415   */\n      revert\n        /* \"#utility.yul\":4801:5052   */\n    tag_97:\n        /* \"#utility.yul\":4871:4877   */\n      0x00\n        /* \"#utility.yul\":4924:4926   */\n      0x20\n        /* \"#utility.yul\":4912:4921   */\n      dup3\n        /* \"#utility.yul\":4903:4910   */\n      dup5\n        /* \"#utility.yul\":4899:4922   */\n      sub\n        /* \"#utility.yul\":4895:4927   */\n      slt\n        /* \"#utility.yul\":4892:4944   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":4940:4941   */\n      0x00\n        /* \"#utility.yul\":4937:4938   */\n      dup1\n        /* \"#utility.yul\":4930:4942   */\n      revert\n        /* \"#utility.yul\":4892:4944   */\n    tag_228:\n        /* \"#utility.yul\":4972:4981   */\n      dup2\n        /* \"#utility.yul\":4966:4982   */\n      mload\n        /* \"#utility.yul\":4991:5022   */\n      tag_215\n        /* \"#utility.yul\":5016:5021   */\n      dup2\n        /* \"#utility.yul\":4991:5022   */\n      tag_195\n      jump\t// in\n\n    auxdata: 0xa26469706673582212207bfbddedc0e58b80800d5c07f3f62f6684ce87e4de4397d11d865ae82f3da71b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_248": {
									"entryPoint": null,
									"id": 248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_89": {
									"entryPoint": null,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_177": {
									"entryPoint": 150,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:555:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "387:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:1"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "483:28:1",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "521:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "354:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "368:4:1",
														"type": ""
													}
												],
												"src": "203:350:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516113b13803806113b183398101604081905261002f916100e6565b61003833610096565b61251c81111561008e5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640160405180910390fd5b6001556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f857600080fd5b5051919050565b6112a38061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ab0166701161008c578063bc6bc0cd11610066578063bc6bc0cd14610247578063c54e54971461026e578063e31ef91c146102af578063f2fde38b1461032e57600080fd5b8063ab016670146101fa578063b060dd861461020d578063b9223c9d1461023457600080fd5b80633755fa80116100c85780633755fa80146101a05780634fb7d3f9146101b3578063715018a6146101ca5780638da5cb5b146101d257600080fd5b8063275da5ef146100ef5780632782d6c71461010457806333bf615614610148575b600080fd5b6101026100fd3660046110f5565b610341565b005b610117610112366004611146565b6103ea565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b61016f7fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161013f565b6101026101ae3660046110f5565b610444565b6101bc60015481565b60405190815260200161013f565b61010261066e565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013f565b6101026102083660046110f5565b610682565b61016f7f2a55205a0000000000000000000000000000000000000000000000000000000081565b610102610242366004611172565b61089a565b61016f7f80ac58cd0000000000000000000000000000000000000000000000000000000081565b61028161027c36600461118b565b610949565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260ff90911660208301520161013f565b6102fb6102bd36600461118b565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401529082015260600161013f565b61010261033c36600461118b565b610b99565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260026020526040902054163381146103d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5365747465723a204e6f7420746865207365747465720000000000000000000060448201526064015b60405180910390fd5b6103e385858585610c50565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061042f90866111af565b61043991906111f3565b915091509250929050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f2919061122e565b15610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064016103ce565b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190611250565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f7420746865206f776e657200000000000000000000000000000000000060448201526064016103ce565b61066884848484610d85565b50505050565b610676610fdd565b610680600061105e565b565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610730919061122e565b15610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064016103ce565b8373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190611250565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f74207468652061646d696e00000000000000000000000000000000000060448201526064016103ce565b6108a2610fdd565b61251c81111561090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064016103ce565b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526002602052604081205490918291168015610985579360009350915050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa925050508015610a49575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610a469181019061122e565b60015b15610a64578015610a6257506000946001945092505050565b505b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ae9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610ae691810190611250565b60015b610b8e578373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b72575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610b6f91810190611250565b60015b610b83575060009360049350915050565b946003945092505050565b946002945092505050565b610ba1610fdd565b73ffffffffffffffffffffffffffffffffffffffff8116610c44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103ce565b610c4d8161105e565b50565b600154811115610cbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016103ce565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260026020526040902054168015610e15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f416c72656164792073657400000000000000000000000000000000000000000060448201526064016103ce565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec3919061122e565b80610f7757506040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610f53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f77919061122e565b6103d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f4552433131353500000000000060448201526064016103ce565b60005473ffffffffffffffffffffffffffffffffffffffff163314610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ce565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c4d57600080fd5b6000806000806080858703121561110b57600080fd5b8435611116816110d3565b93506020850135611126816110d3565b92506040850135611136816110d3565b9396929550929360600135925050565b6000806040838503121561115957600080fd5b8235611164816110d3565b946020939093013593505050565b60006020828403121561118457600080fd5b5035919050565b60006020828403121561119d57600080fd5b81356111a8816110d3565b9392505050565b80820281158282048414176111ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600082611229577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561124057600080fd5b815180151581146111a857600080fd5b60006020828403121561126257600080fd5b81516111a8816110d356fea26469706673582212207bfbddedc0e58b80800d5c07f3f62f6684ce87e4de4397d11d865ae82f3da71b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13B1 CODESIZE SUB DUP1 PUSH2 0x13B1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x96 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A3 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB016670 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB016670 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3755FA80 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x275DA5EF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST PUSH2 0x16F PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x16F PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xB99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER DUP2 EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5365747465723A204E6F74207468652073657474657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E3 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC50 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x42F SWAP1 DUP7 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST ISZERO PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420746865206F776E6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x668 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD85 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x676 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x680 PUSH1 0x0 PUSH2 0x105E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F74207468652061646D696E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 AND DUP1 ISZERO PUSH2 0x985 JUMPI SWAP4 PUSH1 0x0 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA49 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA46 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0xA64 JUMPI DUP1 ISZERO PUSH2 0xA62 JUMPI POP PUSH1 0x0 SWAP5 PUSH1 0x1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB8E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB72 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB6F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB83 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x4 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP5 PUSH1 0x3 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP5 PUSH1 0x2 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBA1 PUSH2 0xFDD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0x105E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920736574000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST DUP1 PUSH2 0xF77 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1116 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1126 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1136 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1164 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A8 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x11ED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1229 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x10D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xFBDDEDC0E58B80800D5C07F3F62F6684CE87E4DE4397D11D865AE82F RETURNDATASIZE 0xA7 SHL PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "5244:6490:0:-:0;;;6081:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2553:32;1500:10;2553:18;:32::i;:::-;6199:4;6179:16;:24;;6171:63;;;;-1:-1:-1;;;6171:63:0;;405:2:1;6171:63:0;;;387:21:1;444:2;424:18;;;417:30;483:28;463:18;;;456:56;529:18;;6171:63:0;;;;;;;;6244:15;:34;5244:6490;;4050:187;4123:16;4142:6;;-1:-1:-1;;;;;4158:17:0;;;-1:-1:-1;;;;;;4158:17:0;;;;;;4190:40;;4142:6;;;;;;;4190:40;;4123:16;4190:40;4113:124;4050:187;:::o;14:184:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:1;;14:184;-1:-1:-1;14:184:1:o;203:350::-;5244:6490:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@INTERFACE_ID_ERC1155_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC2981_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INTERFACE_ID_ERC721_204": {
									"entryPoint": null,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_120": {
									"entryPoint": 4061,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_177": {
									"entryPoint": 4190,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateRoyaltyInfoForCollectionIfOwnerOrAdmin_629": {
									"entryPoint": 3461,
									"id": 629,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@checkForCollectionSetter_491": {
									"entryPoint": 2377,
									"id": 491,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@owner_106": {
									"entryPoint": null,
									"id": 106,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_134": {
									"entryPoint": 1646,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeInfoCollection_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@royaltyFeeLimit_212": {
									"entryPoint": null,
									"id": 212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_336": {
									"entryPoint": 1002,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@transferOwnership_157": {
									"entryPoint": 2969,
									"id": 157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_272": {
									"entryPoint": 2202,
									"id": 272,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfAdmin_533": {
									"entryPoint": 1666,
									"id": 533,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfOwner_575": {
									"entryPoint": 1092,
									"id": 575,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollectionIfSetter_397": {
									"entryPoint": 833,
									"id": 397,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollection_308": {
									"entryPoint": 3152,
									"id": 308,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7917:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "146:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "155:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "158:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "148:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "148:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "148:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "100:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:73:1"
															},
															"nodeType": "YulIf",
															"src": "69:93:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:477:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "341:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "353:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "343:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "343:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "343:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:33:1"
															},
															"nodeType": "YulIf",
															"src": "304:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "366:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "392:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "379:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "379:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "370:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "436:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "411:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "411:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "451:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "461:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "475:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "503:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "490:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "479:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "556:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "531:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "531:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "573:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "583:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "599:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "631:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "642:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "614:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:32:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "603:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "680:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "655:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "655:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "697:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "707:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "723:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "761:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "746:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "733:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "236:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "247:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "259:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "267:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													}
												],
												"src": "173:598:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "863:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "909:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "918:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "921:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "911:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "911:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "911:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "884:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "893:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:32:1"
															},
															"nodeType": "YulIf",
															"src": "873:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "934:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "960:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "947:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "938:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "979:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "979:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1019:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1029:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1043:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1070:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1081:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1053:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1053:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "821:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "832:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "844:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "852:6:1",
														"type": ""
													}
												],
												"src": "776:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1225:168:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1235:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1247:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1258:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1243:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1235:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1277:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1292:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1300:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1270:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1364:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1375:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1360:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1380:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1353:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1186:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1205:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1216:4:1",
														"type": ""
													}
												],
												"src": "1096:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1507:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1519:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1530:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1507:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1549:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1572:66:1",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1560:79:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:98:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:98:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1466:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1477:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1488:4:1",
														"type": ""
													}
												],
												"src": "1398:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1752:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1762:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1774:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1762:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1804:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1815:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1797:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1721:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1732:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1743:4:1",
														"type": ""
													}
												],
												"src": "1651:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1944:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1956:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1944:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1986:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2001:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2009:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1997:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1979:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1979:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1903:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1914:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1925:4:1",
														"type": ""
													}
												],
												"src": "1833:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2180:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2189:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2192:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2182:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2182:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2182:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2164:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2151:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2176:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:32:1"
															},
															"nodeType": "YulIf",
															"src": "2144:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2205:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2228:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2215:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2100:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2111:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2123:6:1",
														"type": ""
													}
												],
												"src": "2064:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2319:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2365:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2374:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2367:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2367:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2367:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2340:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2349:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2336:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2361:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:32:1"
															},
															"nodeType": "YulIf",
															"src": "2329:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2390:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2416:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2403:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2394:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2460:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2435:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2435:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2475:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2485:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2296:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2308:6:1",
														"type": ""
													}
												],
												"src": "2249:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2626:179:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2636:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2659:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2636:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2678:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2693:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2701:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2671:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2761:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2793:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2754:45:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2587:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2598:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2606:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2617:4:1",
														"type": ""
													}
												],
												"src": "2501:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2967:241:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2977:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2989:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3000:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2985:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2977:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3012:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3022:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3016:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3080:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3103:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3091:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3073:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3127:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3138:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3123:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3155:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3143:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3143:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3116:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3116:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3179:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3190:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3175:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3195:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2920:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2931:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2939:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2947:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2958:4:1",
														"type": ""
													}
												],
												"src": "2810:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3387:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3404:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3397:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3438:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3449:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3434:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3427:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3477:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3488:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:18:1"
																	},
																	{
																		"hexValue": "5365747465723a204e6f742074686520736574746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3493:24:1",
																		"type": "",
																		"value": "Setter: Not the setter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3466:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3527:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3539:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3550:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3535:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3527:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3364:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3378:4:1",
														"type": ""
													}
												],
												"src": "3213:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3616:270:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3626:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3641:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3644:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3626:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3712:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3733:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3736:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3726:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3726:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3834:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3837:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3827:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3827:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3827:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3862:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3865:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3855:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3855:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3675:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3668:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3668:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3682:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3689:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3698:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3685:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3685:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3679:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3679:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3658:45:1"
															},
															"nodeType": "YulIf",
															"src": "3655:225:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3595:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3598:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3604:7:1",
														"type": ""
													}
												],
												"src": "3564:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3937:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3968:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3989:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3992:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3982:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3982:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3982:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4090:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4093:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4083:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4083:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4118:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4121:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4111:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4111:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3957:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:9:1"
															},
															"nodeType": "YulIf",
															"src": "3947:189:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4145:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4154:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4157:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4150:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4150:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4145:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3922:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3925:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3931:1:1",
														"type": ""
													}
												],
												"src": "3891:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4248:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4294:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4303:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4306:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4296:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4296:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4296:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4269:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4290:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:32:1"
															},
															"nodeType": "YulIf",
															"src": "4258:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4319:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4338:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4332:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4332:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4323:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4401:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4410:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4413:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4403:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4403:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4403:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4370:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4391:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4384:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4384:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4377:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4377:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4367:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4367:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:40:1"
															},
															"nodeType": "YulIf",
															"src": "4357:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4426:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4436:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4426:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4225:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4237:6:1",
														"type": ""
													}
												],
												"src": "4170:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4626:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4643:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4654:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4636:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4688:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4673:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4693:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4666:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4727:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4712:18:1"
																	},
																	{
																		"hexValue": "204d757374206e6f742062652045524332393831",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4732:22:1",
																		"type": "",
																		"value": " Must not be ERC2981"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4705:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4705:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4764:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4776:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4787:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4772:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4764:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4603:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4617:4:1",
														"type": ""
													}
												],
												"src": "4452:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4882:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4928:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4937:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4940:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4930:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4930:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4930:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4903:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4912:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4899:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4924:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4895:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4895:32:1"
															},
															"nodeType": "YulIf",
															"src": "4892:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4953:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4966:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4966:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4957:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5016:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4991:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4991:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5031:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5041:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4848:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4859:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4871:6:1",
														"type": ""
													}
												],
												"src": "4801:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5231:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5248:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5259:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5241:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5241:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5282:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5293:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5278:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5298:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5271:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5321:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5332:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5317:18:1"
																	},
																	{
																		"hexValue": "204e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5337:16:1",
																		"type": "",
																		"value": " Not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5310:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5363:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5375:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5386:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5371:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5371:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5363:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5208:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5222:4:1",
														"type": ""
													}
												],
												"src": "5057:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5574:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5591:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5602:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5625:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5636:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5621:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5621:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5641:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5614:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5614:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5675:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:18:1"
																	},
																	{
																		"hexValue": "204e6f74207468652061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5680:16:1",
																		"type": "",
																		"value": " Not the admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5653:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5706:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5718:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5729:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5714:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5714:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5706:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5565:4:1",
														"type": ""
													}
												],
												"src": "5400:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5917:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5934:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5927:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5979:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5964:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5984:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5957:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6007:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6018:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6003:18:1"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6023:28:1",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5996:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6061:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6073:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6084:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6069:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6061:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5894:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5908:4:1",
														"type": ""
													}
												],
												"src": "5743:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6272:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6289:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6300:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6282:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6282:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6282:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6323:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6334:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6319:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6339:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6312:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6312:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6362:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6373:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6358:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6378:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6433:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6444:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6429:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6429:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6449:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6422:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6422:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6422:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6467:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6490:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6475:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6467:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6249:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6263:4:1",
														"type": ""
													}
												],
												"src": "6098:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6696:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6689:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6689:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6741:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6726:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6719:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6719:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6769:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6780:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:18:1"
																	},
																	{
																		"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6785:32:1",
																		"type": "",
																		"value": "Registry: Royalty fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6758:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6827:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6839:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6850:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6827:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6656:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6670:4:1",
														"type": ""
													}
												],
												"src": "6505:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7038:161:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7055:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7066:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7048:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7048:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7048:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7100:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7085:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7105:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7078:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7128:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7139:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7124:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7124:18:1"
																	},
																	{
																		"hexValue": "416c726561647920736574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7144:13:1",
																		"type": "",
																		"value": "Already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7117:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7117:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7117:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7167:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7179:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7175:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7167:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7015:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7029:4:1",
														"type": ""
													}
												],
												"src": "6864:335:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7378:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7395:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7406:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7388:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7388:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7388:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7429:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7440:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7425:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7445:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7418:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7418:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7479:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7464:18:1"
																	},
																	{
																		"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7484:28:1",
																		"type": "",
																		"value": " Not Set of ERC721/ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7457:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7457:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7522:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7545:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7530:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7522:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7355:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7369:4:1",
														"type": ""
													}
												],
												"src": "7204:350:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7733:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7750:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7784:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7780:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7800:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7773:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7823:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7834:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7819:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7839:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7812:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7812:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7883:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7906:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7883:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7710:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7724:4:1",
														"type": ""
													}
												],
												"src": "7559:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint8__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Setter: Not the setter\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Must not be ERC2981\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \" Not the admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Registry: Royalty fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not Set of ERC721/ERC1155\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063ab0166701161008c578063bc6bc0cd11610066578063bc6bc0cd14610247578063c54e54971461026e578063e31ef91c146102af578063f2fde38b1461032e57600080fd5b8063ab016670146101fa578063b060dd861461020d578063b9223c9d1461023457600080fd5b80633755fa80116100c85780633755fa80146101a05780634fb7d3f9146101b3578063715018a6146101ca5780638da5cb5b146101d257600080fd5b8063275da5ef146100ef5780632782d6c71461010457806333bf615614610148575b600080fd5b6101026100fd3660046110f5565b610341565b005b610117610112366004611146565b6103ea565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b61016f7fd9b67a260000000000000000000000000000000000000000000000000000000081565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161013f565b6101026101ae3660046110f5565b610444565b6101bc60015481565b60405190815260200161013f565b61010261066e565b60005460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161013f565b6101026102083660046110f5565b610682565b61016f7f2a55205a0000000000000000000000000000000000000000000000000000000081565b610102610242366004611172565b61089a565b61016f7f80ac58cd0000000000000000000000000000000000000000000000000000000081565b61028161027c36600461118b565b610949565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835260ff90911660208301520161013f565b6102fb6102bd36600461118b565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff94851681529390921660208401529082015260600161013f565b61010261033c36600461118b565b610b99565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260026020526040902054163381146103d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5365747465723a204e6f7420746865207365747465720000000000000000000060448201526064015b60405180910390fd5b6103e385858585610c50565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061042f90866111af565b61043991906111f3565b915091509250929050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa1580156104ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f2919061122e565b15610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064016103ce565b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190611250565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f7420746865206f776e657200000000000000000000000000000000000060448201526064016103ce565b61066884848484610d85565b50505050565b610676610fdd565b610680600061105e565b565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa15801561070c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610730919061122e565b15610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f204d757374206e6f74206265204552433239383100000000000000000000000060448201526064016103ce565b8373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190611250565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f204e6f74207468652061646d696e00000000000000000000000000000000000060448201526064016103ce565b6108a2610fdd565b61251c81111561090e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064016103ce565b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526002602052604081205490918291168015610985579360009350915050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f2a55205a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8516906301ffc9a790602401602060405180830381865afa925050508015610a49575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610a469181019061122e565b60015b15610a64578015610a6257506000946001945092505050565b505b8373ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ae9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610ae691810190611250565b60015b610b8e578373ffffffffffffffffffffffffffffffffffffffff1663f851a4406040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b72575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610b6f91810190611250565b60015b610b83575060009360049350915050565b946003945092505050565b946002945092505050565b610ba1610fdd565b73ffffffffffffffffffffffffffffffffffffffff8116610c44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103ce565b610c4d8161105e565b50565b600154811115610cbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016103ce565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260026020526040902054168015610e15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f416c72656164792073657400000000000000000000000000000000000000000060448201526064016103ce565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f80ac58cd00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec3919061122e565b80610f7757506040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fd9b67a2600000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8616906301ffc9a790602401602060405180830381865afa158015610f53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f77919061122e565b6103d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420536574206f66204552433732312f4552433131353500000000000060448201526064016103ce565b60005473ffffffffffffffffffffffffffffffffffffffff163314610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ce565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c4d57600080fd5b6000806000806080858703121561110b57600080fd5b8435611116816110d3565b93506020850135611126816110d3565b92506040850135611136816110d3565b9396929550929360600135925050565b6000806040838503121561115957600080fd5b8235611164816110d3565b946020939093013593505050565b60006020828403121561118457600080fd5b5035919050565b60006020828403121561119d57600080fd5b81356111a8816110d3565b9392505050565b80820281158282048414176111ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600082611229577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561124057600080fd5b815180151581146111a857600080fd5b60006020828403121561126257600080fd5b81516111a8816110d356fea26469706673582212207bfbddedc0e58b80800d5c07f3f62f6684ce87e4de4397d11d865ae82f3da71b64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB016670 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBC6BC0CD GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBC6BC0CD EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xC54E5497 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB016670 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xB060DD86 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3755FA80 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3755FA80 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x275DA5EF EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x33BF6156 EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16F PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1BC PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST PUSH2 0x16F PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x1172 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x16F PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 JUMP JUMPDEST PUSH2 0x281 PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x102 PUSH2 0x33C CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0xB99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER DUP2 EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5365747465723A204E6F74207468652073657474657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E3 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC50 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x42F SWAP1 DUP7 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x439 SWAP2 SWAP1 PUSH2 0x11F3 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST ISZERO PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420746865206F776E6572000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x668 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD85 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x676 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x680 PUSH1 0x0 PUSH2 0x105E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204D757374206E6F742062652045524332393831000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F74207468652061646D696E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x90E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 AND DUP1 ISZERO PUSH2 0x985 JUMPI SWAP4 PUSH1 0x0 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA49 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA46 SWAP2 DUP2 ADD SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0xA64 JUMPI DUP1 ISZERO PUSH2 0xA62 JUMPI POP PUSH1 0x0 SWAP5 PUSH1 0x1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB8E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF851A440 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB72 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB6F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB83 JUMPI POP PUSH1 0x0 SWAP4 PUSH1 0x4 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST SWAP5 PUSH1 0x3 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST SWAP5 PUSH1 0x2 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBA1 PUSH2 0xFDD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0x105E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND DUP1 ISZERO PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920736574000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC3 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST DUP1 PUSH2 0xF77 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF77 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420536574206F66204552433732312F45524331313535000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1116 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x1126 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x1136 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1164 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A8 DUP2 PUSH2 0x10D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x11ED JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1229 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x11A8 DUP2 PUSH2 0x10D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xFBDDEDC0E58B80800D5C07F3F62F6684CE87E4DE4397D11D865AE82F RETURNDATASIZE 0xA7 SHL PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "5244:6490:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7900:395;;;;;;:::i;:::-;;:::i;:::-;;7227:267;;;;;;:::i;:::-;;:::i;:::-;;;;1300:42:1;1288:55;;;1270:74;;1375:2;1360:18;;1353:34;;;;1243:18;7227:267:0;;;;;;;;5526:56;;;;;;;;1572:66:1;1560:79;;;1542:98;;1530:2;1515:18;5526:56:0;1398:248:1;10433:441:0;;;;;;:::i;:::-;;:::i;5727:30::-;;;;;;;;;1797:25:1;;;1785:2;1770:18;5727:30:0;1651:177:1;3448:101:0;;;:::i;2818:85::-;2864:7;2890:6;2818:85;;2890:6;;;;1979:74:1;;1967:2;1952:18;2818:85:0;1833:226:1;9674:491:0;;;;;;:::i;:::-;;:::i;5616:56::-;;;;;6347:303;;;;;;:::i;:::-;;:::i;5437:55::-;;;;;8514:796;;;;;;:::i;:::-;;:::i;:::-;;;;2701:42:1;2689:55;;;2671:74;;2793:4;2781:17;;;2776:2;2761:18;;2754:45;2644:18;8514:796:0;2501:304:1;7536:358:0;;;;;;:::i;:::-;7726:37;;;;7647:7;7726:37;;;:25;:37;;;;;;;;:44;;;7780:46;;;7836:41;;;;;7726:44;;;;7780:46;;;7536:358;;;;;3022:42:1;3091:15;;;3073:34;;3143:15;;;;3138:2;3123:18;;3116:43;3175:18;;;3168:34;3000:2;2985:18;7536:358:0;2810:398:1;3698:198:0;;;;;;:::i;:::-;;:::i;7900:395::-;8096:37;;;;8072:21;8096:37;;;:25;:37;;;;;:44;;8158:10;:27;;8150:62;;;;;;;3415:2:1;8150:62:0;;;3397:21:1;3454:2;3434:18;;;3427:30;3493:24;3473:18;;;3466:52;3535:18;;8150:62:0;;;;;;;;;8223:65;8254:10;8266:6;8274:8;8284:3;8223:30;:65::i;:::-;8062:233;7900:395;;;;:::o;7227:267::-;7361:37;;;;7316:7;7361:37;;;:25;:37;;;;;;;:46;;;;7427:41;;;7316:7;;;;7361:46;;;7472:5;;7418:50;;:6;:50;:::i;:::-;7417:60;;;;:::i;:::-;7344:143;;;;7227:267;;;;;:::o;10433:441::-;10613:59;;;;;10651:20;10613:59;;;1542:98:1;10613:37:0;;;;;;1515:18:1;;10613:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10612:60;10604:93;;;;;;;4654:2:1;10604:93:0;;;4636:21:1;4693:2;4673:18;;;4666:30;4732:22;4712:18;;;4705:50;4772:18;;10604:93:0;4452:344:1;10604:93:0;10738:10;10729:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10715:42;;:10;:42;;;10707:69;;;;;;;5259:2:1;10707:69:0;;;5241:21:1;5298:2;5278:18;;;5271:30;5337:16;5317:18;;;5310:44;5371:18;;10707:69:0;5057:338:1;10707:69:0;10787:80;10833:10;10845:6;10853:8;10863:3;10787:45;:80::i;:::-;10433:441;;;;:::o;3448:101::-;2711:13;:11;:13::i;:::-;3512:30:::1;3539:1;3512:18;:30::i;:::-;3448:101::o:0;9674:491::-;9904:59;;;;;9942:20;9904:59;;;1542:98:1;9904:37:0;;;;;;1515:18:1;;9904:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9903:60;9895:93;;;;;;;4654:2:1;9895:93:0;;;4636:21:1;4693:2;4673:18;;;4666:30;4732:22;4712:18;;;4705:50;4772:18;;9895:93:0;4452:344:1;9895:93:0;10029:10;10020:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10006:42;;:10;:42;;;9998:69;;;;;;;5602:2:1;9998:69:0;;;5584:21:1;5641:2;5621:18;;;5614:30;5680:16;5660:18;;;5653:44;5714:18;;9998:69:0;5400:338:1;6347:303:0;2711:13;:11;:13::i;:::-;6512:4:::1;6492:16;:24;;6484:63;;;::::0;::::1;::::0;;5945:2:1;6484:63:0::1;::::0;::::1;5927:21:1::0;5984:2;5964:18;;;5957:30;6023:28;6003:18;;;5996:56;6069:18;;6484:63:0::1;5743:350:1::0;6484:63:0::1;6557:15;:34:::0;;;6607:36:::1;::::0;1797:25:1;;;6607:36:0::1;::::0;1785:2:1;1770:18;6607:36:0::1;;;;;;;6347:303:::0;:::o;8514:796::-;8641:37;;;;8591:7;8641:37;;;:25;:37;;;;;:44;8591:7;;;;8641:44;8699:27;;8695:81;;8749:13;8763:1;;-1:-1:-1;8514:796:0;-1:-1:-1;;8514:796:0:o;8695:81::-;8789:59;;;;;8827:20;8789:59;;;1542:98:1;8789:37:0;;;;;;1515:18:1;;8789:59:0;;;;;;;;;;;;;;;;;;-1:-1:-1;8789:59:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;8785:206;;;8899:16;8895:77;;;-1:-1:-1;8951:1:0;;8955;;-1:-1:-1;8514:796:0;-1:-1:-1;;;8514:796:0:o;8895:77::-;8849:133;8785:206;9014:10;9005:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9005:28:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;9001:303;;9136:10;9127:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9127:28:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;9123:171;;-1:-1:-1;9273:1:0;;9277;;-1:-1:-1;8514:796:0;-1:-1:-1;;8514:796:0:o;9123:171::-;9207:6;9215:1;;-1:-1:-1;8514:796:0;-1:-1:-1;;;8514:796:0:o;9001:303::-;9081:6;9089:1;;-1:-1:-1;8514:796:0;-1:-1:-1;;;8514:796:0:o;3698:198::-;2711:13;:11;:13::i;:::-;3786:22:::1;::::0;::::1;3778:73;;;::::0;::::1;::::0;;6300:2:1;3778:73:0::1;::::0;::::1;6282:21:1::0;6339:2;6319:18;;;6312:30;6378:34;6358:18;;;6351:62;6449:8;6429:18;;;6422:36;6475:19;;3778:73:0::1;6098:402:1::0;3778:73:0::1;3861:28;3880:8;3861:18;:28::i;:::-;3698:198:::0;:::o;6656:408::-;6834:15;;6827:3;:22;;6819:65;;;;;;;6707:2:1;6819:65:0;;;6689:21:1;6746:2;6726:18;;;6719:30;6785:32;6765:18;;;6758:60;6835:18;;6819:65:0;6505:354:1;6819:65:0;6935:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6895:37;;;-1:-1:-1;6895:37:0;;;:25;:37;;;;;;;:95;;;;;;;;;;;;;;;;-1:-1:-1;6895:95:0;;;;;;;;;;;;;;;;;;;;;;;;7006:51;;1797:25:1;;;6935:55:0;;7006:51;;1770:18:1;7006:51:0;;;;;;;6656:408;;;;:::o;11126:606::-;11329:37;;;;11305:21;11329:37;;;:25;:37;;;;;:44;;11391:27;;11383:51;;;;;;;7066:2:1;11383:51:0;;;7048:21:1;7105:2;7085:18;;;7078:30;7144:13;7124:18;;;7117:41;7175:18;;11383:51:0;6864:335:1;11383:51:0;11467:58;;;;;11505:19;11467:58;;;1542:98:1;11467:37:0;;;;;;1515:18:1;;11467:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;11537:59:0;;;;;11575:20;11537:59;;;1542:98:1;11537:37:0;;;;;;1515:18:1;;11537:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11445:204;;;;;;;7406:2:1;11445:204:0;;;7388:21:1;7445:2;7425:18;;;7418:30;7484:28;7464:18;;;7457:56;7530:18;;11445:204:0;7204:350:1;2976:130:0;2864:7;2890:6;3039:23;2890:6;1500:10;3039:23;3031:68;;;;;;;7761:2:1;3031:68:0;;;7743:21:1;;;7780:18;;;7773:30;7839:34;7819:18;;;7812:62;7891:18;;3031:68:0;7559:356:1;4050:187:0;4123:16;4142:6;;;4158:17;;;;;;;;;;4190:40;;4142:6;;;;;;;4190:40;;4123:16;4190:40;4113:124;4050:187;:::o;14:154:1:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:598;259:6;267;275;283;336:3;324:9;315:7;311:23;307:33;304:53;;;353:1;350;343:12;304:53;392:9;379:23;411:31;436:5;411:31;:::i;:::-;461:5;-1:-1:-1;518:2:1;503:18;;490:32;531:33;490:32;531:33;:::i;:::-;583:7;-1:-1:-1;642:2:1;627:18;;614:32;655:33;614:32;655:33;:::i;:::-;173:598;;;;-1:-1:-1;707:7:1;;761:2;746:18;733:32;;-1:-1:-1;;173:598:1:o;776:315::-;844:6;852;905:2;893:9;884:7;880:23;876:32;873:52;;;921:1;918;911:12;873:52;960:9;947:23;979:31;1004:5;979:31;:::i;:::-;1029:5;1081:2;1066:18;;;;1053:32;;-1:-1:-1;;;776:315:1:o;2064:180::-;2123:6;2176:2;2164:9;2155:7;2151:23;2147:32;2144:52;;;2192:1;2189;2182:12;2144:52;-1:-1:-1;2215:23:1;;2064:180;-1:-1:-1;2064:180:1:o;2249:247::-;2308:6;2361:2;2349:9;2340:7;2336:23;2332:32;2329:52;;;2377:1;2374;2367:12;2329:52;2416:9;2403:23;2435:31;2460:5;2435:31;:::i;:::-;2485:5;2249:247;-1:-1:-1;;;2249:247:1:o;3564:322::-;3637:9;;;3668;;3685:15;;;3679:22;;3665:37;3655:225;;3736:77;3733:1;3726:88;3837:4;3834:1;3827:15;3865:4;3862:1;3855:15;3655:225;3564:322;;;;:::o;3891:274::-;3931:1;3957;3947:189;;3992:77;3989:1;3982:88;4093:4;4090:1;4083:15;4121:4;4118:1;4111:15;3947:189;-1:-1:-1;4150:9:1;;3891:274::o;4170:277::-;4237:6;4290:2;4278:9;4269:7;4265:23;4261:32;4258:52;;;4306:1;4303;4296:12;4258:52;4338:9;4332:16;4391:5;4384:13;4377:21;4370:5;4367:32;4357:60;;4413:1;4410;4403:12;4801:251;4871:6;4924:2;4912:9;4903:7;4899:23;4895:32;4892:52;;;4940:1;4937;4930:12;4892:52;4972:9;4966:16;4991:31;5016:5;4991:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "954200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"INTERFACE_ID_ERC1155()": "272",
								"INTERFACE_ID_ERC2981()": "249",
								"INTERFACE_ID_ERC721()": "226",
								"checkForCollectionSetter(address)": "infinite",
								"owner()": "2378",
								"renounceOwnership()": "infinite",
								"royaltyFeeInfoCollection(address)": "6884",
								"royaltyFeeLimit()": "2340",
								"royaltyInfo(address,uint256)": "4933",
								"transferOwnership(address)": "infinite",
								"updateRoyaltyFeeLimit(uint256)": "25634",
								"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollectionIfSetter(address,address,address,uint256)": "infinite"
							},
							"internal": {
								"_updateRoyaltyInfoForCollectionIfOwnerOrAdmin(address,address,address,uint256)": "infinite",
								"updateRoyaltyInfoForCollection(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5244,
									"end": 11734,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6081,
									"end": 6285,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6081,
									"end": 6285,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2553,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1500,
									"end": 1510,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2553,
									"end": 2571,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2553,
									"end": 2585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2553,
									"end": 2585,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2553,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6199,
									"end": 6203,
									"name": "PUSH",
									"source": 0,
									"value": "251C"
								},
								{
									"begin": 6179,
									"end": 6195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6203,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6203,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 387,
									"end": 408,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "1A"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 442,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 417,
									"end": 447,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 483,
									"end": 511,
									"name": "PUSH",
									"source": 1,
									"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 456,
									"end": 512,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6171,
									"end": 6234,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6244,
									"end": 6259,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6244,
									"end": 6278,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4050,
									"end": 4237,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 4050,
									"end": 4237,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4123,
									"end": 4139,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 4158,
									"end": 4175,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4190,
									"end": 4230,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4190,
									"end": 4230,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4142,
									"end": 4148,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4190,
									"end": 4230,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4190,
									"end": 4230,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4123,
									"end": 4139,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4190,
									"end": 4230,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 4113,
									"end": 4237,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4050,
									"end": 4237,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4050,
									"end": 4237,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 203,
									"end": 553,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 203,
									"end": 553,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5244,
									"end": 11734,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bfbddedc0e58b80800d5c07f3f62f6684ce87e4de4397d11d865ae82f3da71b64736f6c63430008110033",
									".code": [
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "AB016670"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "BC6BC0CD"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "BC6BC0CD"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "C54E5497"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "E31EF91C"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "AB016670"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "B060DD86"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "B9223C9D"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "3755FA80"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "3755FA80"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "4FB7D3F9"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "275DA5EF"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "2782D6C7"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "33BF6156"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5244,
											"end": 11734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7900,
											"end": 8295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7900,
											"end": 8295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7227,
											"end": 7494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7227,
											"end": 7494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1342,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1288,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1343,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1343,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1243,
											"end": 1261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1638,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1560,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1398,
											"end": 1646,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10433,
											"end": 10874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 10433,
											"end": 10874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1651,
											"end": 1828,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3549,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3448,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3448,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3448,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2903,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2818,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2818,
											"end": 2903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1833,
											"end": 2059,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9674,
											"end": 10165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9674,
											"end": 10165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5616,
											"end": 5672,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5616,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5616,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5616,
											"end": 5672,
											"name": "PUSH",
											"source": 0,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5616,
											"end": 5672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5616,
											"end": 5672,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6347,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6347,
											"end": 6650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5492,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5437,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5437,
											"end": 5492,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5437,
											"end": 5492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5437,
											"end": 5492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8514,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8514,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2701,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2744,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2797,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2501,
											"end": 2805,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7536,
											"end": 7894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7647,
											"end": 7654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7751,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7763,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7780,
											"end": 7826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7877,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7770,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3002,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2810,
											"end": 3208,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3698,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3698,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8168,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3397,
											"end": 3418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "5365747465723A204E6F74207468652073657474657200000000000000000000"
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8150,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8223,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8254,
											"end": 8264,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8274,
											"end": 8282,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8223,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8223,
											"end": 8288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8223,
											"end": 8288,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8223,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8062,
											"end": 8295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 8295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7398,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7361,
											"end": 7407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7316,
											"end": 7323,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7477,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 7472,
											"end": 7477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7418,
											"end": 7468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7424,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7418,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7468,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7418,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7417,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7417,
											"end": 7477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7417,
											"end": 7477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7417,
											"end": 7477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7417,
											"end": 7477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7417,
											"end": 7477,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7417,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7227,
											"end": 7494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10651,
											"end": 10671,
											"name": "PUSH",
											"source": 0,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10613,
											"end": 10650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10650,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 10613,
											"end": 10650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10613,
											"end": 10672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10613,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4695,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "PUSH",
											"source": 1,
											"value": "204D757374206E6F742062652045524332393831000000000000000000000000"
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4705,
											"end": 4755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4452,
											"end": 4796,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 10604,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10738,
											"end": 10748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10729,
											"end": 10755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10755,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10729,
											"end": 10757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10729,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10715,
											"end": 10757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10725,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10757,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10715,
											"end": 10757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10715,
											"end": 10757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5259,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5337,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "204E6F7420746865206F776E6572000000000000000000000000000000000000"
										},
										{
											"begin": 5317,
											"end": 5335,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5317,
											"end": 5335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5371,
											"end": 5389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5057,
											"end": 5395,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10707,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10833,
											"end": 10843,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10845,
											"end": 10851,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10861,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10863,
											"end": 10866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 10787,
											"end": 10867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10867,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10787,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10433,
											"end": 10874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3549,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3448,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2711,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2711,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3512,
											"end": 3542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3539,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3512,
											"end": 3542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3512,
											"end": 3542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3512,
											"end": 3542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3448,
											"end": 3549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9674,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "PUSH",
											"source": 0,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 9941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9904,
											"end": 9941,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9941,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 9904,
											"end": 9941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9904,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9904,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9903,
											"end": 9963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4695,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4732,
											"end": 4754,
											"name": "PUSH",
											"source": 1,
											"value": "204D757374206E6F742062652045524332393831000000000000000000000000"
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4705,
											"end": 4755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4452,
											"end": 4796,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10029,
											"end": 10039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10020,
											"end": 10046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10046,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10020,
											"end": 10048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10020,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10016,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10006,
											"end": 10048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5584,
											"end": 5605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5621,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5621,
											"end": 5639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "204E6F74207468652061646D696E000000000000000000000000000000000000"
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5714,
											"end": 5732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5400,
											"end": 5738,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2711,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2711,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "251C"
										},
										{
											"begin": 6492,
											"end": 6508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6516,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6516,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6484,
											"end": 6547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6484,
											"end": 6547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5945,
											"end": 5947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6484,
											"end": 6547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5957,
											"end": 5987,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6051,
											"name": "PUSH",
											"source": 1,
											"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6069,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5743,
											"end": 6093,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6484,
											"end": 6547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6557,
											"end": 6591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6591,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256"
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6607,
											"end": 6643,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8666,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8591,
											"end": 8598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8695,
											"end": 8776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8762,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8763,
											"end": 8764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8764,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8695,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8695,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8827,
											"end": 8847,
											"name": "PUSH",
											"source": 0,
											"value": "2A55205A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 8789,
											"end": 8826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 8789,
											"end": 8848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8789,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8991,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8785,
											"end": 8991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8899,
											"end": 8915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8895,
											"end": 8972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8951,
											"end": 8952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8952,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8955,
											"end": 8956,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8895,
											"end": 8972,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8895,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8849,
											"end": 8982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8991,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8785,
											"end": 8991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9014,
											"end": 9024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9005,
											"end": 9033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 9005,
											"end": 9033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 9001,
											"end": 9304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9136,
											"end": 9146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9127,
											"end": 9153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9153,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9127,
											"end": 9155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 9127,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 9123,
											"end": 9294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9273,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9273,
											"end": 9274,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9294,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 9123,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9213,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9215,
											"end": 9216,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9215,
											"end": 9216,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9001,
											"end": 9304,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 9001,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9087,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9089,
											"end": 9090,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9089,
											"end": 9090,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 9310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2711,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2711,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2711,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3786,
											"end": 3808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6300,
											"end": 6302,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6282,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6412,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6351,
											"end": 6413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6457,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6475,
											"end": 6494,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6475,
											"end": 6494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6098,
											"end": 6500,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3778,
											"end": 3851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3880,
											"end": 3888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3861,
											"end": 3889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3861,
											"end": 3889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 7064,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6656,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6748,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 6749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6817,
											"name": "PUSH",
											"source": 1,
											"value": "52656769737472793A20526F79616C74792066656520746F6F20686967680000"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 6853,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6835,
											"end": 6853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6505,
											"end": 6859,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6819,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6920,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6895,
											"end": 6990,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "PUSH",
											"source": 0,
											"value": "D01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64"
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7057,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 7064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 7064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 7064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 7064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 7064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11126,
											"end": 11732,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11126,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11418,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7066,
											"end": 7068,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7048,
											"end": 7069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7107,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7078,
											"end": 7108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7157,
											"name": "PUSH",
											"source": 1,
											"value": "416C726561647920736574000000000000000000000000000000000000000000"
										},
										{
											"begin": 7124,
											"end": 7142,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7124,
											"end": 7142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7175,
											"end": 7193,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7175,
											"end": 7193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6864,
											"end": 7199,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11383,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11467,
											"end": 11504,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11504,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 11467,
											"end": 11504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11467,
											"end": 11525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 11467,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11467,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11467,
											"end": 11596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11595,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11537,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11537,
											"end": 11574,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 11537,
											"end": 11574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1515,
											"end": 1533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11537,
											"end": 11596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11537,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7388,
											"end": 7409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7447,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7512,
											"name": "PUSH",
											"source": 1,
											"value": "204E6F7420536574206F66204552433732312F45524331313535000000000000"
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7457,
											"end": 7513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7530,
											"end": 7548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7204,
											"end": 7554,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3106,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2976,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1500,
											"end": 1510,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7761,
											"end": 7763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7873,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7559,
											"end": 7915,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4050,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4190,
											"end": 4230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4230,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 168,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 14,
											"end": 168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 100,
											"end": 142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 82,
											"end": 87,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 144,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 158,
											"end": 159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 148,
											"end": 160,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 173,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 173,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 275,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 336,
											"end": 339,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 333,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 315,
											"end": 322,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 311,
											"end": 334,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 307,
											"end": 340,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 304,
											"end": 357,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 304,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 304,
											"end": 357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 343,
											"end": 355,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 304,
											"end": 357,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 304,
											"end": 357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 401,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 379,
											"end": 402,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 411,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 411,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 411,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 411,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 461,
											"end": 466,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 503,
											"end": 521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 490,
											"end": 522,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 490,
											"end": 522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 531,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 531,
											"end": 564,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 531,
											"end": 564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 644,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 614,
											"end": 646,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 655,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 614,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 655,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 655,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 688,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 655,
											"end": 688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 771,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 173,
											"end": 771,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 173,
											"end": 771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 173,
											"end": 771,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 707,
											"end": 714,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 707,
											"end": 714,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 761,
											"end": 763,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 746,
											"end": 764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 765,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 765,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 173,
											"end": 771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 776,
											"end": 1091,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 776,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 905,
											"end": 907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 884,
											"end": 891,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 880,
											"end": 903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 876,
											"end": 908,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 873,
											"end": 925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 873,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 873,
											"end": 925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 921,
											"end": 922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 911,
											"end": 923,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 873,
											"end": 925,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 873,
											"end": 925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 960,
											"end": 969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 947,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 979,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1034,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2064,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2179,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2144,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2238,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2364,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2329,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2435,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2435,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2490,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2496,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3886,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3564,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3701,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3701,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3702,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3655,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3655,
											"end": 3880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3813,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3841,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3827,
											"end": 3842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3869,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3870,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3655,
											"end": 3880,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3655,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3891,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3947,
											"end": 4136,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4069,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4097,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3947,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4159,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4170,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4278,
											"end": 4287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4258,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4357,
											"end": 4417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5052,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4801,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4912,
											"end": 4921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4910,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4899,
											"end": 4922,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4927,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4944,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4892,
											"end": 4944,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4942,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4892,
											"end": 4944,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4892,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4982,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5016,
											"end": 5021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4991,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"RoyaltyFeeRegistry_flat.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"INTERFACE_ID_ERC1155()": "33bf6156",
							"INTERFACE_ID_ERC2981()": "b060dd86",
							"INTERFACE_ID_ERC721()": "bc6bc0cd",
							"checkForCollectionSetter(address)": "c54e5497",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyFeeLimit()": "4fb7d3f9",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"transferOwnership(address)": "f2fde38b",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollectionIfAdmin(address,address,address,uint256)": "ab016670",
							"updateRoyaltyInfoForCollectionIfOwner(address,address,address,uint256)": "3755fa80",
							"updateRoyaltyInfoForCollectionIfSetter(address,address,address,uint256)": "275da5ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"NewRoyaltyFeeLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RoyaltyFeeUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC2981\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkForCollectionSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollectionIfSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RoyaltyFeeRegistry_flat.sol\":\"RoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"RoyaltyFeeRegistry_flat.sol\":{\"keccak256\":\"0x6322cb2d7b9533b87d8113b13596e21da6f88e77a70ef73d53ca37fa09aef653\",\"urls\":[\"bzz-raw://d12a9770c3d11db85edf819c3f6c623bd7343f1a2e039b1b35b07828b66ae2b8\",\"dweb:/ipfs/QmYmGMTi88QHYSvp9LxQ8L5QGkxnaBmXAUB4mxRubxfwJC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "RoyaltyFeeRegistry_flat.sol:RoyaltyFeeRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 212,
								"contract": "RoyaltyFeeRegistry_flat.sol:RoyaltyFeeRegistry",
								"label": "royaltyFeeLimit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 217,
								"contract": "RoyaltyFeeRegistry_flat.sol:RoyaltyFeeRegistry",
								"label": "_royaltyFeeInfoCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(FeeInfo)201_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(FeeInfo)201_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(FeeInfo)201_storage"
							},
							"t_struct(FeeInfo)201_storage": {
								"encoding": "inplace",
								"label": "struct RoyaltyFeeRegistry.FeeInfo",
								"members": [
									{
										"astId": 196,
										"contract": "RoyaltyFeeRegistry_flat.sol:RoyaltyFeeRegistry",
										"label": "setter",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 198,
										"contract": "RoyaltyFeeRegistry_flat.sol:RoyaltyFeeRegistry",
										"label": "receiver",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 200,
										"contract": "RoyaltyFeeRegistry_flat.sol:RoyaltyFeeRegistry",
										"label": "fee",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> RoyaltyFeeRegistry_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "RoyaltyFeeRegistry_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"RoyaltyFeeRegistry_flat.sol": {
				"ast": {
					"absolutePath": "RoyaltyFeeRegistry_flat.sol",
					"exportedSymbols": {
						"Context": [
							67
						],
						"IERC165": [
							189
						],
						"IOwnable": [
							46
						],
						"IRoyaltyFeeRegistry": [
							29
						],
						"Ownable": [
							178
						],
						"RoyaltyFeeRegistry": [
							630
						]
					},
					"id": 631,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "72:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "107:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b9223c9d",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "145:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "175:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "167:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:26:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:0:0"
									},
									"scope": 29,
									"src": "136:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "217:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "237:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "229:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "257:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "249:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:36:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "297:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:18:0"
									},
									"scope": 29,
									"src": "208:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "321:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "354:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "346:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:20:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "447:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "468:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:73:0"
									},
									"scope": 29,
									"src": "312:174:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 631,
							"src": "97:391:0",
							"usedErrors": []
						},
						{
							"id": 30,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "542:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 46,
							"linearizedBaseContracts": [
								46
							],
							"name": "IOwnable",
							"nameLocation": "577:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "601:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "627:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "619:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:18:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:0"
									},
									"scope": 46,
									"src": "592:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "661:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "692:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:9:0"
									},
									"scope": 46,
									"src": "652:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f851a440",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "admin",
									"nameLocation": "716:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "721:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "747:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:9:0"
									},
									"scope": 46,
									"src": "707:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 631,
							"src": "567:191:0",
							"usedErrors": []
						},
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "867:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "892:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "Context",
							"nameLocation": "1407:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "1483:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 53,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1500:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1504:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1500:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 52,
												"id": 55,
												"nodeType": "Return",
												"src": "1493:17:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1430:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1440:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1474:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:9:0"
									},
									"scope": 67,
									"src": "1421:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1590:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 62,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1607:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1611:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1607:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 61,
												"id": 64,
												"nodeType": "Return",
												"src": "1600:15:0"
											}
										]
									},
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "1532:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1540:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1574:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 59,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1574:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:16:0"
									},
									"scope": 67,
									"src": "1523:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 631,
							"src": "1389:235:0",
							"usedErrors": []
						},
						{
							"id": 68,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1750:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 70,
										"name": "Context",
										"nameLocations": [
											"2300:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "2300:7:0"
									},
									"id": 71,
									"nodeType": "InheritanceSpecifier",
									"src": "2300:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "1776:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 178,
							"linearizedBaseContracts": [
								178,
								67
							],
							"name": "Ownable",
							"nameLocation": "2289:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "2330:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 178,
									"src": "2314:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 72,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2314:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 79,
									"name": "OwnershipTransferred",
									"nameLocation": "2349:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2386:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2370:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2417:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2401:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2369:57:0"
									},
									"src": "2343:84:0"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2543:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 84,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "2572:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2572:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 83,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "2553:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "2553:32:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2433:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 89,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2540:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2543:0:0"
									},
									"scope": 178,
									"src": "2529:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "2701:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 92,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2711:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2711:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "2711:13:0"
											},
											{
												"id": 95,
												"nodeType": "PlaceholderStatement",
												"src": "2734:1:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2598:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 97,
									"name": "onlyOwner",
									"nameLocation": "2689:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2698:2:0"
									},
									"src": "2680:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "2873:30:0",
										"statements": [
											{
												"expression": {
													"id": 103,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "2890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 102,
												"id": 104,
												"nodeType": "Return",
												"src": "2883:13:0"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "2748:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2827:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2832:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2863:9:0"
									},
									"scope": 178,
									"src": "2818:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3021:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 111,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "3039:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3039:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 113,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "3050:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3050:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3039:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3064:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3031:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "3031:68:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2909:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2985:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2996:2:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3021:0:0"
									},
									"scope": 178,
									"src": "2976:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "3502:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3539:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3531:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3531:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "3512:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3512:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "3512:30:0"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3112:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 123,
												"name": "onlyOwner",
												"nameLocations": [
													"3492:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 97,
												"src": "3492:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3492:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3457:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3474:2:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3502:0:0"
									},
									"scope": 178,
									"src": "3448:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "3768:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "3786:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3806:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3798:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 144,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3798:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3798:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3786:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3810:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3778:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "3880:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "3861:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3861:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "3861:28:0"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3555:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 139,
												"name": "onlyOwner",
												"nameLocations": [
													"3758:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 97,
												"src": "3758:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3758:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3707:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3733:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3725:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:18:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:0:0"
									},
									"scope": 178,
									"src": "3698:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "4113:124:0",
										"statements": [
											{
												"assignments": [
													164
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "4131:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 176,
														"src": "4123:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 163,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4123:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"id": 165,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "4142:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4123:25:0"
											},
											{
												"expression": {
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 167,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4158:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 168,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "4167:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4158:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4158:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 172,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4211:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4221:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 171,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "4190:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4190:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "EmitStatement",
												"src": "4185:45:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "3902:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "4059:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4086:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "4078:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4077:18:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4113:0:0"
									},
									"scope": 178,
									"src": "4050:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 631,
							"src": "2271:1968:0",
							"usedErrors": []
						},
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4376:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "4401:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC165",
							"nameLocation": "4691:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "4705:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5059:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5084:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5077:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 182,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5076:20:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5120:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5120:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:6:0"
									},
									"scope": 189,
									"src": "5050:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 631,
							"src": "4681:447:0",
							"usedErrors": []
						},
						{
							"id": 190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "5190:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 191,
										"name": "IRoyaltyFeeRegistry",
										"nameLocations": [
											"5275:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "5275:19:0"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "5275:19:0"
								},
								{
									"baseName": {
										"id": 193,
										"name": "Ownable",
										"nameLocations": [
											"5296:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 178,
										"src": "5296:7:0"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "5296:7:0"
								}
							],
							"canonicalName": "RoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								178,
								67,
								29
							],
							"name": "RoyaltyFeeRegistry",
							"nameLocation": "5253:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "RoyaltyFeeRegistry.FeeInfo",
									"id": 201,
									"members": [
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "setter",
											"nameLocation": "5343:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 201,
											"src": "5335:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 195,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5335:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "5367:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 201,
											"src": "5359:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 197,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5359:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 200,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "5393:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 201,
											"src": "5385:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5385:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeInfo",
									"nameLocation": "5317:7:0",
									"nodeType": "StructDefinition",
									"scope": 630,
									"src": "5310:93:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc6bc0cd",
									"id": 204,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC721",
									"nameLocation": "5460:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "5437:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 202,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "5437:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783830616335386364",
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5482:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2158778573_by_1",
											"typeString": "int_const 2158778573"
										},
										"value": "0x80ac58cd"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "33bf6156",
									"id": 207,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC1155",
									"nameLocation": "5549:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "5526:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 205,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "5526:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786439623637613236",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5572:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b060dd86",
									"id": 210,
									"mutability": "constant",
									"name": "INTERFACE_ID_ERC2981",
									"nameLocation": "5639:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "5616:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 208,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "5616:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783261353532303561",
										"id": 209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5662:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_710221914_by_1",
											"typeString": "int_const 710221914"
										},
										"value": "0x2a55205a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fb7d3f9",
									"id": 212,
									"mutability": "mutable",
									"name": "royaltyFeeLimit",
									"nameLocation": "5742:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "5727:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 211,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5727:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 217,
									"mutability": "mutable",
									"name": "_royaltyFeeInfoCollection",
									"nameLocation": "5843:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "5807:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
										"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
									},
									"typeName": {
										"id": 216,
										"keyType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5815:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5807:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
											"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
										},
										"valueType": {
											"id": 215,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 214,
												"name": "FeeInfo",
												"nameLocations": [
													"5826:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 201,
												"src": "5826:7:0"
											},
											"referencedDeclaration": 201,
											"src": "5826:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeeInfo_$201_storage_ptr",
												"typeString": "struct RoyaltyFeeRegistry.FeeInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256",
									"id": 221,
									"name": "NewRoyaltyFeeLimit",
									"nameLocation": "5881:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": false,
												"mutability": "mutable",
												"name": "royaltyFeeLimit",
												"nameLocation": "5908:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "5900:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:25:0"
									},
									"src": "5875:50:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64",
									"id": 231,
									"name": "RoyaltyFeeUpdate",
									"nameLocation": "5936:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "5969:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5953:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": true,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "5997:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5981:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6021:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6005:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "6039:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6031:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5952:91:0"
									},
									"src": "5930:114:0"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "6119:166:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 237,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6179:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6199:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "6179:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6205:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6171:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "6171:63:0"
											},
											{
												"expression": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "6244:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 244,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "6262:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6244:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "6244:34:0"
											}
										]
									},
									"id": 248,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "6101:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "6093:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6092:26:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6119:0:0"
									},
									"scope": 630,
									"src": "6081:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										6
									],
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "6432:218:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 257,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "6492:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6512:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "6492:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6518:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6484:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6484:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "6484:63:0"
											},
											{
												"expression": {
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 263,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "6557:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 264,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "6575:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6557:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "6557:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 268,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "6626:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 267,
														"name": "NewRoyaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "6607:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6607:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "EmitStatement",
												"src": "6602:41:0"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 253,
												"name": "onlyOwner",
												"nameLocations": [
													"6422:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 97,
												"src": "6422:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6422:9:0"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "6356:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6413:8:0"
									},
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "6386:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "6378:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6377:26:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6432:0:0"
									},
									"scope": 630,
									"src": "6347:303:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "6809:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 284,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "6827:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 285,
																"name": "royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "6834:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6827:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6851:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															},
															"value": "Registry: Royalty fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "6819:65:0"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 290,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6895:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 292,
														"indexExpression": {
															"id": 291,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "6921:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6895:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 294,
																"name": "setter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "6952:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 295,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "6970:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 296,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "6985:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 293,
															"name": "FeeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FeeInfo_$201_storage_ptr_$",
																"typeString": "type(struct RoyaltyFeeRegistry.FeeInfo storage pointer)"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"6944:6:0",
															"6960:8:0",
															"6980:3:0"
														],
														"names": [
															"setter",
															"receiver",
															"fee"
														],
														"nodeType": "FunctionCall",
														"src": "6935:55:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$201_memory_ptr",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo memory"
														}
													},
													"src": "6895:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
														"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "6895:95:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 301,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7023:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7035:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "7043:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 304,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "7053:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 300,
														"name": "RoyaltyFeeUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "7006:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7006:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "EmitStatement",
												"src": "7001:56:0"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "6665:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "6713:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6705:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "6741:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6733:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6765:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6757:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "6791:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6783:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6695:105:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6809:0:0"
									},
									"scope": 630,
									"src": "6656:408:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										17
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "7334:160:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 320,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7361:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 322,
																"indexExpression": {
																	"id": 321,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "7387:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7361:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7399:8:0",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 198,
															"src": "7361:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 324,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "7418:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 325,
																					"name": "_royaltyFeeInfoCollection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 217,
																					"src": "7427:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																						"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																					}
																				},
																				"id": 327,
																				"indexExpression": {
																					"id": 326,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 310,
																					"src": "7453:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7427:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
																					"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7465:3:0",
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 200,
																			"src": "7427:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7418:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 330,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7417:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7472:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "7417:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 333,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7351:136:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 319,
												"id": 334,
												"nodeType": "Return",
												"src": "7344:143:0"
											}
										]
									},
									"functionSelector": "2782d6c7",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "7236:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 314,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7298:8:0"
									},
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "7256:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7248:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7276:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7268:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7247:36:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "7325:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7315:18:0"
									},
									"scope": 630,
									"src": "7227:267:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										28
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "7699:195:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 348,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7726:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 350,
																"indexExpression": {
																	"id": 349,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "7752:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7726:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7764:6:0",
															"memberName": "setter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "7726:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 352,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7780:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 354,
																"indexExpression": {
																	"id": 353,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "7806:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7780:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7818:8:0",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 198,
															"src": "7780:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 356,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "7836:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"id": 357,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "7862:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7836:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7874:3:0",
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 200,
															"src": "7836:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 360,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7716:171:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 347,
												"id": 361,
												"nodeType": "Return",
												"src": "7709:178:0"
											}
										]
									},
									"functionSelector": "e31ef91c",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "7545:24:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7616:8:0"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "7578:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "7570:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7569:20:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "7647:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "7664:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "7681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7637:57:0"
									},
									"scope": 630,
									"src": "7536:358:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "8062:233:0",
										"statements": [
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "8080:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "8072:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 374,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8072:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 376,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "8096:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 377,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "8122:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8096:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8134:6:0",
													"memberName": "setter",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 196,
													"src": "8096:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8072:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 382,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8158:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8162:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8158:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 384,
																"name": "currentSetter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "8172:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8158:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5365747465723a204e6f742074686520736574746572",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8187:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6",
																"typeString": "literal_string \"Setter: Not the setter\""
															},
															"value": "Setter: Not the setter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_17a31d8452043f645e3ac51032a7d0f0c65f0455c2ff3015f08a8d7a3980edd6",
																"typeString": "literal_string \"Setter: Not the setter\""
															}
														],
														"id": 381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8150:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8150:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "8150:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "8254:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "8266:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "8274:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "8284:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "updateRoyaltyInfoForCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "8223:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8223:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "8223:65:0"
											}
										]
									},
									"functionSelector": "275da5ef",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfSetter",
									"nameLocation": "7909:38:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "7965:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7957:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "7993:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "7985:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8017:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "8009:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "8043:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "8035:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7947:105:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8062:0:0"
									},
									"scope": 630,
									"src": "7900:395:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "8607:703:0",
										"statements": [
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "8625:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 490,
														"src": "8617:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 406,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8617:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 408,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "8641:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 410,
														"indexExpression": {
															"id": 409,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "8667:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8641:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8679:6:0",
													"memberName": "setter",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 196,
													"src": "8641:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8617:68:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 413,
														"name": "currentSetter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "8699:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8724:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8716:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 414,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8716:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8716:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8699:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "8695:81:0",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "8727:49:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 419,
																		"name": "currentSetter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "8749:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8763:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8748:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																	"typeString": "tuple(address,int_const 0)"
																}
															},
															"functionReturnParameters": 405,
															"id": 422,
															"nodeType": "Return",
															"src": "8741:24:0"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 444,
															"nodeType": "Block",
															"src": "8881:101:0",
															"statements": [
																{
																	"condition": {
																		"id": 434,
																		"name": "interfaceSupport",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "8899:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 443,
																	"nodeType": "IfStatement",
																	"src": "8895:77:0",
																	"trueBody": {
																		"id": 442,
																		"nodeType": "Block",
																		"src": "8917:55:0",
																		"statements": [
																			{
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "30",
																									"id": 437,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8951:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									},
																									"value": "0"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_0_by_1",
																										"typeString": "int_const 0"
																									}
																								],
																								"id": 436,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "8943:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 435,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "8943:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 438,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "8943:10:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"hexValue": "31",
																							"id": 439,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8955:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						}
																					],
																					"id": 440,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "8942:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$_t_address_$_t_rational_1_by_1_$",
																						"typeString": "tuple(address,int_const 1)"
																					}
																				},
																				"functionReturnParameters": 405,
																				"id": 441,
																				"nodeType": "Return",
																				"src": "8935:22:0"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 445,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 433,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 432,
																	"mutability": "mutable",
																	"name": "interfaceSupport",
																	"nameLocation": "8863:16:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 445,
																	"src": "8858:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 431,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "8858:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "8857:23:0"
														},
														"src": "8849:133:0"
													},
													{
														"block": {
															"id": 446,
															"nodeType": "Block",
															"src": "8989:2:0",
															"statements": []
														},
														"errorName": "",
														"id": 447,
														"nodeType": "TryCatchClause",
														"src": "8983:8:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"id": 429,
															"name": "INTERFACE_ID_ERC2981",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "8827:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 426,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "8797:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 425,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "8789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$189_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8789:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$189",
																"typeString": "contract IERC165"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8809:17:0",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "8789:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view external returns (bool)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8789:59:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 448,
												"nodeType": "TryStatement",
												"src": "8785:206:0"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 461,
															"nodeType": "Block",
															"src": "9059:43:0",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"id": 457,
																				"name": "setter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "9081:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "32",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9089:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			}
																		],
																		"id": 459,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9080:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_address_$_t_rational_2_by_1_$",
																			"typeString": "tuple(address,int_const 2)"
																		}
																	},
																	"functionReturnParameters": 405,
																	"id": 460,
																	"nodeType": "Return",
																	"src": "9073:18:0"
																}
															]
														},
														"errorName": "",
														"id": 462,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 456,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 455,
																	"mutability": "mutable",
																	"name": "setter",
																	"nameLocation": "9051:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 462,
																	"src": "9043:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 454,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9043:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "9042:16:0"
														},
														"src": "9034:68:0"
													},
													{
														"block": {
															"id": 487,
															"nodeType": "Block",
															"src": "9109:195:0",
															"statements": [
																{
																	"clauses": [
																		{
																			"block": {
																				"id": 475,
																				"nodeType": "Block",
																				"src": "9181:51:0",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"id": 471,
																									"name": "setter",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 469,
																									"src": "9207:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "33",
																									"id": 472,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "9215:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								}
																							],
																							"id": 473,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "9206:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_3_by_1_$",
																								"typeString": "tuple(address,int_const 3)"
																							}
																						},
																						"functionReturnParameters": 405,
																						"id": 474,
																						"nodeType": "Return",
																						"src": "9199:18:0"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 476,
																			"nodeType": "TryCatchClause",
																			"parameters": {
																				"id": 470,
																				"nodeType": "ParameterList",
																				"parameters": [
																					{
																						"constant": false,
																						"id": 469,
																						"mutability": "mutable",
																						"name": "setter",
																						"nameLocation": "9173:6:0",
																						"nodeType": "VariableDeclaration",
																						"scope": 476,
																						"src": "9165:14:0",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"typeName": {
																							"id": 468,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "9165:7:0",
																							"stateMutability": "nonpayable",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"src": "9164:16:0"
																			},
																			"src": "9156:76:0"
																		},
																		{
																			"block": {
																				"id": 484,
																				"nodeType": "Block",
																				"src": "9239:55:0",
																				"statements": [
																					{
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 479,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9273:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 478,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "9265:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 477,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "9265:7:0",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 480,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "9265:10:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"hexValue": "34",
																									"id": 481,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "9277:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_4_by_1",
																										"typeString": "int_const 4"
																									},
																									"value": "4"
																								}
																							],
																							"id": 482,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "9264:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$_t_address_$_t_rational_4_by_1_$",
																								"typeString": "tuple(address,int_const 4)"
																							}
																						},
																						"functionReturnParameters": 405,
																						"id": 483,
																						"nodeType": "Return",
																						"src": "9257:22:0"
																					}
																				]
																			},
																			"errorName": "",
																			"id": 485,
																			"nodeType": "TryCatchClause",
																			"src": "9233:61:0"
																		}
																	],
																	"externalCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 464,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 399,
																						"src": "9136:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 463,
																					"name": "IOwnable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "9127:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IOwnable_$46_$",
																						"typeString": "type(contract IOwnable)"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9127:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IOwnable_$46",
																					"typeString": "contract IOwnable"
																				}
																			},
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9148:5:0",
																			"memberName": "admin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 45,
																			"src": "9127:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9127:28:0",
																		"tryCall": true,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 486,
																	"nodeType": "TryStatement",
																	"src": "9123:171:0"
																}
															]
														},
														"errorName": "",
														"id": 488,
														"nodeType": "TryCatchClause",
														"src": "9103:201:0"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 450,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "9014:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 449,
																"name": "IOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "9005:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IOwnable_$46_$",
																	"typeString": "type(contract IOwnable)"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9005:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOwnable_$46",
																"typeString": "contract IOwnable"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9026:5:0",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 40,
														"src": "9005:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9005:28:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 489,
												"nodeType": "TryStatement",
												"src": "9001:303:0"
											}
										]
									},
									"functionSelector": "c54e5497",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkForCollectionSetter",
									"nameLocation": "8523:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "8556:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8548:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:20:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8591:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "8600:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 403,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8600:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8590:16:0"
									},
									"scope": 630,
									"src": "8514:796:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "9835:330:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9903:60:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 507,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "9942:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 504,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "9912:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 503,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "9904:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$189_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9904:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$189",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9924:17:0",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "9904:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9904:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9965:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9895:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "9895:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 514,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10006:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10010:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10006:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 517,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "10029:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 516,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "10020:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$46_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10020:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$46",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10041:5:0",
																	"memberName": "admin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "10020:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10020:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10006:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f74207468652061646d696e",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10050:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															},
															"value": " Not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_566249bec39935e09a89f375978c2d6a2e6ac834c2bce425505e9bcf35b13ded",
																"typeString": "literal_string \" Not the admin\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9998:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "9998:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "10124:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "10136:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "10144:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "10154:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "10078:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10078:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "10078:80:0"
											}
										]
									},
									"functionSelector": "ab016670",
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfAdmin",
									"nameLocation": "9683:37:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "9738:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "9730:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "9766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "9758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9790:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "9782:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "9816:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "9808:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9720:105:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9835:0:0"
									},
									"scope": 630,
									"src": "9674:491:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "10594:280:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10612:60:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 549,
																		"name": "INTERFACE_ID_ERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "10651:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 546,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "10621:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 545,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "10613:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$189_$",
																				"typeString": "type(contract IERC165)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10613:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC165_$189",
																			"typeString": "contract IERC165"
																		}
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10633:17:0",
																	"memberName": "supportsInterface",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "10613:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																		"typeString": "function (bytes4) view external returns (bool)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10613:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204d757374206e6f742062652045524332393831",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10674:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															},
															"value": " Must not be ERC2981"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61d69d8f0e6462cc645f3532b9542766ce7f70457957df5aa80bb5ccd0145357",
																"typeString": "literal_string \" Must not be ERC2981\""
															}
														],
														"id": 544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10604:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "10604:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 556,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10715:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10719:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10715:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 559,
																				"name": "collection",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 535,
																				"src": "10738:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 558,
																			"name": "IOwnable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "10729:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IOwnable_$46_$",
																				"typeString": "type(contract IOwnable)"
																			}
																		},
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10729:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IOwnable_$46",
																			"typeString": "contract IOwnable"
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10750:5:0",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 40,
																	"src": "10729:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10729:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10715:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420746865206f776e6572",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10759:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															},
															"value": " Not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0278d9f2b12ccaf79acaf317980d7f8a3595c9dd3dcecf240c23b1de4e089dd6",
																"typeString": "literal_string \" Not the owner\""
															}
														],
														"id": 555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10707:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "10707:69:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 568,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "10833:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "10845:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "10853:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "10863:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 567,
														"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "10787:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10787:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "10787:80:0"
											}
										]
									},
									"functionSelector": "3755fa80",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollectionIfOwner",
									"nameLocation": "10442:37:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "10497:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10489:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "10525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10549:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10541:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "10575:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10567:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10479:105:0"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10594:0:0"
									},
									"scope": 630,
									"src": "10433:441:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "11295:437:0",
										"statements": [
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "currentSetter",
														"nameLocation": "11313:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 628,
														"src": "11305:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 586,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11305:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 592,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 588,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "11329:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$201_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 590,
														"indexExpression": {
															"id": 589,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "11355:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11329:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$201_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11367:6:0",
													"memberName": "setter",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 196,
													"src": "11329:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11305:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 594,
																"name": "currentSetter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "11391:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11416:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11408:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11408:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11408:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11391:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920736574",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11420:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															},
															"value": "Already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc",
																"typeString": "literal_string \"Already set\""
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11383:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "11383:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 608,
																				"name": "INTERFACE_ID_ERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "11505:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 605,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 577,
																						"src": "11475:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 604,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 189,
																					"src": "11467:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$189_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11467:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$189",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11487:17:0",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 188,
																			"src": "11467:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11467:58:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 614,
																				"name": "INTERFACE_ID_ERC1155",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 207,
																				"src": "11575:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 611,
																						"name": "collection",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 577,
																						"src": "11545:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 610,
																					"name": "IERC165",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 189,
																					"src": "11537:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC165_$189_$",
																						"typeString": "type(contract IERC165)"
																					}
																				},
																				"id": 612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11537:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC165_$189",
																					"typeString": "contract IERC165"
																				}
																			},
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11557:17:0",
																			"memberName": "supportsInterface",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 188,
																			"src": "11537:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (bytes4) view external returns (bool)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11537:59:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "11467:129:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 617,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11466:131:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420536574206f66204552433732312f45524331313535",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11611:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															},
															"value": " Not Set of ERC721/ERC1155"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c744f8fb6cd43e9abdf08566254f2be4a742db049615b39a61f4b32276cc6189",
																"typeString": "literal_string \" Not Set of ERC721/ERC1155\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11445:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11445:204:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "11445:204:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "11691:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "11703:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "11711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "11721:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "updateRoyaltyInfoForCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11660:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11660:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "11660:65:0"
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateRoyaltyInfoForCollectionIfOwnerOrAdmin",
									"nameLocation": "11135:45:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "11198:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "11190:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "11226:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "11218:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "11250:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "11242:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "11276:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "11268:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11180:105:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11295:0:0"
									},
									"scope": 630,
									"src": "11126:606:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 631,
							"src": "5244:6490:0",
							"usedErrors": []
						}
					],
					"src": "72:11663:0"
				},
				"id": 0
			}
		}
	}
}