{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_protocolFee",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "collection",
						"type": "address"
					}
				],
				"name": "UpdateActivity",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ACTIVITY_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PROTOCOL_FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isOrderAsk",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "taker",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "minPercentageToAsk",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "params",
								"type": "bytes"
							}
						],
						"internalType": "struct OrderTypes.TakerOrder",
						"name": "takerAsk",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isOrderAsk",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collection",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "strategy",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "currency",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "minPercentageToAsk",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "params",
								"type": "bytes"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct OrderTypes.MakerOrder",
						"name": "makerBid",
						"type": "tuple"
					}
				],
				"name": "canExecuteBuy",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isOrderAsk",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "taker",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "minPercentageToAsk",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "params",
								"type": "bytes"
							}
						],
						"internalType": "struct OrderTypes.TakerOrder",
						"name": "takerBid",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isOrderAsk",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "signer",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collection",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "strategy",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "currency",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "nonce",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "minPercentageToAsk",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "params",
								"type": "bytes"
							},
							{
								"internalType": "uint8",
								"name": "v",
								"type": "uint8"
							},
							{
								"internalType": "bytes32",
								"name": "r",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "s",
								"type": "bytes32"
							}
						],
						"internalType": "struct OrderTypes.MakerOrder",
						"name": "makerAsk",
						"type": "tuple"
					}
				],
				"name": "canExecuteSell",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_freeAddress",
						"type": "address"
					}
				],
				"name": "setFreeAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "viewProtocolFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_protocolFee": "protocol fee (200 --> 2%, 400 --> 4%)"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "StrategyStandardSaleForFixedPrice",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor"
				}
			},
			"notice": "Strategy that executes an order at a fixed price that can be taken either by a bid or an ask.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Manager/execution/StrategyActivity.sol": "StrategyAct"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/Manager/execution/StrategyActivity.sol": {
			"keccak256": "0x6ea12846453a04d93140c02d6fb86bfda0de905f41e29a785fbcca7106e5af4f",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb3f57212a084f442142c791a9e7156a2e454c58ace3153ac77218e893f1213e",
				"dweb:/ipfs/QmbVvbf1BSv6LM7Yw9YsiqmbJLDfU4ceduRRhv4X37BK4M"
			]
		},
		"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
			"keccak256": "0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d",
			"license": "MIT",
			"urls": [
				"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9",
				"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx"
			]
		},
		"contracts/libraries/OrderTypes.sol": {
			"keccak256": "0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220",
			"license": "MIT",
			"urls": [
				"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00",
				"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ"
			]
		}
	},
	"version": 1
}