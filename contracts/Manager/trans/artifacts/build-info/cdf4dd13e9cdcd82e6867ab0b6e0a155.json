{
	"id": "cdf4dd13e9cdcd82e6867ab0b6e0a155",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/trans/TransferManagerERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\n\nimport {TheTransferManager} from \"../interface/TheTransferManager.sol\";\n\n//  1155 transfer\ncontract TransferManagerERC1155 is TheTransferManager {\n    address public immutable UNEMETA_MARKET;\n\n    //  initializing with unemeta trading contract\n    constructor(address _unemetaMarket) {\n        UNEMETA_MARKET = _unemetaMarket;\n    }\n\n    //\n    // tion transferNonFungibleToken\n    //  @Description: transfer nft\n    //  @param address contract address\n    //  @param address sender address\n    //  @param address  receipient address\n    //  @param uint256  tokenId\n    //  @param uint256  amount\n    //  @return external\n    //\n    function transferNonFungibleToken(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) external override {\n        require(msg.sender == UNEMETA_MARKET, \"Only Unemeta Market can call this function\");\n        // https://docs.openzeppelin.com/contracts/3.x/api/token/erc1155#IERC1155-safeTransferFrom-address-address-uint256-uint256-bytes-\n        IERC1155(collection).safeTransferFrom(from, to, tokenId, amount, \"\");\n    }\n}\n"
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheTransferManager {\n    function transferNonFungibleToken(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"TheTransferManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferNonFungibleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferNonFungibleToken(address,address,address,uint256,uint256)": "33f2fa9f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferNonFungibleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheTransferManager.sol\":\"TheTransferManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheTransferManager.sol\":{\"keccak256\":\"0x13b412f89afe677f8e49c4fbddf6ebc0af44607381ab8fb2a2caf79a9b2c6a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab98d5a753bbbab25248b7fba410345a5f44ad4465244d6c1aabcde3aa5f15c\",\"dweb:/ipfs/Qmdwa6oSgGBfbagu1B1FLoYfmQyWQjCp8J7PkDESKfxLu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/trans/TransferManagerERC1155.sol": {
				"TransferManagerERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_unemetaMarket",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "UNEMETA_MARKET",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferNonFungibleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":226:1263  contract TransferManagerERC1155 is TheTransferManager {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":383:467  constructor(address _unemetaMarket) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":429:460  UNEMETA_MARKET = _unemetaMarket */\n  and\n  0x80\n  mstore\n    /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":226:1263  contract TransferManagerERC1155 is TheTransferManager {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":226:1263  contract TransferManagerERC1155 is TheTransferManager {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc7d00ca82740de2eef417cfa47c2970dbdec49b2a6d15c64e85f83cf97939ca5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":226:1263  contract TransferManagerERC1155 is TheTransferManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x33f2fa9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7f99d451\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":768:1261  function transferNonFungibleToken(... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":286:325  address public immutable UNEMETA_MARKET */\n    tag_4:\n      tag_9\n      immutable(\"0xc7d00ca82740de2eef417cfa47c2970dbdec49b2a6d15c64e85f83cf97939ca5\")\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":868:910   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":856:911   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":838:912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":826:828   */\n      0x20\n        /* \"#utility.yul\":811:829   */\n      add\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":286:325  address public immutable UNEMETA_MARKET */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":768:1261  function transferNonFungibleToken(... */\n    tag_8:\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":963:973  msg.sender */\n      caller\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":963:991  msg.sender == UNEMETA_MARKET */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":977:991  UNEMETA_MARKET */\n      immutable(\"0xc7d00ca82740de2eef417cfa47c2970dbdec49b2a6d15c64e85f83cf97939ca5\")\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":963:991  msg.sender == UNEMETA_MARKET */\n      and\n      eq\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":955:1038  require(msg.sender == UNEMETA_MARKET, \"Only Unemeta Market can call this function\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1125:1127   */\n      0x20\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":955:1038  require(msg.sender == UNEMETA_MARKET, \"Only Unemeta Market can call this function\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1107:1128   */\n      mstore\n        /* \"#utility.yul\":1164:1166   */\n      0x2a\n        /* \"#utility.yul\":1144:1162   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1137:1167   */\n      mstore\n        /* \"#utility.yul\":1203:1237   */\n      0x4f6e6c7920556e656d657461204d61726b65742063616e2063616c6c20746869\n        /* \"#utility.yul\":1183:1201   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1176:1238   */\n      mstore\n        /* \"#utility.yul\":1274:1286   */\n      0x732066756e6374696f6e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1254:1272   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1247:1287   */\n      mstore\n        /* \"#utility.yul\":1304:1323   */\n      0x84\n      add\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":955:1038  require(msg.sender == UNEMETA_MARKET, \"Only Unemeta Market can call this function\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":1186:1254  IERC1155(collection).safeTransferFrom(from, to, tokenId, amount, \"\") */\n      mload(0x40)\n      0xf242432a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":1186:1223  IERC1155(collection).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1708:1723   */\n      dup6\n      dup2\n      and\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":1186:1254  IERC1155(collection).safeTransferFrom(from, to, tokenId, amount, \"\") */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1690:1724   */\n      mstore\n        /* \"#utility.yul\":1760:1775   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":1740:1758   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1733:1776   */\n      mstore\n        /* \"#utility.yul\":1792:1810   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1785:1819   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":1835:1853   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1828:1862   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1899:1902   */\n      0xa0\n        /* \"#utility.yul\":1878:1897   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":1871:1903   */\n      mstore\n      0x00\n        /* \"#utility.yul\":1919:1938   */\n      0xa4\n      dup4\n      add\n        /* \"#utility.yul\":1912:1942   */\n      mstore\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":1186:1223  IERC1155(collection).safeTransferFrom */\n      dup7\n      and\n      swap1\n      0xf242432a\n      swap1\n        /* \"#utility.yul\":1959:1978   */\n      0xc4\n      add\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":1186:1254  IERC1155(collection).safeTransferFrom(from, to, tokenId, amount, \"\") */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/trans/TransferManagerERC1155.sol\":768:1261  function transferNonFungibleToken(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_22:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_25\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_25:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:687   */\n    tag_7:\n        /* \"#utility.yul\":310:316   */\n      0x00\n        /* \"#utility.yul\":318:324   */\n      dup1\n        /* \"#utility.yul\":326:332   */\n      0x00\n        /* \"#utility.yul\":334:340   */\n      dup1\n        /* \"#utility.yul\":342:348   */\n      0x00\n        /* \"#utility.yul\":395:398   */\n      0xa0\n        /* \"#utility.yul\":383:392   */\n      dup7\n        /* \"#utility.yul\":374:381   */\n      dup9\n        /* \"#utility.yul\":370:393   */\n      sub\n        /* \"#utility.yul\":366:399   */\n      slt\n        /* \"#utility.yul\":363:416   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":412:413   */\n      0x00\n        /* \"#utility.yul\":409:410   */\n      dup1\n        /* \"#utility.yul\":402:414   */\n      revert\n        /* \"#utility.yul\":363:416   */\n    tag_27:\n        /* \"#utility.yul\":435:464   */\n      tag_28\n        /* \"#utility.yul\":454:463   */\n      dup7\n        /* \"#utility.yul\":435:464   */\n      tag_22\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":425:464   */\n      swap5\n      pop\n        /* \"#utility.yul\":483:521   */\n      tag_29\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":506:515   */\n      dup8\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"#utility.yul\":483:521   */\n      tag_22\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":473:521   */\n      swap4\n      pop\n        /* \"#utility.yul\":540:578   */\n      tag_30\n        /* \"#utility.yul\":574:576   */\n      0x40\n        /* \"#utility.yul\":563:572   */\n      dup8\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"#utility.yul\":540:578   */\n      tag_22\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":215:687   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":530:578   */\n      swap4\n      swap5\n        /* \"#utility.yul\":625:627   */\n      0x60\n        /* \"#utility.yul\":610:628   */\n      dup2\n      add\n        /* \"#utility.yul\":597:629   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":676:679   */\n      0x80\n        /* \"#utility.yul\":661:680   */\n      add\n        /* \"#utility.yul\":648:681   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":215:687   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b25e04d87375bb490536deb650b169715ca0a5822edc73706973eaa01f37e98964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 64,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:4"
															},
															"nodeType": "YulIf",
															"src": "204:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:290:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161035938038061035983398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516102c9610090600039600081816055015260b801526102c96000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806333f2fa9f1461003b5780637f99d45114610050575b600080fd5b61004e61004936600461023e565b6100a0565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4f6e6c7920556e656d657461204d61726b65742063616e2063616c6c2074686960448201527f732066756e6374696f6e00000000000000000000000000000000000000000000606482015260840160405180910390fd5b6040517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b1580156101f657600080fd5b505af115801561020a573d6000803e3d6000fd5b505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461023957600080fd5b919050565b600080600080600060a0868803121561025657600080fd5b61025f86610215565b945061026d60208701610215565b935061027b60408701610215565b9497939650939460608101359450608001359291505056fea2646970667358221220b25e04d87375bb490536deb650b169715ca0a5822edc73706973eaa01f37e98964736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x359 CODESIZE SUB DUP1 PUSH2 0x359 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2C9 PUSH2 0x90 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x55 ADD MSTORE PUSH1 0xB8 ADD MSTORE PUSH2 0x2C9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33F2FA9F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x7F99D451 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x77 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920556E656D657461204D61726B65742063616E2063616C6C20746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E00000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP4 ADD MSTORE DUP7 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F DUP7 PUSH2 0x215 JUMP JUMPDEST SWAP5 POP PUSH2 0x26D PUSH1 0x20 DUP8 ADD PUSH2 0x215 JUMP JUMPDEST SWAP4 POP PUSH2 0x27B PUSH1 0x40 DUP8 ADD PUSH2 0x215 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0x5E DIV 0xD8 PUSH20 0x75BB490536DEB650B169715CA0A5822EDC737069 PUSH20 0xEAA01F37E98964736F6C63430008110033000000 ",
							"sourceMap": "226:1037:3:-:0;;;383:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;429:31:3;;;226:1037;;14:290:4;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:4;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:4:o;:::-;226:1037:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UNEMETA_MARKET_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferNonFungibleToken_203": {
									"entryPoint": 160,
									"id": 203,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97a364c40562c5b49043090e0ba2d8a4cf612aca1d358c814601e77b2477016f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1986:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:4"
															},
															"nodeType": "YulIf",
															"src": "111:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:196:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "353:334:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "400:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "409:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "412:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "402:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "402:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "402:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "374:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "383:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "370:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "395:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "366:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:33:4"
															},
															"nodeType": "YulIf",
															"src": "363:53:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "425:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "454:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "435:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "425:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "473:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "517:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "502:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "483:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "530:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "563:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "574:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "559:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "559:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "540:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:38:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "530:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "587:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "614:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "625:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "610:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "610:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "597:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:32:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "638:43:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "665:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "676:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:19:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "648:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:33:4"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "287:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "298:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "310:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "318:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "326:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "334:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "342:6:4",
														"type": ""
													}
												],
												"src": "215:472:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "793:125:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "803:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "815:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "826:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "811:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "803:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "845:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "860:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "868:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "856:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "838:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "838:74:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "838:74:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "762:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "773:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "784:4:4",
														"type": ""
													}
												],
												"src": "692:226:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1097:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1114:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1125:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1107:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1148:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1159:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1144:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:2:4",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1137:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1187:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1198:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1183:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1183:18:4"
																	},
																	{
																		"hexValue": "4f6e6c7920556e656d657461204d61726b65742063616e2063616c6c20746869",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1203:34:4",
																		"type": "",
																		"value": "Only Unemeta Market can call thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1176:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1176:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1258:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1269:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1254:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1254:18:4"
																	},
																	{
																		"hexValue": "732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1274:12:4",
																		"type": "",
																		"value": "s function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1247:40:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1247:40:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1296:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1308:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1319:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1304:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1296:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97a364c40562c5b49043090e0ba2d8a4cf612aca1d358c814601e77b2477016f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1074:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1088:4:4",
														"type": ""
													}
												],
												"src": "923:406:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:365:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1629:52:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1639:42:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1633:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1697:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1712:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1720:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1708:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1708:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1744:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1755:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1740:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1764:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1772:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1733:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1796:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1792:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1792:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1785:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1785:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1850:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1835:18:4"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1855:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1828:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1882:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1893:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1878:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1878:19:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:3:4",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1871:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:32:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1923:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1934:3:4",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1919:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1919:19:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1940:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1912:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1912:30:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1951:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1963:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1974:3:4",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1959:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1959:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1951:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1564:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1575:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1583:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1591:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1599:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1610:4:4",
														"type": ""
													}
												],
												"src": "1334:650:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_97a364c40562c5b49043090e0ba2d8a4cf612aca1d358c814601e77b2477016f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Only Unemeta Market can call thi\")\n        mstore(add(headStart, 96), \"s function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 0)\n        tail := add(headStart, 192)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"159": [
									{
										"length": 32,
										"start": 85
									},
									{
										"length": 32,
										"start": 184
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806333f2fa9f1461003b5780637f99d45114610050575b600080fd5b61004e61004936600461023e565b6100a0565b005b6100777f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610169576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4f6e6c7920556e656d657461204d61726b65742063616e2063616c6c2074686960448201527f732066756e6374696f6e00000000000000000000000000000000000000000000606482015260840160405180910390fd5b6040517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b1580156101f657600080fd5b505af115801561020a573d6000803e3d6000fd5b505050505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461023957600080fd5b919050565b600080600080600060a0868803121561025657600080fd5b61025f86610215565b945061026d60208701610215565b935061027b60408701610215565b9497939650939460608101359450608001359291505056fea2646970667358221220b25e04d87375bb490536deb650b169715ca0a5822edc73706973eaa01f37e98964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x33F2FA9F EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x7F99D451 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x23E JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x77 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0x169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920556E656D657461204D61726B65742063616E2063616C6C20746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x732066756E6374696F6E00000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP4 ADD MSTORE DUP7 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25F DUP7 PUSH2 0x215 JUMP JUMPDEST SWAP5 POP PUSH2 0x26D PUSH1 0x20 DUP8 ADD PUSH2 0x215 JUMP JUMPDEST SWAP4 POP PUSH2 0x27B PUSH1 0x40 DUP8 ADD PUSH2 0x215 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0x5E DIV 0xD8 PUSH20 0x75BB490536DEB650B169715CA0A5822EDC737069 PUSH20 0xEAA01F37E98964736F6C63430008110033000000 ",
							"sourceMap": "226:1037:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:493;;;;;;:::i;:::-;;:::i;:::-;;286:39;;;;;;;;868:42:4;856:55;;;838:74;;826:2;811:18;286:39:3;;;;;;;768:493;963:10;:28;977:14;963:28;;955:83;;;;;;;1125:2:4;955:83:3;;;1107:21:4;1164:2;1144:18;;;1137:30;1203:34;1183:18;;;1176:62;1274:12;1254:18;;;1247:40;1304:19;;955:83:3;;;;;;;;1186:68;;;;;:37;1708:15:4;;;1186:68:3;;;1690:34:4;1760:15;;;1740:18;;;1733:43;1792:18;;;1785:34;;;1835:18;;;1828:34;;;1899:3;1878:19;;;1871:32;-1:-1:-1;1919:19:4;;;1912:30;1186:37:3;;;;;1959:19:4;;1186:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:493;;;;;:::o;14:196:4:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:472::-;310:6;318;326;334;342;395:3;383:9;374:7;370:23;366:33;363:53;;;412:1;409;402:12;363:53;435:29;454:9;435:29;:::i;:::-;425:39;;483:38;517:2;506:9;502:18;483:38;:::i;:::-;473:48;;540:38;574:2;563:9;559:18;540:38;:::i;:::-;215:472;;;;-1:-1:-1;530:48:4;;625:2;610:18;;597:32;;-1:-1:-1;676:3:4;661:19;648:33;;215:472;-1:-1:-1;;215:472:4:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UNEMETA_MARKET()": "infinite",
								"transferNonFungibleToken(address,address,address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 383,
									"end": 467,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 383,
									"end": 467,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 383,
									"end": 467,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 383,
									"end": 467,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 383,
									"end": 467,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 383,
									"end": 467,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 383,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 383,
									"end": 467,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 383,
									"end": 467,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 429,
									"end": 460,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 429,
									"end": 460,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 429,
									"end": 460,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "159"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1263,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b25e04d87375bb490536deb650b169715ca0a5822edc73706973eaa01f37e98964736f6c63430008110033",
									".code": [
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "33F2FA9F"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "7F99D451"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 226,
											"end": 1263,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 768,
											"end": 1261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 768,
											"end": 1261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 325,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 286,
											"end": 325,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 325,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 868,
											"end": 910,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 856,
											"end": 911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 856,
											"end": 911,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 856,
											"end": 911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 838,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 838,
											"end": 912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 811,
											"end": 829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 286,
											"end": 325,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 325,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 286,
											"end": 325,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 963,
											"end": 973,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 963,
											"end": 991,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 977,
											"end": 991,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 963,
											"end": 991,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 963,
											"end": 991,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1166,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 1144,
											"end": 1162,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1144,
											"end": 1162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1237,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C7920556E656D657461204D61726B65742063616E2063616C6C20746869"
										},
										{
											"begin": 1183,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1183,
											"end": 1201,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1183,
											"end": 1201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1238,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "732066756E6374696F6E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1254,
											"end": 1272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1247,
											"end": 1287,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1304,
											"end": 1323,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1304,
											"end": 1323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 955,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "F242432A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1223,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1708,
											"end": 1723,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1723,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1723,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1775,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1810,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1792,
											"end": 1810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1792,
											"end": 1810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1819,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1862,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1862,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1903,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "PUSH",
											"source": 4,
											"value": "A4"
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1919,
											"end": 1938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1223,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1223,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1223,
											"name": "PUSH",
											"source": 3,
											"value": "F242432A"
										},
										{
											"begin": 1186,
											"end": 1223,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "PUSH",
											"source": 4,
											"value": "C4"
										},
										{
											"begin": 1959,
											"end": 1978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 768,
											"end": 1261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 215,
											"end": 687,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 215,
											"end": 687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 310,
											"end": 316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 326,
											"end": 332,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 342,
											"end": 348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 398,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 374,
											"end": 381,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 370,
											"end": 393,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 366,
											"end": 399,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 363,
											"end": 416,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 363,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 363,
											"end": 416,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 412,
											"end": 413,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 414,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 363,
											"end": 416,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 363,
											"end": 416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 435,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 435,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 464,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 435,
											"end": 464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 425,
											"end": 464,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 425,
											"end": 464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 483,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 483,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 483,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 483,
											"end": 521,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 483,
											"end": 521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 473,
											"end": 521,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 473,
											"end": 521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 540,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 572,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 540,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 540,
											"end": 578,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 540,
											"end": 578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 215,
											"end": 687,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 215,
											"end": 687,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 215,
											"end": 687,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 215,
											"end": 687,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 530,
											"end": 578,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 530,
											"end": 578,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 625,
											"end": 627,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 610,
											"end": 628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 610,
											"end": 628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 597,
											"end": 629,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 597,
											"end": 629,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 676,
											"end": 679,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 661,
											"end": 680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 648,
											"end": 681,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 648,
											"end": 681,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 215,
											"end": 687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/trans/TransferManagerERC1155.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UNEMETA_MARKET()": "7f99d451",
							"transferNonFungibleToken(address,address,address,uint256,uint256)": "33f2fa9f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unemetaMarket\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"UNEMETA_MARKET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferNonFungibleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/trans/TransferManagerERC1155.sol\":\"TransferManagerERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Manager/interface/TheTransferManager.sol\":{\"keccak256\":\"0x13b412f89afe677f8e49c4fbddf6ebc0af44607381ab8fb2a2caf79a9b2c6a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab98d5a753bbbab25248b7fba410345a5f44ad4465244d6c1aabcde3aa5f15c\",\"dweb:/ipfs/Qmdwa6oSgGBfbagu1B1FLoYfmQyWQjCp8J7PkDESKfxLu5\"]},\"contracts/Manager/trans/TransferManagerERC1155.sol\":{\"keccak256\":\"0xe751e6f6c2216dd973120b85d2d5fb05950a96311b9a18fdab8bdb9ebf53a691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53627bb7c0a61e72839f2478fc620f5b55503bf9dd0cb5f13d430cc935d64b55\",\"dweb:/ipfs/QmPRL9BpHtaHPbkWaU3Hv5cN44XB5yCA3Wif4Vj7zaWmyW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"IERC165": [
							133
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 134,
							"src": "135:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"372:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 133,
										"src": "372:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								133
							],
							"name": "IERC1155",
							"nameLocation": "360:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 18,
									"name": "TransferSingle",
									"nameLocation": "518:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "533:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "559:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "581:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "601:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "613:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:0"
									},
									"src": "512:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 33,
									"name": "TransferBatch",
									"nameLocation": "789:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "812:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "846:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "876:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "904:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "904:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "927:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "927:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:0"
									},
									"src": "783:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1129:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1154:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:0"
									},
									"src": "1108:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 49,
									"name": "URI",
									"nameLocation": "1555:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1559:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1573:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:0"
									},
									"src": "1549:44:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1796:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1813:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:0"
									},
									"scope": 121,
									"src": "1777:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2080:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2109:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2180:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:0"
									},
									"scope": 121,
									"src": "2056:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2484:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:0"
									},
									"scope": 121,
									"src": "2457:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2698:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2715:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2756:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:0"
									},
									"scope": 121,
									"src": "2672:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3364:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3386:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3406:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3426:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3450:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:0"
									},
									"scope": 121,
									"src": "3329:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3926:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3948:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3968:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4000:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4036:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:0"
									},
									"scope": 121,
									"src": "3886:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "350:3723:0",
							"usedErrors": []
						}
					],
					"src": "110:3964:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 124,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:1",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC165",
							"nameLocation": "415:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "801:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 126,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:1"
									},
									"scope": 133,
									"src": "774:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "405:447:1",
							"usedErrors": []
						}
					],
					"src": "100:753:1"
				},
				"id": 1
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheTransferManager.sol",
					"exportedSymbols": {
						"TheTransferManager": [
							149
						]
					},
					"id": 150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheTransferManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 149,
							"linearizedBaseContracts": [
								149
							],
							"name": "TheTransferManager",
							"nameLocation": "67:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "33f2fa9f",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNonFungibleToken",
									"nameLocation": "101:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "143:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "135:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "171:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "163:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "193:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "185:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "213:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "205:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "238:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "230:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:125:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:0:2"
									},
									"scope": 149,
									"src": "92:168:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 150,
							"src": "57:205:2",
							"usedErrors": []
						}
					],
					"src": "32:231:2"
				},
				"id": 2
			},
			"contracts/Manager/trans/TransferManagerERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/trans/TransferManagerERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"TheTransferManager": [
							149
						],
						"TransferManagerERC1155": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 151,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 122,
							"src": "57:76:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "65:8:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheTransferManager.sol",
							"file": "../interface/TheTransferManager.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 150,
							"src": "135:71:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "TheTransferManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 149,
										"src": "143:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 156,
										"name": "TheTransferManager",
										"nameLocations": [
											"261:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 149,
										"src": "261:18:3"
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "261:18:3"
								}
							],
							"canonicalName": "TransferManagerERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204,
								149
							],
							"name": "TransferManagerERC1155",
							"nameLocation": "235:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7f99d451",
									"id": 159,
									"mutability": "immutable",
									"name": "UNEMETA_MARKET",
									"nameLocation": "311:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 204,
									"src": "286:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 158,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "286:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "419:48:3",
										"statements": [
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "UNEMETA_MARKET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "429:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 165,
														"name": "_unemetaMarket",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "446:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "429:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "429:31:3"
											}
										]
									},
									"id": 169,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "_unemetaMarket",
												"nameLocation": "403:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "395:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:24:3"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "419:0:3"
									},
									"scope": 204,
									"src": "383:84:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										148
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "945:316:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 184,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "963:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "967:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "963:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 186,
																"name": "UNEMETA_MARKET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "977:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "963:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920556e656d657461204d61726b65742063616e2063616c6c20746869732066756e6374696f6e",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "993:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97a364c40562c5b49043090e0ba2d8a4cf612aca1d358c814601e77b2477016f",
																"typeString": "literal_string \"Only Unemeta Market can call this function\""
															},
															"value": "Only Unemeta Market can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97a364c40562c5b49043090e0ba2d8a4cf612aca1d358c814601e77b2477016f",
																"typeString": "literal_string \"Only Unemeta Market can call this function\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "955:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "955:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "955:83:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 195,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1224:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "1230:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 197,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1234:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 198,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1243:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1251:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 192,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "1195:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 191,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1186:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$121_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1186:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$121",
																"typeString": "contract IERC1155"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1207:16:3",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "1186:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1186:68:3"
											}
										]
									},
									"functionSelector": "33f2fa9f",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferNonFungibleToken",
									"nameLocation": "777:24:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "936:8:3"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "819:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "811:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "839:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "869:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "861:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "889:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "881:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "914:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "906:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:125:3"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "945:0:3"
									},
									"scope": 204,
									"src": "768:493:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 205,
							"src": "226:1037:3",
							"usedErrors": []
						}
					],
					"src": "32:1232:3"
				},
				"id": 3
			}
		}
	}
}