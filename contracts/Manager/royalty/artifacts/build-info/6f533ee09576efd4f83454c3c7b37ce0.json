{
	"id": "6f533ee09576efd4f83454c3c7b37ce0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport {IRoyaltyFeeRegistry} from \"./interface/IRoyaltyFeeRegistry.sol\";\n\n//  register royalty fee\ncontract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {\n    struct FeeInfo {\n        address setter;\n        address receiver;\n        uint256 fee;\n    }\n\n    // limit max royalty fee（10,000 = 100%）\n    uint256 public royaltyFeeLimit;\n\n    //compile royalty information mapping \n    mapping(address => FeeInfo) private _royaltyFeeInfoCollection;\n\n    event NewRoyaltyFeeLimit(uint256 royaltyFeeLimit);\n    event RoyaltyFeeUpdate(address indexed collection, address indexed setter, address indexed receiver, uint256 fee);\n\n    //  initialize royalty fee\n    constructor(uint256 _royaltyFeeLimit) {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n    }\n\n    // Update a collection's upper limit of royalty fee\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {\n        // no higher than the upper limit\n        require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\");\n        royaltyFeeLimit = _royaltyFeeLimit;\n\n        emit NewRoyaltyFeeLimit(_royaltyFeeLimit);\n    }\n\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external override onlyOwner {\n        require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\");\n        _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee});\n\n        emit RoyaltyFeeUpdate(collection, setter, receiver, fee);\n    }\n\n    //\n    // function royaltyInfo\n    //  @Description: calculate royalty fee\n    //  @param address\n    //  @param uint256\n    //  @return external\n    //\n    function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {\n        return (\n        _royaltyFeeInfoCollection[collection].receiver,\n        (amount * _royaltyFeeInfoCollection[collection].fee) / 10000\n        );\n    }\n    /*Check collection information*/\n    function royaltyFeeInfoCollection(address collection)\n    external\n    view\n    override\n    returns (\n        address,\n        address,\n        uint256\n    )\n    {\n        return (\n        _royaltyFeeInfoCollection[collection].setter,\n        _royaltyFeeInfoCollection[collection].receiver,\n        _royaltyFeeInfoCollection[collection].fee\n        );\n    }\n}\n"
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IRoyaltyFeeRegistry {\n    function updateRoyaltyInfoForCollection(\n        address collection,\n        address setter,\n        address receiver,\n        uint256 fee\n    ) external;\n    function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external;\n\n    function royaltyInfo(address collection, uint256 amount) external view returns (address, uint256);\n\n    function royaltyFeeInfoCollection(address collection)\n        external\n        view\n        returns (\n            address,\n            address,\n            uint256\n        );\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"RoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "NewRoyaltyFeeLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "RoyaltyFeeUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2626  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":792:996  constructor(uint256 _royaltyFeeLimit) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":910:914  9500 */\n  0x251c\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":890:906  _royaltyFeeLimit */\n  dup2\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":890:914  _royaltyFeeLimit <= 9500 */\n  gt\n  iszero\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":882:945  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":405:407   */\n  0x20\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":882:945  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":387:408   */\n  mstore\n    /* \"#utility.yul\":444:446   */\n  0x1a\n    /* \"#utility.yul\":424:442   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":417:447   */\n  mstore\n    /* \"#utility.yul\":483:511   */\n  0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n    /* \"#utility.yul\":463:481   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":456:512   */\n  mstore\n    /* \"#utility.yul\":529:547   */\n  0x64\n  add\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":882:945  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":955:970  royaltyFeeLimit */\n  0x01\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":955:989  royaltyFeeLimit = _royaltyFeeLimit */\n  sstore\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2626  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_20:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:553   */\ntag_18:\n    /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2626  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":225:2626  contract RoyaltyFeeRegistry is IRoyaltyFeeRegistry, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb9223c9d\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xb9223c9d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbbdf9b68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe31ef91c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x2782d6c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4fb7d3f9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1957:2224  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":678:720   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":666:721   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":648:722   */\n      dup4\n      mstore\n        /* \"#utility.yul\":753:755   */\n      0x20\n        /* \"#utility.yul\":738:756   */\n      dup4\n      add\n        /* \"#utility.yul\":731:765   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":621:639   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1957:2224  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":438:468  uint256 public royaltyFeeLimit */\n    tag_4:\n      tag_18\n      sload(0x01)\n      dup2\n      jump\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":922:947   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":910:912   */\n      0x20\n        /* \"#utility.yul\":895:913   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":438:468  uint256 public royaltyFeeLimit */\n      tag_16\n        /* \"#utility.yul\":776:953   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1104:1178   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1077:1095   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_16\n        /* \"#utility.yul\":958:1184   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1058:1361  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_7:\n      tag_22\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1367:1794  function updateRoyaltyInfoForCollection(... */\n    tag_8:\n      tag_22\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2266:2624  function royaltyFeeInfoCollection(address collection)... */\n    tag_9:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2456:2493  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2377:2384  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2456:2493  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2456:2481  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2456:2493  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2456:2500  _royaltyFeeInfoCollection[collection].setter */\n      dup1\n      sload\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2510:2556  _royaltyFeeInfoCollection[collection].receiver */\n      dup3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2566:2607  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      swap1\n      swap3\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2456:2500  _royaltyFeeInfoCollection[collection].setter */\n      swap2\n      dup4\n      and\n      swap4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2510:2556  _royaltyFeeInfoCollection[collection].receiver */\n      swap3\n      and\n      swap2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2266:2624  function royaltyFeeInfoCollection(address collection)... */\n      jump\n    tag_36:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2185:2227   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2254:2269   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":2236:2270   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2306:2321   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2301:2303   */\n      0x20\n        /* \"#utility.yul\":2286:2304   */\n      dup5\n      add\n        /* \"#utility.yul\":2279:2322   */\n      mstore\n        /* \"#utility.yul\":2338:2356   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2331:2365   */\n      mstore\n        /* \"#utility.yul\":2163:2165   */\n      0x60\n        /* \"#utility.yul\":2148:2166   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2266:2624  function royaltyFeeInfoCollection(address collection)... */\n      tag_16\n        /* \"#utility.yul\":1973:2371   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_22\n      tag_43\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1957:2224  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n    tag_15:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2091:2128  _royaltyFeeInfoCollection[collection] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup4\n      and\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2046:2053  address */\n      0x00\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2091:2128  _royaltyFeeInfoCollection[collection] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2091:2116  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2091:2128  _royaltyFeeInfoCollection[collection] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2091:2137  _royaltyFeeInfoCollection[collection].receiver */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2157:2198  _royaltyFeeInfoCollection[collection].fee */\n      swap2\n      add\n      sload\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2046:2053  address */\n      swap2\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2091:2137  _royaltyFeeInfoCollection[collection].receiver */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2202:2207  10000 */\n      0x2710\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2148:2198  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_46\n      swap1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2148:2154  amount */\n      dup7\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2148:2198  amount * _royaltyFeeInfoCollection[collection].fee */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2147:2207  (amount * _royaltyFeeInfoCollection[collection].fee) / 10000 */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":2074:2217  return (... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1957:2224  function royaltyInfo(address collection, uint256 amount) external view override returns (address, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1058:1361  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1223:1227  9500 */\n      0x251c\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1203:1219  _royaltyFeeLimit */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1203:1227  _royaltyFeeLimit <= 9500 */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1195:1258  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3184:3186   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1195:1258  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3166:3187   */\n      mstore\n        /* \"#utility.yul\":3223:3225   */\n      0x1a\n        /* \"#utility.yul\":3203:3221   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3196:3226   */\n      mstore\n        /* \"#utility.yul\":3262:3290   */\n      0x526f79616c747920666565206c696d697420746f6f2068696768000000000000\n        /* \"#utility.yul\":3242:3260   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3235:3291   */\n      mstore\n        /* \"#utility.yul\":3308:3326   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1195:1258  require(_royaltyFeeLimit <= 9500, \"Royalty fee limit too high\") */\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1268:1283  royaltyFeeLimit */\n      0x01\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1268:1302  royaltyFeeLimit = _royaltyFeeLimit */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1318:1354  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n        /* \"#utility.yul\":922:947   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1318:1354  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      0x2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256\n      swap1\n        /* \"#utility.yul\":910:912   */\n      0x20\n        /* \"#utility.yul\":895:913   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1318:1354  NewRoyaltyFeeLimit(_royaltyFeeLimit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1058:1361  function updateRoyaltyFeeLimit(uint256 _royaltyFeeLimit) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1367:1794  function updateRoyaltyInfoForCollection(... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1565:1580  royaltyFeeLimit */\n      sload(0x01)\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1558:1561  fee */\n      dup2\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1558:1580  fee <= royaltyFeeLimit */\n      gt\n      iszero\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1550:1615  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3539:3541   */\n      0x20\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1550:1615  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3521:3542   */\n      mstore\n        /* \"#utility.yul\":3578:3580   */\n      0x1e\n        /* \"#utility.yul\":3558:3576   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3551:3581   */\n      mstore\n        /* \"#utility.yul\":3617:3649   */\n      0x52656769737472793a20526f79616c74792066656520746f6f20686967680000\n        /* \"#utility.yul\":3597:3615   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3590:3650   */\n      mstore\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1550:1615  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n      tag_61\n        /* \"#utility.yul\":3337:3691   */\n      jump\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1550:1615  require(fee <= royaltyFeeLimit, \"Registry: Royalty fee too high\") */\n    tag_67:\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1665:1720  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      dup6\n      dup3\n      and\n      0x20\n      dup1\n      dup6\n      add\n      dup3\n      dup2\n      mstore\n      dup6\n      dup8\n      add\n      dup9\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1625:1662  _royaltyFeeInfoCollection[collection] */\n      dup12\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1625:1650  _royaltyFeeInfoCollection */\n      0x02\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1625:1662  _royaltyFeeInfoCollection[collection] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1625:1720  _royaltyFeeInfoCollection[collection] = FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap2\n      dup3\n      and\n      or\n      dup11\n      sstore\n      swap4\n      mload\n      0x01\n      dup11\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap10\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap7\n      sstore\n      mload\n      swap6\n      add\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1736:1787  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      swap4\n      mload\n        /* \"#utility.yul\":922:947   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1665:1720  FeeInfo({setter: setter, receiver: receiver, fee: fee}) */\n      swap1\n      swap3\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1736:1787  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      0xd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64\n      swap2\n        /* \"#utility.yul\":895:913   */\n      add\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1736:1787  RoyaltyFeeUpdate(collection, setter, receiver, fee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":1367:1794  function updateRoyaltyInfoForCollection(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3898:3900   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3880:3901   */\n      mstore\n        /* \"#utility.yul\":3937:3939   */\n      0x26\n        /* \"#utility.yul\":3917:3935   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3910:3940   */\n      mstore\n        /* \"#utility.yul\":3976:4010   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3956:3974   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3949:4011   */\n      mstore\n        /* \"#utility.yul\":4047:4055   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4027:4045   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4020:4056   */\n      mstore\n        /* \"#utility.yul\":4073:4092   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_61\n        /* \"#utility.yul\":3696:4098   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4287:4308   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4324:4342   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4317:4347   */\n      mstore\n        /* \"#utility.yul\":4383:4417   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4363:4381   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4356:4418   */\n      mstore\n        /* \"#utility.yul\":4435:4453   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_61\n        /* \"#utility.yul\":4103:4459   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_88:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_91:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:469   */\n    tag_14:\n        /* \"#utility.yul\":283:289   */\n      0x00\n        /* \"#utility.yul\":291:297   */\n      dup1\n        /* \"#utility.yul\":344:346   */\n      0x40\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":323:330   */\n      dup6\n        /* \"#utility.yul\":319:342   */\n      sub\n        /* \"#utility.yul\":315:347   */\n      slt\n        /* \"#utility.yul\":312:364   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":360:361   */\n      0x00\n        /* \"#utility.yul\":357:358   */\n      dup1\n        /* \"#utility.yul\":350:362   */\n      revert\n        /* \"#utility.yul\":312:364   */\n    tag_93:\n        /* \"#utility.yul\":383:412   */\n      tag_94\n        /* \"#utility.yul\":402:411   */\n      dup4\n        /* \"#utility.yul\":383:412   */\n      tag_88\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":373:412   */\n      swap5\n        /* \"#utility.yul\":459:461   */\n      0x20\n        /* \"#utility.yul\":444:462   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":431:463   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":215:469   */\n      jump\t// out\n        /* \"#utility.yul\":1189:1369   */\n    tag_30:\n        /* \"#utility.yul\":1248:1254   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1321   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1317:1318   */\n      0x00\n        /* \"#utility.yul\":1314:1315   */\n      dup1\n        /* \"#utility.yul\":1307:1319   */\n      revert\n        /* \"#utility.yul\":1269:1321   */\n    tag_99:\n      pop\n        /* \"#utility.yul\":1340:1363   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1189:1369   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1777   */\n    tag_34:\n        /* \"#utility.yul\":1460:1466   */\n      0x00\n        /* \"#utility.yul\":1468:1474   */\n      dup1\n        /* \"#utility.yul\":1476:1482   */\n      0x00\n        /* \"#utility.yul\":1484:1490   */\n      dup1\n        /* \"#utility.yul\":1537:1540   */\n      0x80\n        /* \"#utility.yul\":1525:1534   */\n      dup6\n        /* \"#utility.yul\":1516:1523   */\n      dup8\n        /* \"#utility.yul\":1512:1535   */\n      sub\n        /* \"#utility.yul\":1508:1541   */\n      slt\n        /* \"#utility.yul\":1505:1558   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":1554:1555   */\n      0x00\n        /* \"#utility.yul\":1551:1552   */\n      dup1\n        /* \"#utility.yul\":1544:1556   */\n      revert\n        /* \"#utility.yul\":1505:1558   */\n    tag_101:\n        /* \"#utility.yul\":1577:1606   */\n      tag_102\n        /* \"#utility.yul\":1596:1605   */\n      dup6\n        /* \"#utility.yul\":1577:1606   */\n      tag_88\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1567:1606   */\n      swap4\n      pop\n        /* \"#utility.yul\":1625:1663   */\n      tag_103\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1648:1657   */\n      dup7\n        /* \"#utility.yul\":1644:1662   */\n      add\n        /* \"#utility.yul\":1625:1663   */\n      tag_88\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1615:1663   */\n      swap3\n      pop\n        /* \"#utility.yul\":1682:1720   */\n      tag_104\n        /* \"#utility.yul\":1716:1718   */\n      0x40\n        /* \"#utility.yul\":1705:1714   */\n      dup7\n        /* \"#utility.yul\":1701:1719   */\n      add\n        /* \"#utility.yul\":1682:1720   */\n      tag_88\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1374:1777   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n        /* \"#utility.yul\":1672:1720   */\n      swap3\n      swap4\n        /* \"#utility.yul\":1767:1769   */\n      0x60\n        /* \"#utility.yul\":1752:1770   */\n      add\n        /* \"#utility.yul\":1739:1771   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":1374:1777   */\n      jump\t// out\n        /* \"#utility.yul\":1782:1968   */\n    tag_38:\n        /* \"#utility.yul\":1841:1847   */\n      0x00\n        /* \"#utility.yul\":1894:1896   */\n      0x20\n        /* \"#utility.yul\":1882:1891   */\n      dup3\n        /* \"#utility.yul\":1873:1880   */\n      dup5\n        /* \"#utility.yul\":1869:1892   */\n      sub\n        /* \"#utility.yul\":1865:1897   */\n      slt\n        /* \"#utility.yul\":1862:1914   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1910:1911   */\n      0x00\n        /* \"#utility.yul\":1907:1908   */\n      dup1\n        /* \"#utility.yul\":1900:1912   */\n      revert\n        /* \"#utility.yul\":1862:1914   */\n    tag_106:\n        /* \"#utility.yul\":1933:1962   */\n      tag_107\n        /* \"#utility.yul\":1952:1961   */\n      dup3\n        /* \"#utility.yul\":1933:1962   */\n      tag_88\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1923:1962   */\n      swap4\n        /* \"#utility.yul\":1782:1968   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2376:2698   */\n    tag_47:\n        /* \"#utility.yul\":2449:2458   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2480:2489   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2497:2512   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2491:2513   */\n      dup5\n      eq\n        /* \"#utility.yul\":2477:2514   */\n      or\n        /* \"#utility.yul\":2467:2692   */\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2548:2625   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2538:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x11\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2467:2692   */\n    tag_110:\n        /* \"#utility.yul\":2376:2698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2977   */\n    tag_49:\n        /* \"#utility.yul\":2743:2744   */\n      0x00\n        /* \"#utility.yul\":2769:2770   */\n      dup3\n        /* \"#utility.yul\":2759:2948   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":2804:2881   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2801:2802   */\n      0x00\n        /* \"#utility.yul\":2794:2882   */\n      mstore\n        /* \"#utility.yul\":2905:2909   */\n      0x12\n        /* \"#utility.yul\":2902:2903   */\n      0x04\n        /* \"#utility.yul\":2895:2910   */\n      mstore\n        /* \"#utility.yul\":2933:2937   */\n      0x24\n        /* \"#utility.yul\":2930:2931   */\n      0x00\n        /* \"#utility.yul\":2923:2938   */\n      revert\n        /* \"#utility.yul\":2759:2948   */\n    tag_112:\n      pop\n        /* \"#utility.yul\":2962:2971   */\n      div\n      swap1\n        /* \"#utility.yul\":2703:2977   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208db9a5fb841cb278be26294ea614b2970985dfdc787d6b8ecf65f3196f74dd0364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 150,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:555:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:4"
															},
															"nodeType": "YulIf",
															"src": "105:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:4",
														"type": ""
													}
												],
												"src": "14:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "377:176:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "394:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "387:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "439:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "417:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:4"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "483:28:4",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:56:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "521:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "354:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "368:4:4",
														"type": ""
													}
												],
												"src": "203:350:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161087a38038061087a83398101604081905261002f916100e6565b61003833610096565b61251c81111561008e5760405162461bcd60e51b815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f2068696768000000000000604482015260640160405180910390fd5b6001556100ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f857600080fd5b5051919050565b61076c8061010e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b9223c9d1161005b578063b9223c9d1461011a578063bbdf9b681461012d578063e31ef91c14610140578063f2fde38b146101bf57600080fd5b80632782d6c71461008d5780634fb7d3f9146100d1578063715018a6146100e85780638da5cb5b146100f2575b600080fd5b6100a061009b366004610607565b6101d2565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b6100da60015481565b6040519081526020016100c8565b6100f061022c565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c8565b6100f0610128366004610631565b610240565b6100f061013b36600461064a565b6102f4565b61018c61014e366004610695565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff9485168152939092166020840152908201526060016100c8565b6100f06101cd366004610695565b610431565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061021790866106b7565b61022191906106fb565b915091509250929050565b6102346104e8565b61023e6000610569565b565b6102486104e8565b61251c8111156102b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064015b60405180910390fd5b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6102fc6104e8565b600154811115610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016102b0565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b6104396104e8565b73ffffffffffffffffffffffffffffffffffffffff81166104dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b0565b6104e581610569565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b0565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461060257600080fd5b919050565b6000806040838503121561061a57600080fd5b610623836105de565b946020939093013593505050565b60006020828403121561064357600080fd5b5035919050565b6000806000806080858703121561066057600080fd5b610669856105de565b9350610677602086016105de565b9250610685604086016105de565b9396929550929360600135925050565b6000602082840312156106a757600080fd5b6106b0826105de565b9392505050565b80820281158282048414176106f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600082610731577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212208db9a5fb841cb278be26294ea614b2970985dfdc787d6b8ecf65f3196f74dd0364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x87A CODESIZE SUB DUP1 PUSH2 0x87A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x96 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76C DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9223C9D GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBBDF9B68 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x695 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x695 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x217 SWAP1 DUP7 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x6FB JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x234 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x23E PUSH1 0x0 PUSH2 0x569 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x248 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0x4E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x4E5 DUP2 PUSH2 0x569 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 DUP4 PUSH2 0x5DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x669 DUP6 PUSH2 0x5DE JUMP JUMPDEST SWAP4 POP PUSH2 0x677 PUSH1 0x20 DUP7 ADD PUSH2 0x5DE JUMP JUMPDEST SWAP3 POP PUSH2 0x685 PUSH1 0x40 DUP7 ADD PUSH2 0x5DE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B0 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x731 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB9 0xA5 0xFB DUP5 SHR 0xB2 PUSH25 0xBE26294EA614B2970985DFDC787D6B8ECF65F3196F74DD0364 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "225:2401:2:-:0;;;792:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;910:4:2;890:16;:24;;882:63;;;;-1:-1:-1;;;882:63:2;;405:2:4;882:63:2;;;387:21:4;444:2;424:18;;;417:30;483:28;463:18;;;456:56;529:18;;882:63:2;;;;;;;;955:15;:34;225:2401;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:184:4:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:4;;14:184;-1:-1:-1;14:184:4:o;203:350::-;225:2401:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1256,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1385,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 556,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeInfoCollection_307": {
									"entryPoint": null,
									"id": 307,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@royaltyFeeLimit_153": {
									"entryPoint": null,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_280": {
									"entryPoint": 466,
									"id": 280,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@transferOwnership_91": {
									"entryPoint": 1073,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeLimit_213": {
									"entryPoint": 576,
									"id": 213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyInfoForCollection_252": {
									"entryPoint": 756,
									"id": 252,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4461:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:4"
															},
															"nodeType": "YulIf",
															"src": "111:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:196:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "302:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "348:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "357:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "360:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "350:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "350:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "350:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "323:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "319:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "319:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "344:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "315:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:32:4"
															},
															"nodeType": "YulIf",
															"src": "312:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "373:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "402:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "383:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "421:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "448:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "459:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "444:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "444:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "431:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "421:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "260:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "271:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "283:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "291:6:4",
														"type": ""
													}
												],
												"src": "215:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "603:168:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "613:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "625:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "636:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "613:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "655:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "678:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "666:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "666:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:74:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:74:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "753:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "738:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:18:4"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "758:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "731:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "731:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "731:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "564:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "583:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "594:4:4",
														"type": ""
													}
												],
												"src": "474:297:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "877:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "887:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "899:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "895:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "887:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "929:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "940:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "922:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "846:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "857:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "868:4:4",
														"type": ""
													}
												],
												"src": "776:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1059:125:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1069:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1081:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1092:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1077:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1077:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1069:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1111:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1134:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1122:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1104:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:74:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1104:74:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1028:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1039:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1050:4:4",
														"type": ""
													}
												],
												"src": "958:226:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:110:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1314:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1317:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1307:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:4"
															},
															"nodeType": "YulIf",
															"src": "1269:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1330:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1353:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1340:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1340:23:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1225:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1236:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1248:6:4",
														"type": ""
													}
												],
												"src": "1189:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1495:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1542:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1551:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1554:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1544:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1544:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1544:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1516:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1512:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1512:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1537:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1508:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:33:4"
															},
															"nodeType": "YulIf",
															"src": "1505:53:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1567:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1596:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1577:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1615:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1648:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1659:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1644:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1644:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1625:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1672:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1705:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1716:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1701:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1701:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1682:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:38:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1672:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1729:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1756:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1767:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1752:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1752:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1739:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1739:32:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1437:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1448:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1460:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1468:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1476:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1484:6:4",
														"type": ""
													}
												],
												"src": "1374:403:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1852:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1898:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1907:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1910:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1873:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1882:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1869:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:32:4"
															},
															"nodeType": "YulIf",
															"src": "1862:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1923:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1952:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1933:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1923:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1818:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1829:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1841:6:4",
														"type": ""
													}
												],
												"src": "1782:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:241:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2140:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2152:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2148:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2140:4:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2175:52:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2185:42:4",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2179:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2243:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2266:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2236:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2236:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2290:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2301:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2286:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2286:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2310:6:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2318:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2306:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:15:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2279:43:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2279:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2342:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2353:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:18:4"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2358:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2331:34:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2083:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2094:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2102:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2110:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2121:4:4",
														"type": ""
													}
												],
												"src": "1973:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2428:270:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2438:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2453:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2456:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2438:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2524:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2545:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2548:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2538:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2538:88:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2487:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2480:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2480:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2494:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2501:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2510:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2497:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2497:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2491:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2491:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2477:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:37:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:45:4"
															},
															"nodeType": "YulIf",
															"src": "2467:225:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2407:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2410:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2416:7:4",
														"type": ""
													}
												],
												"src": "2376:322:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:228:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2780:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2801:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2804:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2794:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2794:88:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2794:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2905:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2895:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2895:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2930:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2933:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2923:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2923:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2923:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2769:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:9:4"
															},
															"nodeType": "YulIf",
															"src": "2759:189:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2957:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2966:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2969:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2962:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2957:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2734:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2737:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2743:1:4",
														"type": ""
													}
												],
												"src": "2703:274:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3156:176:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3173:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3166:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3166:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3166:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3207:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3218:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3196:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3257:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:18:4"
																	},
																	{
																		"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3262:28:4",
																		"type": "",
																		"value": "Royalty fee limit too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3235:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3235:56:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3235:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3300:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3300:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3133:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3147:4:4",
														"type": ""
													}
												],
												"src": "2982:350:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:180:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3528:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3539:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3562:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3573:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3558:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3558:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3578:2:4",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3551:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3551:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3601:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3612:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3597:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3597:18:4"
																	},
																	{
																		"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3617:32:4",
																		"type": "",
																		"value": "Registry: Royalty fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3590:60:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3590:60:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3659:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3671:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3682:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3667:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3659:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3488:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3502:4:4",
														"type": ""
													}
												],
												"src": "3337:354:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3870:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3887:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3937:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3910:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3910:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3910:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3960:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3971:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3956:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3956:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3976:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3949:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3949:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4042:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4027:18:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4047:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3847:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3861:4:4",
														"type": ""
													}
												],
												"src": "3696:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4277:182:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4294:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4287:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4287:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4328:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4339:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4317:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4317:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4367:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4378:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4363:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4363:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4383:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4356:62:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4427:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4439:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4450:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4427:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4254:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4268:4:4",
														"type": ""
													}
												],
												"src": "4103:356:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Royalty fee limit too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Registry: Royalty fee too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063b9223c9d1161005b578063b9223c9d1461011a578063bbdf9b681461012d578063e31ef91c14610140578063f2fde38b146101bf57600080fd5b80632782d6c71461008d5780634fb7d3f9146100d1578063715018a6146100e85780638da5cb5b146100f2575b600080fd5b6100a061009b366004610607565b6101d2565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b6100da60015481565b6040519081526020016100c8565b6100f061022c565b005b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c8565b6100f0610128366004610631565b610240565b6100f061013b36600461064a565b6102f4565b61018c61014e366004610695565b73ffffffffffffffffffffffffffffffffffffffff908116600090815260026020819052604090912080546001820154919092015491831693921691565b6040805173ffffffffffffffffffffffffffffffffffffffff9485168152939092166020840152908201526060016100c8565b6100f06101cd366004610695565b610431565b73ffffffffffffffffffffffffffffffffffffffff808316600090815260026020819052604082206001810154910154919283929116906127109061021790866106b7565b61022191906106fb565b915091509250929050565b6102346104e8565b61023e6000610569565b565b6102486104e8565b61251c8111156102b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f526f79616c747920666565206c696d697420746f6f206869676800000000000060448201526064015b60405180910390fd5b60018190556040518181527f2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c2569060200160405180910390a150565b6102fc6104e8565b600154811115610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f52656769737472793a20526f79616c74792066656520746f6f2068696768000060448201526064016102b0565b6040805160608101825273ffffffffffffffffffffffffffffffffffffffff85811680835285821660208085018281528587018881528b861660008181526002808652908a9020985189549089167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216178a55935160018a0180549190991694169390931790965551950194909455935185815290927fd01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64910160405180910390a450505050565b6104396104e8565b73ffffffffffffffffffffffffffffffffffffffff81166104dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b0565b6104e581610569565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b0565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461060257600080fd5b919050565b6000806040838503121561061a57600080fd5b610623836105de565b946020939093013593505050565b60006020828403121561064357600080fd5b5035919050565b6000806000806080858703121561066057600080fd5b610669856105de565b9350610677602086016105de565b9250610685604086016105de565b9396929550929360600135925050565b6000602082840312156106a757600080fd5b6106b0826105de565b9392505050565b80820281158282048414176106f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600082610731577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212208db9a5fb841cb278be26294ea614b2970985dfdc787d6b8ecf65f3196f74dd0364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9223C9D GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xB9223C9D EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xBBDF9B68 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xE31EF91C EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2782D6C7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x4FB7D3F9 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x695 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP4 AND SWAP4 SWAP3 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF0 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x695 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x217 SWAP1 DUP7 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x6FB JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x234 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x23E PUSH1 0x0 PUSH2 0x569 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x248 PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x251C DUP2 GT ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920666565206C696D697420746F6F2068696768000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x2FC PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656769737472793A20526F79616C74792066656520746F6F20686967680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP4 MSTORE DUP6 DUP3 AND PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE DUP12 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 DUP3 AND OR DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP10 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP7 SSTORE MLOAD SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xD01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH2 0x439 PUSH2 0x4E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x4E5 DUP2 PUSH2 0x569 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 DUP4 PUSH2 0x5DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x669 DUP6 PUSH2 0x5DE JUMP JUMPDEST SWAP4 POP PUSH2 0x677 PUSH1 0x20 DUP7 ADD PUSH2 0x5DE JUMP JUMPDEST SWAP3 POP PUSH2 0x685 PUSH1 0x40 DUP7 ADD PUSH2 0x5DE JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B0 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6F5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x731 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB9 0xA5 0xFB DUP5 SHR 0xB2 PUSH25 0xBE26294EA614B2970985DFDC787D6B8ECF65F3196F74DD0364 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "225:2401:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:267;;;;;;:::i;:::-;;:::i;:::-;;;;678:42:4;666:55;;;648:74;;753:2;738:18;;731:34;;;;621:18;1957:267:2;;;;;;;;438:30;;;;;;;;;922:25:4;;;910:2;895:18;438:30:2;776:177:4;1831:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;1273:6;;;;1104:74:4;;1092:2;1077:18;1201:85:0;958:226:4;1058:303:2;;;;;;:::i;:::-;;:::i;1367:427::-;;;;;;:::i;:::-;;:::i;2266:358::-;;;;;;:::i;:::-;2456:37;;;;2377:7;2456:37;;;:25;:37;;;;;;;;:44;;;2510:46;;;2566:41;;;;;2456:44;;;;2510:46;;;2266:358;;;;;2185:42:4;2254:15;;;2236:34;;2306:15;;;;2301:2;2286:18;;2279:43;2338:18;;;2331:34;2163:2;2148:18;2266:358:2;1973:398:4;2081:198:0;;;;;;:::i;:::-;;:::i;1957:267:2:-;2091:37;;;;2046:7;2091:37;;;:25;:37;;;;;;;:46;;;;2157:41;;;2046:7;;;;2091:46;;;2202:5;;2148:50;;:6;:50;:::i;:::-;2147:60;;;;:::i;:::-;2074:143;;;;1957:267;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1058:303:2:-;1094:13:0;:11;:13::i;:::-;1223:4:2::1;1203:16;:24;;1195:63;;;::::0;::::1;::::0;;3184:2:4;1195:63:2::1;::::0;::::1;3166:21:4::0;3223:2;3203:18;;;3196:30;3262:28;3242:18;;;3235:56;3308:18;;1195:63:2::1;;;;;;;;;1268:15;:34:::0;;;1318:36:::1;::::0;922:25:4;;;1318:36:2::1;::::0;910:2:4;895:18;1318:36:2::1;;;;;;;1058:303:::0;:::o;1367:427::-;1094:13:0;:11;:13::i;:::-;1565:15:2::1;;1558:3;:22;;1550:65;;;::::0;::::1;::::0;;3539:2:4;1550:65:2::1;::::0;::::1;3521:21:4::0;3578:2;3558:18;;;3551:30;3617:32;3597:18;;;3590:60;3667:18;;1550:65:2::1;3337:354:4::0;1550:65:2::1;1665:55;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;::::1;;::::0;;::::1;::::0;;;;;;;;;1625:37;;::::1;-1:-1:-1::0;1625:37:2;;;:25:::1;:37:::0;;;;;;;:95;;;;;;::::1;::::0;;;::::1;;::::0;;;;-1:-1:-1;1625:95:2;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;1736:51;;922:25:4;;;1665:55:2;;1736:51:::1;::::0;895:18:4;1736:51:2::1;;;;;;;1367:427:::0;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;3898:2:4;2161:73:0::1;::::0;::::1;3880:21:4::0;3937:2;3917:18;;;3910:30;3976:34;3956:18;;;3949:62;4047:8;4027:18;;;4020:36;4073:19;;2161:73:0::1;3696:402:4::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:1;1422:23:0;1414:68;;;;;;;4305:2:4;1414:68:0;;;4287:21:4;;;4324:18;;;4317:30;4383:34;4363:18;;;4356:62;4435:18;;1414:68:0;4103:356:4;2433:187:0;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:196:4:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:4:o;1189:180::-;1248:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:52;;;1317:1;1314;1307:12;1269:52;-1:-1:-1;1340:23:4;;1189:180;-1:-1:-1;1189:180:4:o;1374:403::-;1460:6;1468;1476;1484;1537:3;1525:9;1516:7;1512:23;1508:33;1505:53;;;1554:1;1551;1544:12;1505:53;1577:29;1596:9;1577:29;:::i;:::-;1567:39;;1625:38;1659:2;1648:9;1644:18;1625:38;:::i;:::-;1615:48;;1682:38;1716:2;1705:9;1701:18;1682:38;:::i;:::-;1374:403;;;;-1:-1:-1;1672:48:4;;1767:2;1752:18;1739:32;;-1:-1:-1;;1374:403:4:o;1782:186::-;1841:6;1894:2;1882:9;1873:7;1869:23;1865:32;1862:52;;;1910:1;1907;1900:12;1862:52;1933:29;1952:9;1933:29;:::i;:::-;1923:39;1782:186;-1:-1:-1;;;1782:186:4:o;2376:322::-;2449:9;;;2480;;2497:15;;;2491:22;;2477:37;2467:225;;2548:77;2545:1;2538:88;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2467:225;2376:322;;;;:::o;2703:274::-;2743:1;2769;2759:189;;2804:77;2801:1;2794:88;2905:4;2902:1;2895:15;2933:4;2930:1;2923:15;2759:189;-1:-1:-1;2962:9:4;;2703:274::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "380000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2356",
								"renounceOwnership()": "infinite",
								"royaltyFeeInfoCollection(address)": "6868",
								"royaltyFeeLimit()": "2318",
								"royaltyInfo(address,uint256)": "4894",
								"transferOwnership(address)": "28336",
								"updateRoyaltyFeeLimit(uint256)": "25567",
								"updateRoyaltyInfoForCollection(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 2626,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 792,
									"end": 996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 792,
									"end": 996,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 792,
									"end": 996,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 910,
									"end": 914,
									"name": "PUSH",
									"source": 2,
									"value": "251C"
								},
								{
									"begin": 890,
									"end": 906,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 890,
									"end": 914,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 890,
									"end": 914,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 882,
									"end": 945,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 387,
									"end": 408,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "1A"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 424,
									"end": 442,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 417,
									"end": 447,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 483,
									"end": 511,
									"name": "PUSH",
									"source": 4,
									"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 463,
									"end": 481,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 463,
									"end": 481,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 456,
									"end": 512,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 529,
									"end": 547,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 529,
									"end": 547,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 882,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 882,
									"end": 945,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 882,
									"end": 945,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 955,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 989,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 203,
									"end": 553,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 203,
									"end": 553,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 2626,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208db9a5fb841cb278be26294ea614b2970985dfdc787d6b8ecf65f3196f74dd0364736f6c63430008110033",
									".code": [
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "B9223C9D"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "B9223C9D"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "BBDF9B68"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "E31EF91C"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "2782D6C7"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "4FB7D3F9"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 2626,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1957,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1957,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 678,
											"end": 720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 666,
											"end": 721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 666,
											"end": 721,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 666,
											"end": 721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 648,
											"end": 722,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 648,
											"end": 722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 753,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 731,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 731,
											"end": 765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 731,
											"end": 765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 731,
											"end": 765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 621,
											"end": 639,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 468,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 922,
											"end": 947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 910,
											"end": 912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 438,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 776,
											"end": 953,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1104,
											"end": 1178,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 958,
											"end": 1184,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1058,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1058,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1367,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1367,
											"end": 1794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2266,
											"end": 2624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2493,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2500,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2500,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2510,
											"end": 2556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2607,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2607,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2500,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2556,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2556,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2556,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2227,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2269,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2269,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2269,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2306,
											"end": 2321,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2304,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2266,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1973,
											"end": 2371,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2116,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2128,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2137,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2198,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2137,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2137,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2207,
											"name": "PUSH",
											"source": 2,
											"value": "2710"
										},
										{
											"begin": 2202,
											"end": 2207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2148,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2147,
											"end": 2207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2147,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 2224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "251C"
										},
										{
											"begin": 1203,
											"end": 1219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1227,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1227,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3186,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3166,
											"end": 3187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3225,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3290,
											"name": "PUSH",
											"source": 4,
											"value": "526F79616C747920666565206C696D697420746F6F2068696768000000000000"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3235,
											"end": 3291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1195,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1354,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2DA7166C72EF3860EF4FB2571105533C40615269A6DBC38CE0B264910DF1C256"
										},
										{
											"begin": 1318,
											"end": 1354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 910,
											"end": 912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1354,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1058,
											"end": 1361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1580,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1580,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1580,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1615,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1550,
											"end": 1615,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1615,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1550,
											"end": 1615,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3542,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 3558,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3558,
											"end": 3576,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3558,
											"end": 3576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "52656769737472793A20526F79616C74792066656520746F6F20686967680000"
										},
										{
											"begin": 3597,
											"end": 3615,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3597,
											"end": 3615,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3337,
											"end": 3691,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1550,
											"end": 1615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1662,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1625,
											"end": 1720,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 947,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 922,
											"end": 947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 922,
											"end": 947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1720,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "D01984AFA6E37420452E575E7D99DD7E632B3EC8EA2ADEC998475B76CA494D64"
										},
										{
											"begin": 1736,
											"end": 1787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 895,
											"end": 913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1787,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3901,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3937,
											"end": 3939,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3910,
											"end": 3940,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 3974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 4011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4056,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4092,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4073,
											"end": 4092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3696,
											"end": 4098,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4308,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4308,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4417,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4363,
											"end": 4381,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4363,
											"end": 4381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4356,
											"end": 4418,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4103,
											"end": 4459,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 215,
											"end": 469,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 215,
											"end": 469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 283,
											"end": 289,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 344,
											"end": 346,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 323,
											"end": 330,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 319,
											"end": 342,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 315,
											"end": 347,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 312,
											"end": 364,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 312,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 360,
											"end": 361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 358,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 350,
											"end": 362,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 312,
											"end": 364,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 312,
											"end": 364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 402,
											"end": 411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 383,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 383,
											"end": 412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 383,
											"end": 412,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 383,
											"end": 412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 412,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 459,
											"end": 461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 463,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 463,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1369,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1189,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1317,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1319,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1363,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1340,
											"end": 1363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1777,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1374,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1466,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1516,
											"end": 1523,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1541,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1505,
											"end": 1558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1556,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1558,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1505,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1577,
											"end": 1606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1577,
											"end": 1606,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1577,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1606,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1625,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1625,
											"end": 1663,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1625,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1716,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1714,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1719,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1682,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1682,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1777,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1777,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1777,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1777,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1720,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1968,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1782,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1882,
											"end": 1891,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1880,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1869,
											"end": 1892,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1914,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1862,
											"end": 1914,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 1912,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1914,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1862,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1933,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 1962,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1933,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1962,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1968,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2376,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2497,
											"end": 2512,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2513,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2513,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2514,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2467,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2467,
											"end": 2692,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2626,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2467,
											"end": 2692,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2467,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2698,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2977,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2703,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2759,
											"end": 2948,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2881,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2909,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2938,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2948,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2759,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
								"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyFeeLimit()": "4fb7d3f9",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"transferOwnership(address)": "f2fde38b",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollection(address,address,address,uint256)": "bbdf9b68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"NewRoyaltyFeeLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RoyaltyFeeUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":\"RoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Manager/royalty/RoyaltyFeeRegistry.sol\":{\"keccak256\":\"0xf45d3a39f8208fc7ebdc36c4f0f4c507d8b7b1e2abf64ba6a010b5692165f533\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37d27969c2e74e29471c0b13bd6ffb2fb99e3d4f835a46669a3ab6f13bea9140\",\"dweb:/ipfs/QmRUazNGRXac3tNy2x72SHbByeep6W7AGaa4foBNpnkz12\"]},\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 153,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "royaltyFeeLimit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 158,
								"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
								"label": "_royaltyFeeInfoCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(FeeInfo)151_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(FeeInfo)151_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(FeeInfo)151_storage"
							},
							"t_struct(FeeInfo)151_storage": {
								"encoding": "inplace",
								"label": "struct RoyaltyFeeRegistry.FeeInfo",
								"members": [
									{
										"astId": 146,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "setter",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 148,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "receiver",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 150,
										"contract": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol:RoyaltyFeeRegistry",
										"label": "fee",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"IRoyaltyFeeRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "royaltyFeeInfoCollection",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_royaltyFeeLimit",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyFeeLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "setter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "updateRoyaltyInfoForCollection",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyFeeInfoCollection(address)": "e31ef91c",
							"royaltyInfo(address,uint256)": "2782d6c7",
							"updateRoyaltyFeeLimit(uint256)": "b9223c9d",
							"updateRoyaltyInfoForCollection(address,address,address,uint256)": "bbdf9b68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"royaltyFeeInfoCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_royaltyFeeLimit\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyFeeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"updateRoyaltyInfoForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":\"IRoyaltyFeeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol\":{\"keccak256\":\"0x3d1aef933c5c45cae2a9d102babd425844eaec353a84f6c3bf659336038e1cf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://721a303c1a32c92841d2c9541e3fc7afd440af8ee20bbba620814a8be8f57d11\",\"dweb:/ipfs/QmQWrBJJDiqZ62qfQa2fpAfgWYgyPDEePCrLtZjmd6FJu4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/Manager/royalty/RoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/RoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							349
						],
						"Ownable": [
							112
						],
						"RoyaltyFeeRegistry": [
							308
						]
					},
					"id": 309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 113,
							"src": "57:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 137,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "65:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
							"file": "./interface/IRoyaltyFeeRegistry.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 309,
							"sourceUnit": 350,
							"src": "126:72:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IRoyaltyFeeRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 349,
										"src": "134:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 141,
										"name": "IRoyaltyFeeRegistry",
										"nameLocations": [
											"256:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "256:19:2"
									},
									"id": 142,
									"nodeType": "InheritanceSpecifier",
									"src": "256:19:2"
								},
								{
									"baseName": {
										"id": 143,
										"name": "Ownable",
										"nameLocations": [
											"277:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "277:7:2"
									},
									"id": 144,
									"nodeType": "InheritanceSpecifier",
									"src": "277:7:2"
								}
							],
							"canonicalName": "RoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 308,
							"linearizedBaseContracts": [
								308,
								112,
								134,
								349
							],
							"name": "RoyaltyFeeRegistry",
							"nameLocation": "234:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "RoyaltyFeeRegistry.FeeInfo",
									"id": 151,
									"members": [
										{
											"constant": false,
											"id": 146,
											"mutability": "mutable",
											"name": "setter",
											"nameLocation": "324:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "316:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 145,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "316:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "348:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "340:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 147,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "340:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "374:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 151,
											"src": "366:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 149,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "366:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeInfo",
									"nameLocation": "298:7:2",
									"nodeType": "StructDefinition",
									"scope": 308,
									"src": "291:93:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4fb7d3f9",
									"id": 153,
									"mutability": "mutable",
									"name": "royaltyFeeLimit",
									"nameLocation": "453:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "438:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_royaltyFeeInfoCollection",
									"nameLocation": "554:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 308,
									"src": "518:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
										"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
									},
									"typeName": {
										"id": 157,
										"keyType": {
											"id": 154,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "526:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "518:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
											"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo)"
										},
										"valueType": {
											"id": 156,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 155,
												"name": "FeeInfo",
												"nameLocations": [
													"537:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "537:7:2"
											},
											"referencedDeclaration": 151,
											"src": "537:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeeInfo_$151_storage_ptr",
												"typeString": "struct RoyaltyFeeRegistry.FeeInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2da7166c72ef3860ef4fb2571105533c40615269a6dbc38ce0b264910df1c256",
									"id": 162,
									"name": "NewRoyaltyFeeLimit",
									"nameLocation": "592:18:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "royaltyFeeLimit",
												"nameLocation": "619:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "611:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:25:2"
									},
									"src": "586:50:2"
								},
								{
									"anonymous": false,
									"eventSelector": "d01984afa6e37420452e575e7d99dd7e632b3ec8ea2adec998475b76ca494d64",
									"id": 172,
									"name": "RoyaltyFeeUpdate",
									"nameLocation": "647:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "680:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "664:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "708:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "692:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "732:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "716:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "750:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "742:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:91:2"
									},
									"src": "641:114:2"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "830:166:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 178,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "890:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "910:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "890:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "916:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "882:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "882:63:2"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "955:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "973:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "955:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "955:34:2"
											}
										]
									},
									"id": 189,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "812:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "804:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:26:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:0:2"
									},
									"scope": 308,
									"src": "792:204:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										326
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "1143:218:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 198,
																"name": "_royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "1203:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "39353030",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1223:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9500_by_1",
																	"typeString": "int_const 9500"
																},
																"value": "9500"
															},
															"src": "1203:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920666565206c696d697420746f6f2068696768",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															},
															"value": "Royalty fee limit too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b19c18e20cbf7af8d6fd13dc8c5d6e58c3181be614fdd0dd5d2224da8f72dbf",
																"typeString": "literal_string \"Royalty fee limit too high\""
															}
														],
														"id": 197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1195:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "1195:63:2"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1268:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "_royaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "1286:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1268:34:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 209,
															"name": "_royaltyFeeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1337:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "NewRoyaltyFeeLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1318:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1318:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "EmitStatement",
												"src": "1313:41:2"
											}
										]
									},
									"functionSelector": "b9223c9d",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 195,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 194,
												"name": "onlyOwner",
												"nameLocations": [
													"1133:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1133:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1133:9:2"
										}
									],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "1067:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1124:8:2"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "1097:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1089:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:26:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:2"
									},
									"scope": 308,
									"src": "1058:303:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										321
									],
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "1540:254:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 228,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "1558:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 229,
																"name": "royaltyFeeLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "1565:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1558:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52656769737472793a20526f79616c74792066656520746f6f2068696768",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1582:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															},
															"value": "Registry: Royalty fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aeaf24eb7152a814b205b4fae7053ab9535979d86019e97b7aa504897754f606",
																"typeString": "literal_string \"Registry: Royalty fee too high\""
															}
														],
														"id": 227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1550:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "1550:65:2"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 234,
															"name": "_royaltyFeeInfoCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1625:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
															}
														},
														"id": 236,
														"indexExpression": {
															"id": 235,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1651:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1625:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 238,
																"name": "setter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "1682:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 239,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "1700:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 240,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "1715:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 237,
															"name": "FeeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1665:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FeeInfo_$151_storage_ptr_$",
																"typeString": "type(struct RoyaltyFeeRegistry.FeeInfo storage pointer)"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1674:6:2",
															"1690:8:2",
															"1710:3:2"
														],
														"names": [
															"setter",
															"receiver",
															"fee"
														],
														"nodeType": "FunctionCall",
														"src": "1665:55:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeInfo_$151_memory_ptr",
															"typeString": "struct RoyaltyFeeRegistry.FeeInfo memory"
														}
													},
													"src": "1625:95:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
														"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1625:95:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "1753:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "setter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "1765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1773:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 248,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "1783:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 244,
														"name": "RoyaltyFeeUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "1736:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "EmitStatement",
												"src": "1731:56:2"
											}
										]
									},
									"functionSelector": "bbdf9b68",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 225,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 224,
												"name": "onlyOwner",
												"nameLocations": [
													"1530:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1530:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1530:9:2"
										}
									],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "1376:30:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1521:8:2"
									},
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1424:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1416:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "1452:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1444:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1476:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1468:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1502:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1494:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:105:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1540:0:2"
									},
									"scope": 308,
									"src": "1367:427:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										337
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "2064:160:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 264,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2091:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 266,
																"indexExpression": {
																	"id": 265,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2117:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2091:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2129:8:2",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "2091:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 268,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2148:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 269,
																					"name": "_royaltyFeeInfoCollection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 158,
																					"src": "2157:25:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																						"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																					}
																				},
																				"id": 271,
																				"indexExpression": {
																					"id": 270,
																					"name": "collection",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2183:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2157:37:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																					"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																				}
																			},
																			"id": 272,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2195:3:2",
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 150,
																			"src": "2157:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2148:50:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 274,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2147:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2202:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2147:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 277,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2081:136:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 263,
												"id": 278,
												"nodeType": "Return",
												"src": "2074:143:2"
											}
										]
									},
									"functionSelector": "2782d6c7",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "1966:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 258,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2028:8:2"
									},
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1986:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1978:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2006:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1998:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1977:36:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2055:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:18:2"
									},
									"scope": 308,
									"src": "1957:267:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										348
									],
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "2429:195:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 292,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2456:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 294,
																"indexExpression": {
																	"id": 293,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "2482:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2456:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2494:6:2",
															"memberName": "setter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 146,
															"src": "2456:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 296,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2510:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 298,
																"indexExpression": {
																	"id": 297,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "2536:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2510:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2548:8:2",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "2510:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 300,
																	"name": "_royaltyFeeInfoCollection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "2566:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FeeInfo_$151_storage_$",
																		"typeString": "mapping(address => struct RoyaltyFeeRegistry.FeeInfo storage ref)"
																	}
																},
																"id": 302,
																"indexExpression": {
																	"id": 301,
																	"name": "collection",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "2592:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2566:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeInfo_$151_storage",
																	"typeString": "struct RoyaltyFeeRegistry.FeeInfo storage ref"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2604:3:2",
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 150,
															"src": "2566:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 304,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2446:171:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 291,
												"id": 305,
												"nodeType": "Return",
												"src": "2439:178:2"
											}
										]
									},
									"functionSelector": "e31ef91c",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "2275:24:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 284,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2346:8:2"
									},
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2308:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2300:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:20:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2377:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2394:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "2411:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:57:2"
									},
									"scope": 308,
									"src": "2266:358:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 309,
							"src": "225:2401:2",
							"usedErrors": []
						}
					],
					"src": "32:2595:2"
				},
				"id": 2
			},
			"contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/royalty/interface/IRoyaltyFeeRegistry.sol",
					"exportedSymbols": {
						"IRoyaltyFeeRegistry": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyaltyFeeRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "IRoyaltyFeeRegistry",
							"nameLocation": "67:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bbdf9b68",
									"id": 321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyInfoForCollection",
									"nameLocation": "102:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "150:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "142:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "178:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "170:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "202:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "194:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "228:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "220:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:105:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:3"
									},
									"scope": 349,
									"src": "93:154:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9223c9d",
									"id": 326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRoyaltyFeeLimit",
									"nameLocation": "261:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_royaltyFeeLimit",
												"nameLocation": "291:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "283:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:26:3"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:3"
									},
									"scope": 349,
									"src": "252:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2782d6c7",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "333:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "353:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "345:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "373:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "365:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:36:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "404:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "413:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:18:3"
									},
									"scope": 349,
									"src": "324:98:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e31ef91c",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyFeeInfoCollection",
									"nameLocation": "437:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "470:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "462:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:20:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "542:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "563:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "584:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:73:3"
									},
									"scope": 349,
									"src": "428:174:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 350,
							"src": "57:547:3",
							"usedErrors": []
						}
					],
					"src": "32:573:3"
				},
				"id": 3
			}
		}
	}
}