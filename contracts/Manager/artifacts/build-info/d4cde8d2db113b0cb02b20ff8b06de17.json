{
	"id": "d4cde8d2db113b0cb02b20ff8b06de17",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Manager/UnemetaMarket.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IERC20, SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport {TheCurrencyManager} from \"./interface/TheCurrencyManager.sol\";\nimport {TheExManager} from \"./interface/TheExManager.sol\";\nimport {TheExStrategy} from \"./execution/interface/TheExecutionStrategy.sol\";\nimport {TheRoyaltyManager} from \"./interface/TheRoyaltyFeeManager.sol\";\nimport {TheUnemetaExchange} from \"./interface/TheUnemetaExchange.sol\";\nimport {TheTransferManager} from \"./interface/TheTransferManager.sol\";\nimport {TheTransferSelector} from \"./trans/interface/TheTransFerSelector.sol\";\nimport {IWETH} from \"./interface/IWETH.sol\";\n\nimport {OrderTypes} from \"../libraries/OrderTypes.sol\";\nimport {SignatureChecker} from \"../libraries/SignatureChecker.sol\";\n\n\n//UnemetaExchange\ncontract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {\n    // Load safe erc20\n    using SafeERC20 for IERC20;\n    using OrderTypes for OrderTypes.MakerOrder;\n    using OrderTypes for OrderTypes.TakerOrder;\n\n    //Cancel all orders\n    event CancelAllOrders(address indexed user, uint256 newMinNonce);\n    // Cancel some orders\n    event CancelMultipleOrders(address indexed user, uint256[] orderNonces);\n    // New currency manager address\n    event NewCurrencyManager(address indexed currencyManager);\n    // New execution manager address\n    event NewExecutionManager(address indexed executionManager);\n    // new platform transaction fee receipient address\n    event NewProtocolFeeRecipient(address indexed protocolFeeRecipient);\n    // New royalty fee receipient address\n    event NewRoyaltyFeeManager(address indexed royaltyFeeManager);\n    // New NFT transfer selector\n    event NewTransferSelectorNFT(address indexed transferSelectorNFT);\n\n    // Defaulty wetg address\n    address public immutable WETH;\n    // Defualt eip712 domain hash\n    address public protocolFeeRecipient;\n\n\n    TheCurrencyManager public currencyManager;\n    TheExManager public executionManager;\n    TheRoyaltyManager public royaltyFeeManager;\n    TheTransferSelector public transferSelectorNFT;\n\n\n    // Users' minimal nonce map\n    mapping(address => uint256) public userMinOrderNonce;\n    // User proceeds to execution or cancellation\n    mapping(address => mapping(uint256 => bool)) private _theUserOrderExecutedOrCancelled;\n\n    /*Royalty fee payment structure*/\n    event RoyaltyPayment(\n        address indexed collection, //collection address\n        uint256 indexed tokenId, //token id\n        address indexed royaltyRecipient, //recipient wallet address\n        address currency, //currency\n        uint256 amount//amount\n    );\n\n    //Ask price structure\n    event TakerAsk(\n        bytes32 orderHash,\n        uint256 orderNonce,\n        address indexed taker,\n        address indexed maker,\n        address indexed strategy,\n        address currency,\n        address collection,\n        uint256 tokenId,\n        uint256 amount,\n        uint256 price\n    );\n\n    //Bid price structure\n    event TakerBid(\n        bytes32 orderHash,\n        uint256 orderNonce,\n        address indexed taker,\n        address indexed maker,\n        address indexed strategy,\n        address currency,\n        address collection,\n        uint256 tokenId,\n        uint256 amount,\n        uint256 price\n    );\n\n    //—————————————————————————————————constructor function—————————————————————————————————\n    // Initialize contract using the input parameters\n    // Including currency manager, execution manager, royalty manager, NFT transfer selector, weth address, platform transaction fee receipient\n    constructor(\n        address _currencyManager, //currency manager\n        address _executionManager, //execution manager\n        address _royaltyFeeManager, //royalty fee manager\n        address _WETH, //WETH address\n        address _protocolFeeRecipient// platform transaction fee recipient\n    ) {\n        currencyManager = TheCurrencyManager(_currencyManager);\n        executionManager = TheExManager(_executionManager);\n        royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager);\n        WETH = _WETH;\n        protocolFeeRecipient = _protocolFeeRecipient;\n    }\n\n\n\n    //\n    // function matchSellerOrdersWETH\n    //  @Description: Match seller order with weth and eth\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function matchSellerOrdersWETH(\n        OrderTypes.TakerOrder calldata takerBid,\n        OrderTypes.MakerOrder calldata makerAsk\n    ) external payable override nonReentrant {\n        require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\");\n        // Confirm using weth\n        require(makerAsk.currency == WETH, \"Currency must be WETH\");\n        require(msg.sender == takerBid.taker, \"Order must be the sender\");\n\n        // if the balance of eth is low then use weth\n        if (takerBid.price > msg.value) {\n            IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value));\n        } else {\n            require(takerBid.price == msg.value, \"Msg.value is too high\");\n        }\n\n        //deposit weth\n        IWETH(WETH).deposit{value : msg.value}();\n\n        // Confirm users of offer and make\n        bytes32 askHash = makerAsk.hash();\n        _validateOrder(makerAsk, askHash);\n\n        // Confirm execution parameters\n        (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)\n        .canExecuteSell(takerBid, makerAsk);\n\n        require(isExecutionValid, \"Strategy should be valid\");\n\n        // Update the random number status of current order to be true, avoid reentrancy\n        _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true;\n\n        // transfer fund\n        _transferFeesAndFundsWithWETH(\n            makerAsk.strategy,\n            makerAsk.collection,\n            tokenId,\n            makerAsk.signer,\n            takerBid.price,\n            makerAsk.minPercentageToAsk\n        );\n\n        // transfer nft\n        _transferNonFungibleToken(\n            makerAsk.collection,\n            makerAsk.signer,\n            takerBid.taker,\n            tokenId,\n            amount);\n\n        emit TakerBid(\n            askHash,\n            makerAsk.nonce,\n            takerBid.taker,\n            makerAsk.signer,\n            makerAsk.strategy,\n            makerAsk.currency,\n            makerAsk.collection,\n            tokenId,\n            amount,\n            takerBid.price\n        );\n    }\n\n    //\n    // function matchSellerOrders\n    //  @Description: matchi seller order\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n    external\n    override\n    nonReentrant\n    {\n        //Confirm the listing is valid and not a bid order\n        require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\");\n        // order must be from the bidder\n        require(msg.sender == takerBid.taker, \"Order must be the sender\");\n\n        //  validate signature\n        bytes32 askHash = makerAsk.hash();\n        _validateOrder(makerAsk, askHash);\n\n        //\n        (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)\n        .canExecuteSell(takerBid, makerAsk);\n\n        // Confirm valid execution\n        require(isExecutionValid, \"Strategy should be valid\");\n\n        // Update the random number status of current order to be true, avoid reentrancy\n        _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true;\n\n        // transfer fund\n        _transferFeesAndFunds(\n            makerAsk.strategy,\n            makerAsk.collection,\n            tokenId,\n            makerAsk.currency,\n            msg.sender,\n            makerAsk.signer,\n            takerBid.price,\n            makerAsk.minPercentageToAsk\n        );\n\n        //transfer nft\n        _transferNonFungibleToken(\n            makerAsk.collection,\n            makerAsk.signer,\n            takerBid.taker,\n            tokenId,\n            amount);\n\n        emit TakerBid(\n            askHash,\n            makerAsk.nonce,\n            takerBid.taker,\n            makerAsk.signer,\n            makerAsk.strategy,\n            makerAsk.currency,\n            makerAsk.collection,\n            tokenId,\n            amount,\n            takerBid.price\n        );\n    }\n\n    //\n    // function matchesBuyerOrder\n    //  @Description: match buyer order\n    //  @param OrderTypes.TakerOrder\n    //  @param OrderTypes.MakerOrder\n    //  @return external\n    //\n    function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n    external\n    override\n    nonReentrant\n    {\n        // validate paramenters of both sides\n        // This step ensures matching seller order to buyer order\n        require((!makerBid.isOrderAsk) && (takerAsk.isOrderAsk), \"Error About Order Side\");\n        // order must be from the seller\n        require(msg.sender == takerAsk.taker, \"Order must be the sender\");\n\n        // confirm bid is signed\n        bytes32 bidHash = makerBid.hash();\n        // confirm bid signature is valid\n        _validateOrder(makerBid, bidHash);\n\n        // confirm trading strategy can be effectively executed\n        (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerBid.strategy)\n        .canExecuteBuy(takerAsk, makerBid);\n\n        require(isExecutionValid, \"Strategy should be valid\");\n\n        // Update the random number status of current order to be true, avoid reentrancy\n        _theUserOrderExecutedOrCancelled[makerBid.signer][makerBid.nonce] = true;\n\n        // transfer nft\n        _transferNonFungibleToken(\n            makerBid.collection,\n            msg.sender,\n            makerBid.signer,\n            tokenId,\n            amount);\n\n        // transfer fund\n        _transferFeesAndFunds(\n            makerBid.strategy,\n            makerBid.collection,\n            tokenId,\n            makerBid.currency,\n            makerBid.signer,\n            takerAsk.taker,\n            takerAsk.price,\n            takerAsk.minPercentageToAsk\n        );\n\n        emit TakerAsk(\n            bidHash,\n            makerBid.nonce,\n            takerAsk.taker,\n            makerBid.signer,\n            makerBid.strategy,\n            makerBid.currency,\n            makerBid.collection,\n            tokenId,\n            amount,\n            takerAsk.price\n        );\n    }\n\n    //\n    // function cancelAllOrdersForSender\n    //  @Description: 取消所有的order\n    //  @param uint256\n    //  @return external\n    //\n    function cancelAllOrdersForSender(uint256 minNonce) external {\n        require(minNonce > userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\");\n        require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\");\n        // maintain a minimal nonce, to confirm the current order has reached the minimal nonce\n        userMinOrderNonce[msg.sender] = minNonce;\n\n        emit CancelAllOrders(msg.sender, minNonce);\n    }\n\n    //\n    // function cancelMultipleMakerOrders\n    //  @Description: cancel multiple orders\n    //  @param uint256[] orderNonces\n    //  @return external\n    //\n    function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {\n        require(NonceList.length > 0, \"Cannot be empty Cancel list\");\n\n        for (uint256 i = 0; i < NonceList.length; i++) {\n            require(NonceList[i] >= userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\");\n            _theUserOrderExecutedOrCancelled[msg.sender][NonceList[i]] = true;\n        }\n\n        emit CancelMultipleOrders(msg.sender, NonceList);\n    }\n    //\n    // function isUserOrderNonceExecutedOrCancelled\n    //  @Description: Check if the current order is cancelled or was previously executed using map\n    //  @param address  user address\n    //  @param uint256  random number status of current order\n    //  @return external\n    //\n    function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {\n        //view viewing does not consume gas\n        return _theUserOrderExecutedOrCancelled[user][orderNonce];\n    }\n\n    //\n    // tion _transferFeesAndFunds\n    //  @Description: using specific erc20 method to transfer fund(platform transaction fee or other fee)\n    //  @param address  _strategy trading strategy address\n    //  @param address  _collection nft contract address\n    //  @param uint256  _tokenId nft if\n    //  @param address  _currency erc20 contract address\n    //  @param address  _seller seller address\n    //  @param address  _buyer buyer address\n    //  @param uint256  _price price\n    //  @param uint256  _minPercentageToAsk minimal percentage accepted by the seller\n    //  @return internal\n    //\n    function _transferFeesAndFunds(\n        address strategy,\n        address collection,\n        uint256 tokenId,\n        address currency,\n        address from,\n        address to,\n        uint256 amount,\n        uint256 minPercentageToAsk\n    ) internal {\n        // initialize final price\n        uint256 finalSellerAmount = amount;\n\n        //2，calculate platform transaction fee\n\n        uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount);\n        // Confirm strategy is not null, platform transaction fee recipient is not null, platform transaction fee is not 0, before charging platform transaction fee\n        // If current strategy is not null, but platform transaction fee is 0, then pass\n        if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {\n            IERC20(currency).safeTransferFrom(from, protocolFeeRecipient, protocolFeeAmount);\n            finalSellerAmount -= protocolFeeAmount;\n        }\n\n\n        //3。 calculate royalty fee\n\n        (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager\n        .calculateRoyaltyFeeAndGetRecipient(collection, tokenId, amount);\n\n        // Pass only when current royalty recipient exists and royalty fee is 0\n        if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {\n            IERC20(currency).safeTransferFrom(from, royaltyFeeRecipient, royaltyFeeAmount);\n            finalSellerAmount -= royaltyFeeAmount;\n\n            emit RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount);\n        }\n\n        // confirm the final amount is higher than the price set by user\n        require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\");\n\n        //4  transfer final amount\n\n        IERC20(currency).safeTransferFrom(from, to, finalSellerAmount);\n\n    }\n\n\n    //\n    // function _transferFeesAndFundsWithWETH\n    //  @Description: use weth to transfer fee and fund, including different types of fee\n    //  @param address execution strategy address\n    //  @param address  collection address\n    //  @param uint256  tokenId\n    //  @param address  target wallet(seller)\n    //  @param uint256  amount\n    //  @param uint256  minimal percentage accepted by the seller\n    //  @return internal\n    //\n    function _transferFeesAndFundsWithWETH(\n        address strategy,\n        address collection,\n        uint256 tokenId,\n        address to,\n        uint256 amount,\n        uint256 minPercentageToAsk\n    ) internal {\n        //1. initialize final amount\n        uint256 finalSellerAmount = amount;\n\n\n        //2，calculate platform transaction fee\n        uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount);\n\n        // Confirm strategy is not null, platform transaction fee recipient is not null, platform transaction fee is not 0, before charging platform transaction fee\n        // If current strategy is not null, but platform transaction fee is 0, then pass\n        if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {\n            IERC20(WETH).safeTransfer(protocolFeeRecipient, protocolFeeAmount);\n            finalSellerAmount -= protocolFeeAmount;\n        }\n\n\n        //3. calculate royalty fee\n        (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager\n        .calculateRoyaltyFeeAndGetRecipient(collection, tokenId, amount);\n\n        // Pass only when current royalty recipient exists and royalty fee is 0\n        if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {\n            IERC20(WETH).safeTransfer(royaltyFeeRecipient, royaltyFeeAmount);\n            finalSellerAmount -= royaltyFeeAmount;\n\n            emit RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount);\n        }\n\n\n        // confirm the final amount is higher than the price set by user\n        require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\");\n\n        //4  transfer final amount\n        IERC20(WETH).safeTransfer(to, finalSellerAmount);\n\n    }\n\n\n    //\n    // function _transferNonFungibleToken\n    //  @Description: transfer nft\n    //  @param address  collection address\n    //  @param address  source address\n    //  @param address  target address\n    //  @param uint256  tokenId\n    //  @param uint256  amount\n    //  @return internal\n    //\n    function _transferNonFungibleToken(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) internal {\n        //  check contract manager in initialization\n        address Manager = transferSelectorNFT.checkTransferManagerForToken(collection);\n\n        // ensure manager contract exists\n        require(Manager != address(0), \"Can't fount transfer manager\");\n\n        // If one is found, transfer the token\n        TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount);\n    }\n\n    //\n    // function _calculateProtocolFee\n    //  @Description:  calculate platform transaction fee according to strategy\n    //  @param address  execution stratgey address\n    //  @param uint256  trading amount\n    //  @return internal\n    //\n    function _calculateProtocolFee(address theStrategy, uint256 amount) internal view returns (uint256) {\n        uint256 protocolFee = TheExStrategy(theStrategy).viewProtocolFee();\n        return (protocolFee * amount) / 10000;\n    }\n\n    //\n    // function _validateOrder\n    //  @Description: validate using order infor\n    //  @param OrderTypes.MakerOrder memory order order information\n    //  @param bytes32 hash order hash\n    //  @return internal\n    //\n    function _validateOrder(OrderTypes.MakerOrder calldata Make, bytes32 Hash) internal view {\n        // Verify whether order nonce has expired\n        require(\n        // check if the order is cancelled or timeout\n            (!_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce]) &&\n            (Make.nonce >= userMinOrderNonce[Make.signer]),\n            \"Order: Matching order expired\"\n        );\n\n        //order signature cannot be null\n        require(Make.signer != address(0), \"The Order signer cannot be the zero address\");\n\n        //confirm if amount is larger than 0\n        require(Make.amount > 0, \"The order amount should be greater than 0\");\n\n        bytes32 Domain=keccak256(\n            abi.encode(\n                0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f,\n            // keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")\n                0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5,\n            // keccak256(\"UnemetaMarket\")\n                0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6,\n            // keccak256(bytes(\"1\")) for versionId = 1\n                block.chainid,\n                address(this)\n            )\n        );\n\n        //validate signature\n        //because the eip712 signature stored in the server is used, must restore using teh same structure\n        //ensures signature is valid\n        require(\n            SignatureChecker.\n            verify(\n                Hash, //hash\n                Make.signer, // listing signer\n                Make.v, //signature parameter, from eip712 standard\n                Make.r,\n                Make.s,\n                Domain\n            ),\n            \"Signature: Invalid\"\n        );\n\n        // confirm currency is whitelisted\n        require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\");\n\n        // confirm trading strategy is whitelisted and can execute correctly\n        require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\");\n    }\n\n\n\n    //\n    // function updateCurrencyManager\n    //  @Description: Update a currency manager\n    //  @param address\n    //  @return external\n    //\n    function updateCurrencyManager(address _currencyManager) external onlyOwner {\n        require(_currencyManager != address(0), \"Cannot update to a null address\");\n        currencyManager = TheCurrencyManager(_currencyManager);\n        emit NewCurrencyManager(_currencyManager);\n    }\n\n    //\n    // function updateExecutionManager\n    //  @Description: Update an execution manager\n    //  @param address\n    //  @return external\n    //\n    function updateExecutionManager(address _executionManager) external onlyOwner {\n        require(_executionManager != address(0), \"Cannot update to a null address\");\n        executionManager = TheExManager(_executionManager);\n        emit NewExecutionManager(_executionManager);\n    }\n\n    //\n    // function updateProtocolFeeRecipient\n    //  @Description: Update platform transaction fee recipient\n    //  @param address\n    //  @return external\n    //\n    function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {\n        protocolFeeRecipient = _protocolFeeRecipient;\n        emit NewProtocolFeeRecipient(_protocolFeeRecipient);\n    }\n\n    //\n    // function updateRoyaltyFeeManager\n    //  @Description: update royalty fee manager\n    //  @param address\n    //  @return external\n    //\n    function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {\n        require(_royaltyFeeManager != address(0), \"Cannot update to a null address\");\n        royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager);\n        emit NewRoyaltyFeeManager(_royaltyFeeManager);\n    }\n\n    //\n    // function updateTransferSelectorNFT\n    //  @Description: update transfer manager\n    //  @param address\n    //  @return external\n    //\n    function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {\n        require(_transferSelectorNFT != address(0), \"Cannot update to a null address\");\n        transferSelectorNFT = TheTransferSelector(_transferSelectorNFT);\n        emit NewTransferSelectorNFT(_transferSelectorNFT);\n    }\n\n}\n\n"
			},
			"contracts/libraries/SignatureChecker.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\nimport {IERC1271} from \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\n\n/**\n * @title SignatureChecker\n * @notice This library allows verification of signatures for both EOAs and contracts.\n */\nlibrary SignatureChecker {\n\n    //\n    // function recover\n    //  @Description:  Recover signer from the signature\n    //  @param bytes32  hash  Including has of signiture information\n    //  @param uint8 Two possibilities, to enforce decryption from multiple angles using public key\n    //  @param bytes32\n    //  @param bytes32\n    //  @return internal\n    //\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        // https://ethereum.stackexchange.com/questions/83174/is-it-best-practice-to-check-signature-malleability-in-ecrecover\n        // https://crypto.iacr.org/2019/affevents/wac/medias/Heninger-BiasedNonceSense.pdf\n        require(\n            uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\n            \" Invalid s parameter\"\n        );\n\n        require(v == 27 || v == 28, \"Invalid v parameter\");\n\n        // Recover one signing address if signature is normal\n        address signer = ecrecover(hash, v, r, s);\n        require(signer != address(0), \" Invalid signer\");\n\n        return signer;\n    }\n    \n    //\n    // tion verify\n    //  @Description: To verify of signer matches all the signature information\n    //  @param bytes32\n    //  @param address\n    //  @param uint8\n    //  @param bytes32\n    //  @param bytes32\n    //  @param bytes32\n    //  @return internal\n    //\n    function verify(\n        bytes32 hash,\n        address signer,\n        uint8 v,\n        bytes32 r,\n        bytes32 s,\n        bytes32 domainSeparator\n    ) internal view returns (bool) {\n        // \\x19\\x01 Standard prefix code\n        // https://eips.ethereum.org/EIPS/eip-712#specification\n        // Checking code of the input domain and hash\n        bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash));\n        // If the signature address is the contract address\n        if (Address.isContract(signer)) {\n            // 0x1626ba7e is the interfaceId(see IERC1271) of signing contract\n            // Standard 1271 API\n            return IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e;\n        } else {\n            // Check if signature address is same as input address\n            return recover(digest, v, r, s) == signer;\n        }\n    }\n}\n"
			},
			"contracts/libraries/OrderTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//—————————————————————————————————Order Structure—————————————————————————————————\nlibrary OrderTypes {\n    // keccak256(\"MakerOrder(bool isOrderAsk,address signer,address collection,uint256 price,uint256 tokenId,uint256 amount,address strategy,address currency,uint256 nonce,uint256 startTime,uint256 endTime,uint256 minPercentageToAsk,bytes params)\")\n    bytes32 internal constant MAKER_ORDER_HASH = 0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028;\n\n    struct MakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address signer; // signer of the maker order\n        address collection; // collection address\n        uint256 price; // price (used as )\n        uint256 tokenId; // id of the token\n        uint256 amount; // amount of tokens to sell/purchase (must be 1 for ERC721, 1+ for ERC1155)\n        address strategy; // strategy for trade execution (e.g., DutchAuction, StandardSaleForFixedPrice)\n        address currency; // currency (e.g., WETH)\n        uint256 nonce; // order nonce (must be unique unless new maker order is meant to override existing one e.g., lower ask price)\n        uint256 startTime; // startTime in timestamp\n        uint256 endTime; // endTime in timestamp\n        uint256 minPercentageToAsk; // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // additional parameters\n        uint8 v; // v: parameter (27 or 28)\n        bytes32 r; // r: parameter\n        bytes32 s; // s: parameter\n    }\n\n    struct TakerOrder {\n        bool isOrderAsk; // true --> ask / false --> bid\n        address taker; // msg.sender\n        uint256 price; // final price for the purchase\n        uint256 tokenId;\n        uint256 minPercentageToAsk; // // slippage protection (9000 --> 90% of the final price must return to ask)\n        bytes params; // other params (e.g., tokenId)\n    }\n\n\n    function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {\n        return\n        keccak256(\n            abi.encode(\n                MAKER_ORDER_HASH,\n                makerOrder.isOrderAsk,\n                makerOrder.signer,\n                makerOrder.collection,\n                makerOrder.price,\n                makerOrder.tokenId,\n                makerOrder.amount,\n                makerOrder.strategy,\n                makerOrder.currency,\n                makerOrder.nonce,\n                makerOrder.startTime,\n                makerOrder.endTime,\n                makerOrder.minPercentageToAsk,\n                keccak256(makerOrder.params)\n            )\n        );\n    }\n}\n"
			},
			"contracts/Manager/interface/IWETH.sol": {
				"content": "// SPDX-License-Identifier: GNU\npragma solidity >=0.5.0;\n\ninterface IWETH {\n    function deposit() external payable;\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function withdraw(uint256) external;\n}\n"
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheTransferSelector {\n    function checkTransferManagerForToken(address collection) external view returns (address);\n}\n"
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheTransferManager {\n    function transferNonFungibleToken(\n        address collection,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) external;\n}\n"
			},
			"contracts/Manager/interface/TheUnemetaExchange.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../libraries/OrderTypes.sol\";\n\ninterface TheUnemetaExchange {\n    function matchSellerOrdersWETH(\n        OrderTypes.TakerOrder calldata takerBid,\n        OrderTypes.MakerOrder calldata makerAsk\n    ) external payable;\n\n    function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external;\n\n    function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external;\n}\n"
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheRoyaltyManager {\n    function calculateRoyaltyFeeAndGetRecipient(\n        address collection,\n        uint256 tokenId,\n        uint256 amount\n    ) external view returns (address, uint256);\n}\n"
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {OrderTypes} from \"../../../libraries/OrderTypes.sol\";\n\ninterface TheExStrategy {\n    function canExecuteBuy(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function canExecuteSell(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)\n        external\n        view\n        returns (\n            bool,\n            uint256,\n            uint256\n        );\n\n    function viewProtocolFee() external view returns (uint256);\n}\n"
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheExManager {\n    function addStrategy(address strategy) external;\n\n    function removeStrategy(address strategy) external;\n\n    function isStrategyWhitelisted(address strategy) external view returns (bool);\n\n    function viewWhitelistedStrategies(uint256 cursor, uint256 size) external view returns (address[] memory, uint256);\n\n    function viewCountWhitelistedStrategies() external view returns (uint256);\n}\n"
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface TheCurrencyManager {\n    function addCurrency(address currency) external;\n\n    function removeCurrency(address currency) external;\n\n    function isCurrencyWhitelisted(address currency) external view returns (bool);\n\n    function viewWhitelistedCurrencies(uint256 cursor, uint256 size) external view returns (address[] memory, uint256);\n\n    function viewCountWhitelistedCurrencies() external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4d5e2d28097853ba3a339719b02b042513f41c90031c4def428a1cb826bd78064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4d5e2d28097853ba3a339719b02b042513f41c90031c4def428a1cb826bd78064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD5 0xE2 0xD2 DUP1 SWAP8 DUP6 EXTCODESIZE LOG3 LOG3 CODECOPY PUSH18 0x9B02B042513F41C90031C4DEF428A1CB826B 0xD7 DUP1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4d5e2d28097853ba3a339719b02b042513f41c90031c4def428a1cb826bd78064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD5 0xE2 0xD2 DUP1 SWAP8 DUP6 EXTCODESIZE LOG3 LOG3 CODECOPY PUSH18 0x9B02B042513F41C90031C4DEF428A1CB826B 0xD7 DUP1 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "707:3748:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4d5e2d28097853ba3a339719b02b042513f41c90031c4def428a1cb826bd78064736f6c63430008110033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf6b89040f80cf9478387f3c2c340244723348a327f97cf22e8b667c49d2da5964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf6b89040f80cf9478387f3c2c340244723348a327f97cf22e8b667c49d2da5964736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH12 0x89040F80CF9478387F3C2C34 MUL DIFFICULTY PUSH19 0x3348A327F97CF22E8B667C49D2DA5964736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf6b89040f80cf9478387f3c2c340244723348a327f97cf22e8b667c49d2da5964736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF PUSH12 0x89040F80CF9478387F3C2C34 MUL DIFFICULTY PUSH19 0x3348A327F97CF22E8B667C49D2DA5964736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf6b89040f80cf9478387f3c2c340244723348a327f97cf22e8b667c49d2da5964736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/UnemetaMarket.sol": {
				"UnemetaMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_currencyManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_executionManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_royaltyFeeManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_protocolFeeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMinNonce",
									"type": "uint256"
								}
							],
							"name": "CancelAllOrders",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "orderNonces",
									"type": "uint256[]"
								}
							],
							"name": "CancelMultipleOrders",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "currencyManager",
									"type": "address"
								}
							],
							"name": "NewCurrencyManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "executionManager",
									"type": "address"
								}
							],
							"name": "NewExecutionManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "protocolFeeRecipient",
									"type": "address"
								}
							],
							"name": "NewProtocolFeeRecipient",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "royaltyFeeManager",
									"type": "address"
								}
							],
							"name": "NewRoyaltyFeeManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "transferSelectorNFT",
									"type": "address"
								}
							],
							"name": "NewTransferSelectorNFT",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "royaltyRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RoyaltyPayment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "orderHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "orderNonce",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "taker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "maker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TakerAsk",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "orderHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "orderNonce",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "taker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "maker",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TakerBid",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minNonce",
									"type": "uint256"
								}
							],
							"name": "cancelAllOrdersForSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "NonceList",
									"type": "uint256[]"
								}
							],
							"name": "cancelMultipleMakerOrders",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currencyManager",
							"outputs": [
								{
									"internalType": "contract TheCurrencyManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "executionManager",
							"outputs": [
								{
									"internalType": "contract TheExManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "orderNonce",
									"type": "uint256"
								}
							],
							"name": "isUserOrderNonceExecutedOrCancelled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrders",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrdersWETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "matchesBuyerOrder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFeeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltyFeeManager",
							"outputs": [
								{
									"internalType": "contract TheRoyaltyManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferSelectorNFT",
							"outputs": [
								{
									"internalType": "contract TheTransferSelector",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_currencyManager",
									"type": "address"
								}
							],
							"name": "updateCurrencyManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_executionManager",
									"type": "address"
								}
							],
							"name": "updateExecutionManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_protocolFeeRecipient",
									"type": "address"
								}
							],
							"name": "updateProtocolFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royaltyFeeManager",
									"type": "address"
								}
							],
							"name": "updateRoyaltyFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_transferSelectorNFT",
									"type": "address"
								}
							],
							"name": "updateTransferSelectorNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userMinOrderNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Manager/UnemetaMarket.sol\":995:23307  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Manager/UnemetaMarket.sol\":3921:4493  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/Manager/UnemetaMarket.sol\":4229:4244  currencyManager */\n  0x03\n    /* \"contracts/Manager/UnemetaMarket.sol\":4229:4283  currencyManager = TheCurrencyManager(_currencyManager) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4293:4309  executionManager */\n  0x04\n    /* \"contracts/Manager/UnemetaMarket.sol\":4293:4343  executionManager = TheExManager(_executionManager) */\n  dup1\n  sload\n  swap6\n  dup8\n  and\n  swap6\n  dup3\n  and\n  swap6\n  swap1\n  swap6\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4353:4370  royaltyFeeManager */\n  0x05\n    /* \"contracts/Manager/UnemetaMarket.sol\":4353:4410  royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager) */\n  dup1\n  sload\n  swap4\n  dup7\n  and\n  swap4\n  dup6\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4420:4432  WETH = _WETH */\n  dup4\n  and\n  0x80\n  mstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":4442:4462  protocolFeeRecipient */\n  0x02\n    /* \"contracts/Manager/UnemetaMarket.sol\":4442:4486  protocolFeeRecipient = _protocolFeeRecipient */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Manager/UnemetaMarket.sol\":995:23307  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:746   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:408   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":404:405   */\n  0x00\n    /* \"#utility.yul\":401:402   */\n  dup1\n    /* \"#utility.yul\":394:406   */\n  revert\n    /* \"#utility.yul\":355:408   */\ntag_22:\n    /* \"#utility.yul\":427:467   */\n  tag_23\n    /* \"#utility.yul\":457:466   */\n  dup7\n    /* \"#utility.yul\":427:467   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":417:467   */\n  swap5\n  pop\n    /* \"#utility.yul\":486:535   */\n  tag_24\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup8\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":486:535   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":476:535   */\n  swap4\n  pop\n    /* \"#utility.yul\":554:603   */\n  tag_25\n    /* \"#utility.yul\":599:601   */\n  0x40\n    /* \"#utility.yul\":588:597   */\n  dup8\n    /* \"#utility.yul\":584:602   */\n  add\n    /* \"#utility.yul\":554:603   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":544:603   */\n  swap3\n  pop\n    /* \"#utility.yul\":622:671   */\n  tag_26\n    /* \"#utility.yul\":667:669   */\n  0x60\n    /* \"#utility.yul\":656:665   */\n  dup8\n    /* \"#utility.yul\":652:670   */\n  add\n    /* \"#utility.yul\":622:671   */\n  tag_17\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":612:671   */\n  swap2\n  pop\n    /* \"#utility.yul\":690:740   */\n  tag_27\n    /* \"#utility.yul\":735:738   */\n  0x80\n    /* \"#utility.yul\":724:733   */\n  dup8\n    /* \"#utility.yul\":720:739   */\n  add\n    /* \"#utility.yul\":690:740   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":680:740   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:746   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_18:\n    /* \"contracts/Manager/UnemetaMarket.sol\":995:23307  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Manager/UnemetaMarket.sol\":995:23307  contract UnemetaMarket is TheUnemetaExchange, ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64df049e\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xad5c4648\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd4ff41dc\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd4ff41dc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf75ff53f\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0xad5c4648\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc5498769\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcbd2ec65\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x87e4401f\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x87e4401f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9e53a69a\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x64df049e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x483abb9f\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x5ce052d7\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x5ce052d7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5e14f68e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x63521def\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x483abb9f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x509a1a41\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x31e27e27\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x31e27e27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4266581e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x45ea7231\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x0f747d74\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1df47f80\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Manager/UnemetaMarket.sol\":2105:2146  TheCurrencyManager public currencyManager */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      sload(0x03)\n      tag_31\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":217:259   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":205:260   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":187:261   */\n      dup2\n      mstore\n        /* \"#utility.yul\":175:177   */\n      0x20\n        /* \"#utility.yul\":160:178   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":2105:2146  TheCurrencyManager public currencyManager */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Manager/UnemetaMarket.sol\":22177:22385  function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1403:1417   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1396:1418   */\n      iszero\n        /* \"#utility.yul\":1378:1419   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1366:1368   */\n      0x20\n        /* \"#utility.yul\":1351:1369   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n      tag_33\n        /* \"#utility.yul\":1238:1425   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":2328:2380  mapping(address => uint256) public userMinOrderNonce */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_49:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1576:1601   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1564:1566   */\n      0x20\n        /* \"#utility.yul\":1549:1567   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":2328:2380  mapping(address => uint256) public userMinOrderNonce */\n      tag_33\n        /* \"#utility.yul\":1430:1607   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":7032:8808  function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_36\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2152:2188  TheExManager public executionManager */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      sload(0x04)\n      tag_31\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":4711:6837  function matchSellerOrdersWETH(... */\n    tag_8:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":21280:21562  function updateCurrencyManager(address _currencyManager) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2242:2288  TheTransferSelector public transferSelectorNFT */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      sload(0x06)\n      tag_31\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":9001:10892  function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_36\n      tag_77\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2062:2097  address public protocolFeeRecipient */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      sload(0x02)\n      tag_31\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_36\n      tag_86\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":2194:2236  TheRoyaltyManager public royaltyFeeManager */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      sload(0x05)\n      tag_31\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x01))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_31)\n        /* \"contracts/Manager/UnemetaMarket.sol\":11688:12161  function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_36\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":1993:2022  address public immutable WETH */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_31\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n      dup2\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":22542:22837  function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_36\n      tag_107\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":11044:11519  function cancelAllOrdersForSender(uint256 minNonce) external {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_36\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":21719:22002  function updateExecutionManager(address _executionManager) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_36\n      tag_116\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_36\n      tag_120\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":22993:23304  function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_36\n      tag_124\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":22177:22385  function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Manager/UnemetaMarket.sol\":22273:22293  protocolFeeRecipient */\n      0x02\n        /* \"contracts/Manager/UnemetaMarket.sol\":22273:22317  protocolFeeRecipient = _protocolFeeRecipient */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":22332:22378  NewProtocolFeeRecipient(_protocolFeeRecipient) */\n      mload(0x40)\n      0x8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb10\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":22177:22385  function updateProtocolFeeRecipient(address _protocolFeeRecipient) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n    tag_44:\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12662  _theUserOrderExecutedOrCancelled[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":12557:12561  bool */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12662  _theUserOrderExecutedOrCancelled[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12656  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12662  _theUserOrderExecutedOrCancelled[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":12624:12674  _theUserOrderExecutedOrCancelled[user][orderNonce] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":12455:12681  function isUserOrderNonceExecutedOrCancelled(address user, uint256 orderNonce) external view returns (bool) {... */\n    tag_130:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":7032:8808  function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n    tag_57:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4434:4436   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4416:4437   */\n      mstore\n        /* \"#utility.yul\":4473:4475   */\n      0x1f\n        /* \"#utility.yul\":4453:4471   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4446:4476   */\n      mstore\n        /* \"#utility.yul\":4512:4545   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4492:4510   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4485:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":7266:7285  makerAsk.isOrderAsk */\n      tag_136\n      0x20\n      dup3\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":7266:7274  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7266:7285  makerAsk.isOrderAsk */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7265:7312  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n      dup1\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7292:7311  takerBid.isOrderAsk */\n      tag_139\n      0x20\n      dup4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":7292:7300  takerBid */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":7292:7311  takerBid.isOrderAsk */\n      tag_137\n      jump\t// in\n    tag_139:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7291:7311  !takerBid.isOrderAsk */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":7265:7312  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n    tag_138:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7257:7339  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":7257:7339  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5278:5299   */\n      mstore\n        /* \"#utility.yul\":5335:5337   */\n      0x16\n        /* \"#utility.yul\":5315:5333   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5308:5338   */\n      mstore\n        /* \"#utility.yul\":5374:5398   */\n      0x4572726f722041626f7574204f72646572205369646500000000000000000000\n        /* \"#utility.yul\":5354:5372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5347:5399   */\n      mstore\n        /* \"#utility.yul\":5416:5434   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":7257:7339  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      tag_133\n        /* \"#utility.yul\":5094:5440   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":7257:7339  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n    tag_140:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7412:7426  takerBid.taker */\n      tag_143\n      0x40\n      dup4\n      add\n      0x20\n      dup5\n      add\n      tag_38\n      jump\t// in\n    tag_143:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7398:7426  msg.sender == takerBid.taker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":7398:7408  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":7398:7426  msg.sender == takerBid.taker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":7390:7455  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5647:5649   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":7390:7455  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5629:5650   */\n      mstore\n        /* \"#utility.yul\":5686:5688   */\n      0x18\n        /* \"#utility.yul\":5666:5684   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5659:5689   */\n      mstore\n        /* \"#utility.yul\":5725:5751   */\n      0x4f72646572206d757374206265207468652073656e6465720000000000000000\n        /* \"#utility.yul\":5705:5723   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5698:5752   */\n      mstore\n        /* \"#utility.yul\":5769:5787   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":7390:7455  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      tag_133\n        /* \"#utility.yul\":5445:5793   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":7390:7455  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n    tag_144:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7497:7512  bytes32 askHash */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7530  makerAsk.hash() */\n      tag_147\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7528  makerAsk.hash */\n      tag_148\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7523  makerAsk */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7528  makerAsk.hash */\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n        /* \"contracts/Manager/UnemetaMarket.sol\":7515:7530  makerAsk.hash() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7497:7530  bytes32 askHash = makerAsk.hash() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7540:7573  _validateOrder(makerAsk, askHash) */\n      tag_151\n        /* \"contracts/Manager/UnemetaMarket.sol\":7555:7563  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7565:7572  askHash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7540:7554  _validateOrder */\n      tag_152\n        /* \"contracts/Manager/UnemetaMarket.sol\":7540:7573  _validateOrder(makerAsk, askHash) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7596:7617  bool isExecutionValid */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":7668:7685  makerAsk.strategy */\n      tag_153\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_38\n      jump\t// in\n    tag_153:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7654:7710  TheExStrategy(makerAsk.strategy)... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd310677d\n        /* \"contracts/Manager/UnemetaMarket.sol\":7711:7719  takerBid */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":7721:7729  makerAsk */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":7654:7730  TheExStrategy(makerAsk.strategy)... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7595:7730  (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7784:7800  isExecutionValid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":7776:7829  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13146:13148   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":7776:7829  require(isExecutionValid, \"Strategy should be valid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13128:13149   */\n      mstore\n        /* \"#utility.yul\":13185:13187   */\n      0x18\n        /* \"#utility.yul\":13165:13183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13158:13188   */\n      mstore\n        /* \"#utility.yul\":13224:13250   */\n      0x53747261746567792073686f756c642062652076616c69640000000000000000\n        /* \"#utility.yul\":13204:13222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13197:13251   */\n      mstore\n        /* \"#utility.yul\":13268:13286   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":7776:7829  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_133\n        /* \"#utility.yul\":12944:13292   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":7776:7829  require(isExecutionValid, \"Strategy should be valid\") */\n    tag_160:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7997:8001  true */\n      0x01\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7961  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7978  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":7962:7977  makerAsk.signer */\n      tag_163\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_38\n      jump\t// in\n    tag_163:\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7978  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":7979:7993  makerAsk.nonce */\n      0x0100\n      dup11\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:7994  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":7929:8001  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":8037:8306  _transferFeesAndFunds(... */\n      tag_164\n        /* \"contracts/Manager/UnemetaMarket.sol\":8072:8089  makerAsk.strategy */\n      tag_165\n      0xe0\n      dup8\n      add\n      0xc0\n      dup9\n      add\n      tag_38\n      jump\t// in\n    tag_165:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8103:8122  makerAsk.collection */\n      tag_166\n      0x60\n      dup9\n      add\n      0x40\n      dup10\n      add\n      tag_38\n      jump\t// in\n    tag_166:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8136:8143  tokenId */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":8157:8174  makerAsk.currency */\n      tag_167\n      0x0100\n      dup11\n      add\n      0xe0\n      dup12\n      add\n      tag_38\n      jump\t// in\n    tag_167:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8188:8198  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":8212:8227  makerAsk.signer */\n      tag_168\n      0x40\n      dup13\n      add\n      0x20\n      dup14\n      add\n      tag_38\n      jump\t// in\n    tag_168:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8241:8249  takerBid */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":8241:8255  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":8269:8277  makerAsk */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":8269:8296  makerAsk.minPercentageToAsk */\n      0x0160\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":8037:8058  _transferFeesAndFunds */\n      tag_169\n        /* \"contracts/Manager/UnemetaMarket.sol\":8037:8306  _transferFeesAndFunds(... */\n      jump\t// in\n    tag_164:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8340:8497  _transferNonFungibleToken(... */\n      tag_170\n        /* \"contracts/Manager/UnemetaMarket.sol\":8379:8398  makerAsk.collection */\n      tag_171\n      0x60\n      dup8\n      add\n      0x40\n      dup9\n      add\n      tag_38\n      jump\t// in\n    tag_171:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8412:8427  makerAsk.signer */\n      tag_172\n      0x40\n      dup9\n      add\n      0x20\n      dup10\n      add\n      tag_38\n      jump\t// in\n    tag_172:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8441:8455  takerBid.taker */\n      tag_173\n      0x40\n      dup11\n      add\n      0x20\n      dup12\n      add\n      tag_38\n      jump\t// in\n    tag_173:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8469:8476  tokenId */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":8490:8496  amount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":8340:8365  _transferNonFungibleToken */\n      tag_174\n        /* \"contracts/Manager/UnemetaMarket.sol\":8340:8497  _transferNonFungibleToken(... */\n      jump\t// in\n    tag_170:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8641:8658  makerAsk.strategy */\n      tag_175\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_38\n      jump\t// in\n    tag_175:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":8612:8627  makerAsk.signer */\n      tag_176\n      0x40\n      dup8\n      add\n      0x20\n      dup9\n      add\n      tag_38\n      jump\t// in\n    tag_176:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":8584:8598  takerBid.taker */\n      tag_177\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_38\n      jump\t// in\n    tag_177:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be\n        /* \"contracts/Manager/UnemetaMarket.sol\":8535:8542  askHash */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":8556:8570  makerAsk.nonce */\n      0x0100\n      dup11\n      add\n      dup1\n      calldataload\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":8672:8689  makerAsk.currency */\n      tag_178\n      swap1\n      0xe0\n      dup14\n      add\n      tag_38\n      jump\t// in\n    tag_178:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8703:8722  makerAsk.collection */\n      tag_179\n      0x60\n      dup14\n      add\n      0x40\n      dup15\n      add\n      tag_38\n      jump\t// in\n    tag_179:\n        /* \"contracts/Manager/UnemetaMarket.sol\":8777:8791  takerBid.price */\n      0x40\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      dup1\n      mload\n        /* \"#utility.yul\":13612:13637   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":13668:13670   */\n      0x20\n        /* \"#utility.yul\":13653:13671   */\n      dup6\n      add\n        /* \"#utility.yul\":13646:13680   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":13699:13741   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13777:13792   */\n      swap2\n      dup3\n      and\n        /* \"#utility.yul\":13757:13775   */\n      dup5\n      dup5\n      add\n        /* \"#utility.yul\":13750:13793   */\n      mstore\n        /* \"#utility.yul\":13829:13844   */\n      and\n        /* \"#utility.yul\":13824:13826   */\n      0x60\n        /* \"#utility.yul\":13809:13827   */\n      dup4\n      add\n        /* \"#utility.yul\":13802:13845   */\n      mstore\n        /* \"#utility.yul\":13876:13879   */\n      0x80\n        /* \"#utility.yul\":13861:13880   */\n      dup3\n      add\n        /* \"#utility.yul\":13854:13889   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":13920:13923   */\n      0xa0\n        /* \"#utility.yul\":13905:13924   */\n      dup3\n      add\n        /* \"#utility.yul\":13898:13933   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":8777:8791  takerBid.price */\n      dup12\n      add\n      calldataload\n        /* \"#utility.yul\":13964:13967   */\n      0xc0\n        /* \"#utility.yul\":13949:13968   */\n      dup3\n      add\n        /* \"#utility.yul\":13942:13977   */\n      mstore\n        /* \"#utility.yul\":13599:13602   */\n      0xe0\n        /* \"#utility.yul\":13584:13603   */\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":8513:8801  TakerBid(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":7032:8808  function matchSellerOrders(OrderTypes.TakerOrder calldata takerBid, OrderTypes.MakerOrder calldata makerAsk)... */\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":4711:6837  function matchSellerOrdersWETH(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4434:4436   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4416:4437   */\n      mstore\n        /* \"#utility.yul\":4473:4475   */\n      0x1f\n        /* \"#utility.yul\":4453:4471   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4446:4476   */\n      mstore\n        /* \"#utility.yul\":4512:4545   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4492:4510   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4485:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_133\n        /* \"#utility.yul\":4232:4587   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_183:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":4904:4923  makerAsk.isOrderAsk */\n      tag_186\n      0x20\n      dup3\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":4904:4912  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":4904:4923  makerAsk.isOrderAsk */\n      tag_137\n      jump\t// in\n    tag_186:\n        /* \"contracts/Manager/UnemetaMarket.sol\":4903:4950  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n      dup1\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":4930:4949  takerBid.isOrderAsk */\n      tag_188\n      0x20\n      dup4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":4930:4938  takerBid */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":4930:4949  takerBid.isOrderAsk */\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"contracts/Manager/UnemetaMarket.sol\":4929:4949  !takerBid.isOrderAsk */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":4903:4950  (makerAsk.isOrderAsk) && (!takerBid.isOrderAsk) */\n    tag_187:\n        /* \"contracts/Manager/UnemetaMarket.sol\":4895:4977  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":4895:4977  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5278:5299   */\n      mstore\n        /* \"#utility.yul\":5335:5337   */\n      0x16\n        /* \"#utility.yul\":5315:5333   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5308:5338   */\n      mstore\n        /* \"#utility.yul\":5374:5398   */\n      0x4572726f722041626f7574204f72646572205369646500000000000000000000\n        /* \"#utility.yul\":5354:5372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5347:5399   */\n      mstore\n        /* \"#utility.yul\":5416:5434   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":4895:4977  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n      tag_133\n        /* \"#utility.yul\":5094:5440   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":4895:4977  require((makerAsk.isOrderAsk) && (!takerBid.isOrderAsk), \"Error About Order Side\") */\n    tag_189:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5025:5050  makerAsk.currency == WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":5046:5050  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":5025:5050  makerAsk.currency == WETH */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":5025:5042  makerAsk.currency */\n      tag_191\n      0x0100\n      dup4\n      add\n      0xe0\n      dup5\n      add\n      tag_38\n      jump\t// in\n    tag_191:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5025:5050  makerAsk.currency == WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":14190:14192   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14172:14193   */\n      mstore\n        /* \"#utility.yul\":14229:14231   */\n      0x15\n        /* \"#utility.yul\":14209:14227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14202:14232   */\n      mstore\n        /* \"#utility.yul\":14268:14291   */\n      0x43757272656e6379206d75737420626520574554480000000000000000000000\n        /* \"#utility.yul\":14248:14266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14241:14292   */\n      mstore\n        /* \"#utility.yul\":14309:14327   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n      tag_133\n        /* \"#utility.yul\":13988:14333   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":5017:5076  require(makerAsk.currency == WETH, \"Currency must be WETH\") */\n    tag_192:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5108:5122  takerBid.taker */\n      tag_195\n      0x40\n      dup4\n      add\n      0x20\n      dup5\n      add\n      tag_38\n      jump\t// in\n    tag_195:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5094:5122  msg.sender == takerBid.taker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":5094:5104  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":5094:5122  msg.sender == takerBid.taker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":5086:5151  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5647:5649   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":5086:5151  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5629:5650   */\n      mstore\n        /* \"#utility.yul\":5686:5688   */\n      0x18\n        /* \"#utility.yul\":5666:5684   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5659:5689   */\n      mstore\n        /* \"#utility.yul\":5725:5751   */\n      0x4f72646572206d757374206265207468652073656e6465720000000000000000\n        /* \"#utility.yul\":5705:5723   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5698:5752   */\n      mstore\n        /* \"#utility.yul\":5769:5787   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":5086:5151  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n      tag_133\n        /* \"#utility.yul\":5445:5793   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":5086:5151  require(msg.sender == takerBid.taker, \"Order must be the sender\") */\n    tag_196:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5237:5246  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5220:5228  takerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5220:5234  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":5220:5246  takerBid.price > msg.value */\n      gt\n        /* \"contracts/Manager/UnemetaMarket.sol\":5216:5451  if (takerBid.price > msg.value) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5348  IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value)) */\n      tag_199\n        /* \"contracts/Manager/UnemetaMarket.sol\":5292:5302  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":5312:5316  this */\n      address\n        /* \"contracts/Manager/UnemetaMarket.sol\":5320:5346  takerBid.price - msg.value */\n      tag_200\n        /* \"contracts/Manager/UnemetaMarket.sol\":5337:5346  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5320:5334  takerBid.price */\n      0x40\n      dup8\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":5320:5346  takerBid.price - msg.value */\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5291  IERC20(WETH).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":5269:5273  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5291  IERC20(WETH).safeTransferFrom */\n      and\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5348  IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value)) */\n      swap2\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5291  IERC20(WETH).safeTransferFrom */\n      tag_202\n        /* \"contracts/Manager/UnemetaMarket.sol\":5262:5348  IERC20(WETH).safeTransferFrom(msg.sender, address(this), (takerBid.price - msg.value)) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5216:5451  if (takerBid.price > msg.value) {... */\n      jump(tag_204)\n    tag_198:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5405:5414  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5387:5395  takerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5387:5401  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":5387:5414  takerBid.price == msg.value */\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":14862:14864   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14844:14865   */\n      mstore\n        /* \"#utility.yul\":14901:14903   */\n      0x15\n        /* \"#utility.yul\":14881:14899   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14874:14904   */\n      mstore\n        /* \"#utility.yul\":14940:14963   */\n      0x4d73672e76616c756520697320746f6f20686967680000000000000000000000\n        /* \"#utility.yul\":14920:14938   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14913:14964   */\n      mstore\n        /* \"#utility.yul\":14981:14999   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n      tag_133\n        /* \"#utility.yul\":14660:15005   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":5379:5440  require(takerBid.price == msg.value, \"Msg.value is too high\") */\n    tag_204:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5490:5494  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":5484:5503  IWETH(WETH).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"contracts/Manager/UnemetaMarket.sol\":5512:5521  msg.value */\n      callvalue\n        /* \"contracts/Manager/UnemetaMarket.sol\":5484:5524  IWETH(WETH).deposit{value : msg.value}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":5578:5593  bytes32 askHash */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5611  makerAsk.hash() */\n      tag_210\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5604  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5609  makerAsk.hash */\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":5596:5611  makerAsk.hash() */\n    tag_210:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5578:5611  bytes32 askHash = makerAsk.hash() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":5621:5654  _validateOrder(makerAsk, askHash) */\n      tag_212\n        /* \"contracts/Manager/UnemetaMarket.sol\":5636:5644  makerAsk */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5646:5653  askHash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5621:5635  _validateOrder */\n      tag_152\n        /* \"contracts/Manager/UnemetaMarket.sol\":5621:5654  _validateOrder(makerAsk, askHash) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5706:5727  bool isExecutionValid */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":5778:5795  makerAsk.strategy */\n      tag_213\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_38\n      jump\t// in\n    tag_213:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5764:5820  TheExStrategy(makerAsk.strategy)... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd310677d\n        /* \"contracts/Manager/UnemetaMarket.sol\":5821:5829  takerBid */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":5831:5839  makerAsk */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":5764:5840  TheExStrategy(makerAsk.strategy)... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_214:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_217:\n        /* \"contracts/Manager/UnemetaMarket.sol\":5705:5840  (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerAsk.strategy)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":5859:5875  isExecutionValid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":5851:5904  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13146:13148   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":5851:5904  require(isExecutionValid, \"Strategy should be valid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13128:13149   */\n      mstore\n        /* \"#utility.yul\":13185:13187   */\n      0x18\n        /* \"#utility.yul\":13165:13183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13158:13188   */\n      mstore\n        /* \"#utility.yul\":13224:13250   */\n      0x53747261746567792073686f756c642062652076616c69640000000000000000\n        /* \"#utility.yul\":13204:13222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13197:13251   */\n      mstore\n        /* \"#utility.yul\":13268:13286   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":5851:5904  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_133\n        /* \"#utility.yul\":12944:13292   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":5851:5904  require(isExecutionValid, \"Strategy should be valid\") */\n    tag_218:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6072:6076  true */\n      0x01\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6036  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6053  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":6037:6052  makerAsk.signer */\n      tag_220\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_38\n      jump\t// in\n    tag_220:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6053  _theUserOrderExecutedOrCancelled[makerAsk.signer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":6054:6068  makerAsk.nonce */\n      0x0100\n      dup11\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6069  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":6004:6076  _theUserOrderExecutedOrCancelled[makerAsk.signer][makerAsk.nonce] = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":6112:6334  _transferFeesAndFundsWithWETH(... */\n      tag_164\n        /* \"contracts/Manager/UnemetaMarket.sol\":6155:6172  makerAsk.strategy */\n      tag_222\n      0xe0\n      dup8\n      add\n      0xc0\n      dup9\n      add\n      tag_38\n      jump\t// in\n    tag_222:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6186:6205  makerAsk.collection */\n      tag_223\n      0x60\n      dup9\n      add\n      0x40\n      dup10\n      add\n      tag_38\n      jump\t// in\n    tag_223:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6219:6226  tokenId */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":6240:6255  makerAsk.signer */\n      tag_224\n      0x40\n      dup11\n      add\n      0x20\n      dup12\n      add\n      tag_38\n      jump\t// in\n    tag_224:\n        /* \"contracts/Manager/UnemetaMarket.sol\":6269:6277  takerBid */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":6269:6283  takerBid.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":6297:6305  makerAsk */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":6297:6324  makerAsk.minPercentageToAsk */\n      0x0160\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":6112:6141  _transferFeesAndFundsWithWETH */\n      tag_225\n        /* \"contracts/Manager/UnemetaMarket.sol\":6112:6334  _transferFeesAndFundsWithWETH(... */\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":21280:21562  function updateCurrencyManager(address _currencyManager) external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21374:21404  _currencyManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":21366:21440  require(_currencyManager != address(0), \"Cannot update to a null address\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15212:15214   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":21366:21440  require(_currencyManager != address(0), \"Cannot update to a null address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15194:15215   */\n      mstore\n        /* \"#utility.yul\":15251:15253   */\n      0x1f\n        /* \"#utility.yul\":15231:15249   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15224:15254   */\n      mstore\n        /* \"#utility.yul\":15290:15323   */\n      0x43616e6e6f742075706461746520746f2061206e756c6c206164647265737300\n        /* \"#utility.yul\":15270:15288   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15263:15324   */\n      mstore\n        /* \"#utility.yul\":15341:15359   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":21366:21440  require(_currencyManager != address(0), \"Cannot update to a null address\") */\n      tag_133\n        /* \"#utility.yul\":15010:15365   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":21366:21440  require(_currencyManager != address(0), \"Cannot update to a null address\") */\n    tag_239:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21450:21465  currencyManager */\n      0x03\n        /* \"contracts/Manager/UnemetaMarket.sol\":21450:21504  currencyManager = TheCurrencyManager(_currencyManager) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":21519:21555  NewCurrencyManager(_currencyManager) */\n      mload(0x40)\n      0xb4f5db40df3aced29e88a4babbc3b46e305e07d34098525d18b1497056e63838\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":21280:21562  function updateCurrencyManager(address _currencyManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":9001:10892  function matchesBuyerOrder(OrderTypes.TakerOrder calldata takerAsk, OrderTypes.MakerOrder calldata makerBid)... */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4434:4436   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4416:4437   */\n      mstore\n        /* \"#utility.yul\":4473:4475   */\n      0x1f\n        /* \"#utility.yul\":4453:4471   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4446:4476   */\n      mstore\n        /* \"#utility.yul\":4512:4545   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4492:4510   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4485:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_133\n        /* \"#utility.yul\":4232:4587   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_243:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":9289:9308  makerBid.isOrderAsk */\n      tag_246\n      0x20\n      dup3\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":9289:9297  makerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9289:9308  makerBid.isOrderAsk */\n      tag_137\n      jump\t// in\n    tag_246:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9288:9308  !makerBid.isOrderAsk */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":9287:9334  (!makerBid.isOrderAsk) && (takerAsk.isOrderAsk) */\n      dup1\n      iszero\n      tag_248\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":9314:9333  takerAsk.isOrderAsk */\n      tag_248\n      0x20\n      dup4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":9314:9322  takerAsk */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":9314:9333  takerAsk.isOrderAsk */\n      tag_137\n      jump\t// in\n    tag_248:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9279:9361  require((!makerBid.isOrderAsk) && (takerAsk.isOrderAsk), \"Error About Order Side\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":9279:9361  require((!makerBid.isOrderAsk) && (takerAsk.isOrderAsk), \"Error About Order Side\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5278:5299   */\n      mstore\n        /* \"#utility.yul\":5335:5337   */\n      0x16\n        /* \"#utility.yul\":5315:5333   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5308:5338   */\n      mstore\n        /* \"#utility.yul\":5374:5398   */\n      0x4572726f722041626f7574204f72646572205369646500000000000000000000\n        /* \"#utility.yul\":5354:5372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5347:5399   */\n      mstore\n        /* \"#utility.yul\":5416:5434   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":9279:9361  require((!makerBid.isOrderAsk) && (takerAsk.isOrderAsk), \"Error About Order Side\") */\n      tag_133\n        /* \"#utility.yul\":5094:5440   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":9279:9361  require((!makerBid.isOrderAsk) && (takerAsk.isOrderAsk), \"Error About Order Side\") */\n    tag_249:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9434:9448  takerAsk.taker */\n      tag_251\n      0x40\n      dup4\n      add\n      0x20\n      dup5\n      add\n      tag_38\n      jump\t// in\n    tag_251:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9420:9448  msg.sender == takerAsk.taker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":9420:9430  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":9420:9448  msg.sender == takerAsk.taker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Manager/UnemetaMarket.sol\":9412:9477  require(msg.sender == takerAsk.taker, \"Order must be the sender\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5647:5649   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":9412:9477  require(msg.sender == takerAsk.taker, \"Order must be the sender\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5629:5650   */\n      mstore\n        /* \"#utility.yul\":5686:5688   */\n      0x18\n        /* \"#utility.yul\":5666:5684   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5659:5689   */\n      mstore\n        /* \"#utility.yul\":5725:5751   */\n      0x4f72646572206d757374206265207468652073656e6465720000000000000000\n        /* \"#utility.yul\":5705:5723   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5698:5752   */\n      mstore\n        /* \"#utility.yul\":5769:5787   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":9412:9477  require(msg.sender == takerAsk.taker, \"Order must be the sender\") */\n      tag_133\n        /* \"#utility.yul\":5445:5793   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":9412:9477  require(msg.sender == takerAsk.taker, \"Order must be the sender\") */\n    tag_252:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9521:9536  bytes32 bidHash */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9554  makerBid.hash() */\n      tag_254\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9552  makerBid.hash */\n      tag_148\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9547  makerBid */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9552  makerBid.hash */\n      tag_149\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":9539:9554  makerBid.hash() */\n    tag_254:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9521:9554  bytes32 bidHash = makerBid.hash() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":9606:9639  _validateOrder(makerBid, bidHash) */\n      tag_256\n        /* \"contracts/Manager/UnemetaMarket.sol\":9621:9629  makerBid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9631:9638  bidHash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9606:9620  _validateOrder */\n      tag_152\n        /* \"contracts/Manager/UnemetaMarket.sol\":9606:9639  _validateOrder(makerBid, bidHash) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9715:9736  bool isExecutionValid */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":9787:9804  makerBid.strategy */\n      tag_257\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_38\n      jump\t// in\n    tag_257:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9773:9828  TheExStrategy(makerBid.strategy)... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2a75ffee\n        /* \"contracts/Manager/UnemetaMarket.sol\":9829:9837  takerAsk */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":9839:9847  makerBid */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":9773:9848  TheExStrategy(makerBid.strategy)... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_258:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_261:\n        /* \"contracts/Manager/UnemetaMarket.sol\":9714:9848  (bool isExecutionValid, uint256 tokenId, uint256 amount) = TheExStrategy(makerBid.strategy)... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":9867:9883  isExecutionValid */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":9859:9912  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13146:13148   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":9859:9912  require(isExecutionValid, \"Strategy should be valid\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13128:13149   */\n      mstore\n        /* \"#utility.yul\":13185:13187   */\n      0x18\n        /* \"#utility.yul\":13165:13183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13158:13188   */\n      mstore\n        /* \"#utility.yul\":13224:13250   */\n      0x53747261746567792073686f756c642062652076616c69640000000000000000\n        /* \"#utility.yul\":13204:13222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13197:13251   */\n      mstore\n        /* \"#utility.yul\":13268:13286   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":9859:9912  require(isExecutionValid, \"Strategy should be valid\") */\n      tag_133\n        /* \"#utility.yul\":12944:13292   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":9859:9912  require(isExecutionValid, \"Strategy should be valid\") */\n    tag_262:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10080:10084  true */\n      0x01\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10044  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10061  _theUserOrderExecutedOrCancelled[makerBid.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":10045:10060  makerBid.signer */\n      tag_264\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_38\n      jump\t// in\n    tag_264:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10061  _theUserOrderExecutedOrCancelled[makerBid.signer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":10062:10076  makerBid.nonce */\n      0x0100\n      dup11\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10077  _theUserOrderExecutedOrCancelled[makerBid.signer][makerBid.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":10012:10084  _theUserOrderExecutedOrCancelled[makerBid.signer][makerBid.nonce] = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":10119:10272  _transferNonFungibleToken(... */\n      tag_265\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":10158:10177  makerBid.collection */\n      tag_266\n      swap1\n      0x60\n      dup9\n      add\n      swap1\n      dup9\n      add\n      tag_38\n      jump\t// in\n    tag_266:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10191:10201  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":10215:10230  makerBid.signer */\n      tag_173\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_38\n      jump\t// in\n        /* \"contracts/Manager/UnemetaMarket.sol\":10119:10272  _transferNonFungibleToken(... */\n    tag_265:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10308:10581  _transferFeesAndFunds(... */\n      tag_268\n        /* \"contracts/Manager/UnemetaMarket.sol\":10343:10360  makerBid.strategy */\n      tag_269\n      0xe0\n      dup8\n      add\n      0xc0\n      dup9\n      add\n      tag_38\n      jump\t// in\n    tag_269:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10374:10393  makerBid.collection */\n      tag_270\n      0x60\n      dup9\n      add\n      0x40\n      dup10\n      add\n      tag_38\n      jump\t// in\n    tag_270:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10407:10414  tokenId */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":10428:10445  makerBid.currency */\n      tag_271\n      0x0100\n      dup11\n      add\n      0xe0\n      dup12\n      add\n      tag_38\n      jump\t// in\n    tag_271:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10459:10474  makerBid.signer */\n      tag_272\n      0x40\n      dup12\n      add\n      0x20\n      dup13\n      add\n      tag_38\n      jump\t// in\n    tag_272:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10488:10502  takerAsk.taker */\n      tag_273\n      0x40\n      dup14\n      add\n      0x20\n      dup15\n      add\n      tag_38\n      jump\t// in\n    tag_273:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10516:10524  takerAsk */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":10516:10530  takerAsk.price */\n      0x40\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":10544:10552  takerAsk */\n      dup14\n        /* \"contracts/Manager/UnemetaMarket.sol\":10544:10571  takerAsk.minPercentageToAsk */\n      0x80\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":10308:10329  _transferFeesAndFunds */\n      tag_169\n        /* \"contracts/Manager/UnemetaMarket.sol\":10308:10581  _transferFeesAndFunds(... */\n      jump\t// in\n    tag_268:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10725:10742  makerBid.strategy */\n      tag_274\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_38\n      jump\t// in\n    tag_274:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10597:10885  TakerAsk(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":10696:10711  makerBid.signer */\n      tag_275\n      0x40\n      dup8\n      add\n      0x20\n      dup9\n      add\n      tag_38\n      jump\t// in\n    tag_275:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10597:10885  TakerAsk(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":10668:10682  takerAsk.taker */\n      tag_276\n      0x40\n      dup10\n      add\n      0x20\n      dup11\n      add\n      tag_38\n      jump\t// in\n    tag_276:\n        /* \"contracts/Manager/UnemetaMarket.sol\":10597:10885  TakerAsk(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x68cd251d4d267c6e2034ff0088b990352b97b2002c0476587d0c4da889c11330\n        /* \"contracts/Manager/UnemetaMarket.sol\":10619:10626  bidHash */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":10640:10654  makerBid.nonce */\n      0x0100\n      dup11\n      add\n      dup1\n      calldataload\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":10756:10773  makerBid.currency */\n      tag_178\n      swap1\n      0xe0\n      dup14\n      add\n      tag_38\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_281\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":11688:12161  function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {... */\n    tag_100:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11780:11800  NonceList.length > 0 */\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15572:15574   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15554:15575   */\n      mstore\n        /* \"#utility.yul\":15611:15613   */\n      0x1b\n        /* \"#utility.yul\":15591:15609   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15584:15614   */\n      mstore\n        /* \"#utility.yul\":15650:15679   */\n      0x43616e6e6f7420626520656d7074792043616e63656c206c6973740000000000\n        /* \"#utility.yul\":15630:15648   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15623:15680   */\n      mstore\n        /* \"#utility.yul\":15697:15715   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n      tag_133\n        /* \"#utility.yul\":15370:15721   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11772:11832  require(NonceList.length > 0, \"Cannot be empty Cancel list\") */\n    tag_287:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11848:11857  uint256 i */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":11843:12096  for (uint256 i = 0; i < NonceList.length; i++) {... */\n    tag_290:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11863:11883  i < NonceList.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/Manager/UnemetaMarket.sol\":11843:12096  for (uint256 i = 0; i < NonceList.length; i++) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":11946:11956  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11928:11957  userMinOrderNonce[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11928:11945  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11928:11957  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11912:11921  NonceList */\n      dup4\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":11922:11923  i */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":11912:11924  NonceList[i] */\n      dup2\n      dup2\n      lt\n      tag_294\n      jumpi\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11912:11957  NonceList[i] >= userMinOrderNonce[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":11904:12006  require(NonceList[i] >= userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16117:16119   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":11904:12006  require(NonceList[i] >= userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16099:16120   */\n      mstore\n        /* \"#utility.yul\":16156:16158   */\n      0x2c\n        /* \"#utility.yul\":16136:16154   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16129:16159   */\n      mstore\n        /* \"#utility.yul\":16195:16229   */\n      0x43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f77657220\n        /* \"#utility.yul\":16175:16193   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16168:16230   */\n      mstore\n        /* \"#utility.yul\":16266:16280   */\n      0x7468616e2063757272656e740000000000000000000000000000000000000000\n        /* \"#utility.yul\":16246:16264   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16239:16281   */\n      mstore\n        /* \"#utility.yul\":16298:16317   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":11904:12006  require(NonceList[i] >= userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      tag_133\n        /* \"#utility.yul\":15915:16323   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11904:12006  require(NonceList[i] >= userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n    tag_296:\n        /* \"contracts/Manager/UnemetaMarket.sol\":12053:12063  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12064  _theUserOrderExecutedOrCancelled[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12052  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12064  _theUserOrderExecutedOrCancelled[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":12081:12085  true */\n      0x01\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":12065:12074  NonceList */\n      dup6\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":12075:12076  i */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":12065:12077  NonceList[i] */\n      dup2\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_295\n      jump\t// in\n    tag_300:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12078  _theUserOrderExecutedOrCancelled[msg.sender][NonceList[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":12020:12085  _theUserOrderExecutedOrCancelled[msg.sender][NonceList[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":11885:11888  i++ */\n      dup1\n      dup1\n      tag_301\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      swap2\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":11843:12096  for (uint256 i = 0; i < NonceList.length; i++) {... */\n      jump(tag_290)\n    tag_291:\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":12132:12142  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":12111:12154  CancelMultipleOrders(msg.sender, NonceList) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa0ae5d80fe3763c880a3839fab0294171a6f730d1f82c4cd5392c6f67b41732\n        /* \"contracts/Manager/UnemetaMarket.sol\":12144:12153  NonceList */\n      dup4\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":12111:12154  CancelMultipleOrders(msg.sender, NonceList) */\n      mload(0x40)\n      tag_303\n      swap3\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":11688:12161  function cancelMultipleMakerOrders(uint256[] calldata NonceList) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":22542:22837  function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_306\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_306:\n        /* \"contracts/Manager/UnemetaMarket.sol\":22640:22672  _royaltyFeeManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":22632:22708  require(_royaltyFeeManager != address(0), \"Cannot update to a null address\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15212:15214   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":22632:22708  require(_royaltyFeeManager != address(0), \"Cannot update to a null address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15194:15215   */\n      mstore\n        /* \"#utility.yul\":15251:15253   */\n      0x1f\n        /* \"#utility.yul\":15231:15249   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15224:15254   */\n      mstore\n        /* \"#utility.yul\":15290:15323   */\n      0x43616e6e6f742075706461746520746f2061206e756c6c206164647265737300\n        /* \"#utility.yul\":15270:15288   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15263:15324   */\n      mstore\n        /* \"#utility.yul\":15341:15359   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":22632:22708  require(_royaltyFeeManager != address(0), \"Cannot update to a null address\") */\n      tag_133\n        /* \"#utility.yul\":15010:15365   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":22632:22708  require(_royaltyFeeManager != address(0), \"Cannot update to a null address\") */\n    tag_308:\n        /* \"contracts/Manager/UnemetaMarket.sol\":22718:22735  royaltyFeeManager */\n      0x05\n        /* \"contracts/Manager/UnemetaMarket.sol\":22718:22775  royaltyFeeManager = TheRoyaltyManager(_royaltyFeeManager) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":22790:22830  NewRoyaltyFeeManager(_royaltyFeeManager) */\n      mload(0x40)\n      0x80e3874461ebbd918ac3e81da0a92e5e51387d70f337237c9123e48d20e5a508\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":22542:22837  function updateRoyaltyFeeManager(address _royaltyFeeManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":11044:11519  function cancelAllOrdersForSender(uint256 minNonce) external {... */\n    tag_113:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11152:11162  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11134:11163  userMinOrderNonce[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11134:11151  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11134:11163  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11123:11163  minNonce > userMinOrderNonce[msg.sender] */\n      dup2\n      gt\n        /* \"contracts/Manager/UnemetaMarket.sol\":11115:11212  require(minNonce > userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":16117:16119   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":11115:11212  require(minNonce > userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16099:16120   */\n      mstore\n        /* \"#utility.yul\":16156:16158   */\n      0x2c\n        /* \"#utility.yul\":16136:16154   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16129:16159   */\n      mstore\n        /* \"#utility.yul\":16195:16229   */\n      0x43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f77657220\n        /* \"#utility.yul\":16175:16193   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16168:16230   */\n      mstore\n        /* \"#utility.yul\":16266:16280   */\n      0x7468616e2063757272656e740000000000000000000000000000000000000000\n        /* \"#utility.yul\":16246:16264   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16239:16281   */\n      mstore\n        /* \"#utility.yul\":16298:16317   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":11115:11212  require(minNonce > userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n      tag_133\n        /* \"#utility.yul\":15915:16323   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11115:11212  require(minNonce > userMinOrderNonce[msg.sender], \"Cancel Order nonce cannot lower than current\") */\n    tag_311:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11259:11269  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11270  userMinOrderNonce[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11258  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11270  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11279  userMinOrderNonce[msg.sender] + 500000 */\n      tag_313\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":11273:11279  500000 */\n      0x07a120\n        /* \"contracts/Manager/UnemetaMarket.sol\":11241:11279  userMinOrderNonce[msg.sender] + 500000 */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11230:11238  minNonce */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":11230:11279  minNonce < userMinOrderNonce[msg.sender] + 500000 */\n      lt\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":17355:17357   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17337:17358   */\n      mstore\n        /* \"#utility.yul\":17394:17396   */\n      0x1d\n        /* \"#utility.yul\":17374:17392   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17367:17397   */\n      mstore\n        /* \"#utility.yul\":17433:17464   */\n      0x43616e6e6f742063616e63656c20746f6f206d616e79206f7264657273000000\n        /* \"#utility.yul\":17413:17431   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17406:17465   */\n      mstore\n        /* \"#utility.yul\":17482:17500   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n      tag_133\n        /* \"#utility.yul\":17153:17506   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11222:11313  require(minNonce < userMinOrderNonce[msg.sender] + 500000, \"Cannot cancel too many orders\") */\n    tag_315:\n        /* \"contracts/Manager/UnemetaMarket.sol\":11437:11447  msg.sender */\n      caller\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11448  userMinOrderNonce[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11436  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11448  userMinOrderNonce[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":11419:11459  userMinOrderNonce[msg.sender] = minNonce */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":11475:11512  CancelAllOrders(msg.sender, minNonce) */\n      mload\n      0x1e7178d84f0b0825c65795cd62e7972809ad3aac6917843aaec596161b2c0a97\n      swap1\n      tag_318\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":11451:11459  minNonce */\n      dup5\n        /* \"#utility.yul\":1576:1601   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1564:1566   */\n      0x20\n        /* \"#utility.yul\":1549:1567   */\n      add\n      swap1\n        /* \"#utility.yul\":1430:1607   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":11475:11512  CancelAllOrders(msg.sender, minNonce) */\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":11044:11519  function cancelAllOrdersForSender(uint256 minNonce) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":21719:22002  function updateExecutionManager(address _executionManager) external onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_320\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_320:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21815:21846  _executionManager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":21807:21882  require(_executionManager != address(0), \"Cannot update to a null address\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15212:15214   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":21807:21882  require(_executionManager != address(0), \"Cannot update to a null address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15194:15215   */\n      mstore\n        /* \"#utility.yul\":15251:15253   */\n      0x1f\n        /* \"#utility.yul\":15231:15249   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15224:15254   */\n      mstore\n        /* \"#utility.yul\":15290:15323   */\n      0x43616e6e6f742075706461746520746f2061206e756c6c206164647265737300\n        /* \"#utility.yul\":15270:15288   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15263:15324   */\n      mstore\n        /* \"#utility.yul\":15341:15359   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":21807:21882  require(_executionManager != address(0), \"Cannot update to a null address\") */\n      tag_133\n        /* \"#utility.yul\":15010:15365   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":21807:21882  require(_executionManager != address(0), \"Cannot update to a null address\") */\n    tag_322:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21892:21908  executionManager */\n      0x04\n        /* \"contracts/Manager/UnemetaMarket.sol\":21892:21942  executionManager = TheExManager(_executionManager) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":21957:21995  NewExecutionManager(_executionManager) */\n      mload(0x40)\n      0x36e2a376eabc3bc60cb88f29c288f53e36874a95a7f407330ab4f166b0905698\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":21719:22002  function updateExecutionManager(address _executionManager) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":17713:17715   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17695:17716   */\n      mstore\n        /* \"#utility.yul\":17752:17754   */\n      0x26\n        /* \"#utility.yul\":17732:17750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17725:17755   */\n      mstore\n        /* \"#utility.yul\":17791:17825   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17771:17789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17764:17826   */\n      mstore\n        /* \"#utility.yul\":17862:17870   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17842:17860   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17835:17871   */\n      mstore\n        /* \"#utility.yul\":17888:17907   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_133\n        /* \"#utility.yul\":17511:17913   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_327:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_330\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":22993:23304  function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_332:\n        /* \"contracts/Manager/UnemetaMarket.sol\":23095:23129  _transferSelectorNFT != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":23087:23165  require(_transferSelectorNFT != address(0), \"Cannot update to a null address\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":15212:15214   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":23087:23165  require(_transferSelectorNFT != address(0), \"Cannot update to a null address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15194:15215   */\n      mstore\n        /* \"#utility.yul\":15251:15253   */\n      0x1f\n        /* \"#utility.yul\":15231:15249   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15224:15254   */\n      mstore\n        /* \"#utility.yul\":15290:15323   */\n      0x43616e6e6f742075706461746520746f2061206e756c6c206164647265737300\n        /* \"#utility.yul\":15270:15288   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15263:15324   */\n      mstore\n        /* \"#utility.yul\":15341:15359   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":23087:23165  require(_transferSelectorNFT != address(0), \"Cannot update to a null address\") */\n      tag_133\n        /* \"#utility.yul\":15010:15365   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":23087:23165  require(_transferSelectorNFT != address(0), \"Cannot update to a null address\") */\n    tag_334:\n        /* \"contracts/Manager/UnemetaMarket.sol\":23175:23194  transferSelectorNFT */\n      0x06\n        /* \"contracts/Manager/UnemetaMarket.sol\":23175:23238  transferSelectorNFT = TheTransferSelector(_transferSelectorNFT) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":23253:23297  NewTransferSelectorNFT(_transferSelectorNFT) */\n      mload(0x40)\n      0x205d78ab41afe80bd6b6aaa5d7599d5300ff8690da3ab1302c1b552f7baf7d8c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/Manager/UnemetaMarket.sol\":22993:23304  function updateTransferSelectorNFT(address _transferSelectorNFT) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":18120:18122   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18102:18123   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18139:18157   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18132:18162   */\n      mstore\n        /* \"#utility.yul\":18198:18232   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18178:18196   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18171:18233   */\n      mstore\n        /* \"#utility.yul\":18250:18268   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_133\n        /* \"#utility.yul\":17918:18274   */\n      jump\n        /* \"contracts/libraries/OrderTypes.sol\":2084:2776  function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {... */\n    tag_150:\n        /* \"contracts/libraries/OrderTypes.sol\":2270:2291  makerOrder.isOrderAsk */\n      dup1\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2309:2326  makerOrder.signer */\n      0x20\n      dup1\n      dup4\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2344:2365  makerOrder.collection */\n      0x40\n      dup1\n      dup6\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2383:2399  makerOrder.price */\n      0x60\n      dup7\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2417:2435  makerOrder.tokenId */\n      0x80\n      dup8\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2453:2470  makerOrder.amount */\n      0xa0\n      dup9\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2488:2507  makerOrder.strategy */\n      0xc0\n      dup10\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2525:2544  makerOrder.currency */\n      0xe0\n      dup11\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2562:2578  makerOrder.nonce */\n      0x0100\n      dup12\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2596:2616  makerOrder.startTime */\n      0x0120\n      dup13\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2634:2652  makerOrder.endTime */\n      0x0140\n      dup14\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2670:2699  makerOrder.minPercentageToAsk */\n      0x0160\n      dup15\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2727:2744  makerOrder.params */\n      0x0180\n      dup16\n      add\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2717:2745  keccak256(makerOrder.params) */\n      dup1\n      mload\n      swap1\n      dup15\n      add\n      keccak256\n        /* \"contracts/libraries/OrderTypes.sol\":2208:2759  abi.encode(... */\n      swap11\n      mload\n        /* \"contracts/libraries/OrderTypes.sol\":2151:2158  bytes32 */\n      0x00\n      swap15\n        /* \"contracts/libraries/OrderTypes.sol\":2208:2759  abi.encode(... */\n      tag_344\n      swap15\n        /* \"contracts/libraries/OrderTypes.sol\":592:658  0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028 */\n      0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028\n      swap15\n        /* \"contracts/libraries/OrderTypes.sol\":2270:2291  makerOrder.isOrderAsk */\n      swap2\n      swap14\n        /* \"contracts/libraries/OrderTypes.sol\":2309:2326  makerOrder.signer */\n      swap2\n      swap13\n        /* \"contracts/libraries/OrderTypes.sol\":2344:2365  makerOrder.collection */\n      swap12\n        /* \"contracts/libraries/OrderTypes.sol\":2383:2399  makerOrder.price */\n      swap11\n        /* \"contracts/libraries/OrderTypes.sol\":2417:2435  makerOrder.tokenId */\n      swap10\n        /* \"contracts/libraries/OrderTypes.sol\":2453:2470  makerOrder.amount */\n      swap9\n        /* \"contracts/libraries/OrderTypes.sol\":2488:2507  makerOrder.strategy */\n      swap8\n        /* \"contracts/libraries/OrderTypes.sol\":2525:2544  makerOrder.currency */\n      swap7\n        /* \"contracts/libraries/OrderTypes.sol\":2562:2578  makerOrder.nonce */\n      swap6\n        /* \"contracts/libraries/OrderTypes.sol\":2596:2616  makerOrder.startTime */\n      swap5\n        /* \"contracts/libraries/OrderTypes.sol\":2634:2652  makerOrder.endTime */\n      swap4\n        /* \"contracts/libraries/OrderTypes.sol\":2670:2699  makerOrder.minPercentageToAsk */\n      swap3\n        /* \"contracts/libraries/OrderTypes.sol\":2208:2759  abi.encode(... */\n      add\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/libraries/OrderTypes.sol\":2185:2769  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/libraries/OrderTypes.sol\":2170:2769  return... */\n      swap1\n      pop\n        /* \"contracts/libraries/OrderTypes.sol\":2084:2776  function hash(MakerOrder memory makerOrder) internal pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":19013:21124  function _validateOrder(OrderTypes.MakerOrder calldata Make, bytes32 Hash) internal view {... */\n    tag_152:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19271  _theUserOrderExecutedOrCancelled */\n      0x08\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19284  _theUserOrderExecutedOrCancelled[Make.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19272:19283  Make.signer */\n      tag_347\n      0x40\n      dup6\n      add\n      0x20\n      dup7\n      add\n      tag_38\n      jump\t// in\n    tag_347:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19284  _theUserOrderExecutedOrCancelled[Make.signer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":19285:19295  Make.nonce */\n      0x0100\n      dup7\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19239:19296  _theUserOrderExecutedOrCancelled[Make.signer][Make.nonce] */\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":19238:19296  !_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce] */\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":19237:19359  (!_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce]) &&... */\n      dup1\n      iszero\n      tag_348\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":19328:19345  userMinOrderNonce */\n      0x07\n        /* \"contracts/Manager/UnemetaMarket.sol\":19328:19358  userMinOrderNonce[Make.signer] */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19346:19357  Make.signer */\n      tag_349\n      0x40\n      dup6\n      add\n      0x20\n      dup7\n      add\n      tag_38\n      jump\t// in\n    tag_349:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19328:19358  userMinOrderNonce[Make.signer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19314:19318  Make */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":19314:19324  Make.nonce */\n      0x0100\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19314:19358  Make.nonce >= userMinOrderNonce[Make.signer] */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":19237:19359  (!_theUserOrderExecutedOrCancelled[Make.signer][Make.nonce]) &&... */\n    tag_348:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":19700:19702   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19682:19703   */\n      mstore\n        /* \"#utility.yul\":19739:19741   */\n      0x1d\n        /* \"#utility.yul\":19719:19737   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19712:19742   */\n      mstore\n        /* \"#utility.yul\":19778:19809   */\n      0x4f726465723a204d61746368696e67206f726465722065787069726564000000\n        /* \"#utility.yul\":19758:19776   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19751:19810   */\n      mstore\n        /* \"#utility.yul\":19827:19845   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n      tag_133\n        /* \"#utility.yul\":19498:19851   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":19162:19414  require(... */\n    tag_350:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19497:19498  0 */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19474:19485  Make.signer */\n      tag_353\n      0x40\n      dup5\n      add\n      0x20\n      dup6\n      add\n      tag_38\n      jump\t// in\n    tag_353:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19474:19499  Make.signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":20058:20060   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20040:20061   */\n      mstore\n        /* \"#utility.yul\":20097:20099   */\n      0x2b\n        /* \"#utility.yul\":20077:20095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20070:20100   */\n      mstore\n        /* \"#utility.yul\":20136:20170   */\n      0x546865204f72646572207369676e65722063616e6e6f7420626520746865207a\n        /* \"#utility.yul\":20116:20134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20109:20171   */\n      mstore\n        /* \"#utility.yul\":20207:20220   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20187:20205   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20180:20221   */\n      mstore\n        /* \"#utility.yul\":20238:20257   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n      tag_133\n        /* \"#utility.yul\":19856:20263   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":19466:19547  require(Make.signer != address(0), \"The Order signer cannot be the zero address\") */\n    tag_354:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19625:19626  0 */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":19611:19615  Make */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":19611:19622  Make.amount */\n      0xa0\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19611:19626  Make.amount > 0 */\n      gt\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":20470:20472   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20452:20473   */\n      mstore\n        /* \"#utility.yul\":20509:20511   */\n      0x29\n        /* \"#utility.yul\":20489:20507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20482:20512   */\n      mstore\n        /* \"#utility.yul\":20548:20582   */\n      0x546865206f7264657220616d6f756e742073686f756c64206265206772656174\n        /* \"#utility.yul\":20528:20546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20521:20583   */\n      mstore\n        /* \"#utility.yul\":20619:20630   */\n      0x6572207468616e20300000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20599:20617   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20592:20631   */\n      mstore\n        /* \"#utility.yul\":20648:20667   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n      tag_133\n        /* \"#utility.yul\":20268:20673   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":19603:19672  require(Make.amount > 0, \"The order amount should be greater than 0\") */\n    tag_357:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19721:20267  abi.encode(... */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Manager/UnemetaMarket.sol\":19749:19815  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"contracts/Manager/UnemetaMarket.sol\":19721:20267  abi.encode(... */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":21189:21214   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":19944:20010  0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5 */\n      0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5\n        /* \"#utility.yul\":21230:21248   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":21223:21257   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":20070:20136  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6 */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"#utility.yul\":21273:21291   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":21266:21300   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":20209:20222  block.chainid */\n      chainid\n        /* \"#utility.yul\":21316:21334   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":21309:21343   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":20248:20252  this */\n      address\n        /* \"#utility.yul\":21359:21378   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":21352:21436   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":19683:19697  bytes32 Domain */\n      0x00\n      swap1\n        /* \"#utility.yul\":21161:21180   */\n      0xc0\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":19721:20267  abi.encode(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":19698:20277  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Manager/UnemetaMarket.sol\":19683:20277  bytes32 Domain=keccak256(... */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":20482:20748  SignatureChecker.... */\n      tag_362\n        /* \"contracts/Manager/UnemetaMarket.sol\":20536:20540  Hash */\n      dup3\n        /* \"contracts/Manager/UnemetaMarket.sol\":20565:20569  Make */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":20565:20576  Make.signer */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_363\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_363:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20612:20618  Make.v */\n      tag_364\n      0x01c0\n      dup8\n      add\n      0x01a0\n      dup9\n      add\n      tag_365\n      jump\t// in\n    tag_364:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20680:20684  Make */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":20680:20686  Make.r */\n      0x01c0\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":20704:20708  Make */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":20704:20710  Make.s */\n      0x01e0\n      add\n      calldataload\n        /* \"contracts/Manager/UnemetaMarket.sol\":20728:20734  Domain */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":20482:20518  SignatureChecker.... */\n      tag_366\n        /* \"contracts/Manager/UnemetaMarket.sol\":20482:20748  SignatureChecker.... */\n      jump\t// in\n    tag_362:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20461:20792  require(... */\n      tag_367\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":21836:21838   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":20461:20792  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21818:21839   */\n      mstore\n        /* \"#utility.yul\":21875:21877   */\n      0x12\n        /* \"#utility.yul\":21855:21873   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21848:21878   */\n      mstore\n        /* \"#utility.yul\":21914:21934   */\n      0x5369676e61747572653a20496e76616c69640000000000000000000000000000\n        /* \"#utility.yul\":21894:21912   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21887:21935   */\n      mstore\n        /* \"#utility.yul\":21952:21970   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":20461:20792  require(... */\n      tag_133\n        /* \"#utility.yul\":21634:21976   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":20461:20792  require(... */\n    tag_367:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20854:20869  currencyManager */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x03))\n        /* \"contracts/Manager/UnemetaMarket.sol\":20854:20891  currencyManager.isCurrencyWhitelisted */\n      0x43b938c5\n        /* \"contracts/Manager/UnemetaMarket.sol\":20892:20905  Make.currency */\n      tag_370\n        /* \"contracts/Manager/UnemetaMarket.sol\":20854:20869  currencyManager */\n      0x0100\n        /* \"contracts/Manager/UnemetaMarket.sol\":20892:20905  Make.currency */\n      dup7\n      add\n      0xe0\n      dup8\n      add\n      tag_38\n      jump\t// in\n    tag_370:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20854:20906  currencyManager.isCurrencyWhitelisted(Make.currency) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n        /* \"#utility.yul\":217:259   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":205:260   */\n      swap1\n      swap2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":20854:20906  currencyManager.isCurrencyWhitelisted(Make.currency) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":187:261   */\n      mstore\n        /* \"#utility.yul\":160:178   */\n      0x24\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":20854:20906  currencyManager.isCurrencyWhitelisted(Make.currency) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_373\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_373:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_374\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n        /* \"contracts/Manager/UnemetaMarket.sol\":20846:20937  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":22433:22435   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":20846:20937  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22415:22436   */\n      mstore\n        /* \"#utility.yul\":22472:22474   */\n      0x1a\n        /* \"#utility.yul\":22452:22470   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22445:22475   */\n      mstore\n        /* \"#utility.yul\":22511:22539   */\n      0x204e6f7420696e2043757272656e63792077686974656c697374000000000000\n        /* \"#utility.yul\":22491:22509   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22484:22540   */\n      mstore\n        /* \"#utility.yul\":22557:22575   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":20846:20937  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n      tag_133\n        /* \"#utility.yul\":22231:22581   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":20846:20937  require(currencyManager.isCurrencyWhitelisted(Make.currency), \" Not in Currency whitelist\") */\n    tag_376:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21033:21049  executionManager */\n      and(0xffffffffffffffffffffffffffffffffffffffff, sload(0x04))\n        /* \"contracts/Manager/UnemetaMarket.sol\":21033:21071  executionManager.isStrategyWhitelisted */\n      0x999ba27c\n        /* \"contracts/Manager/UnemetaMarket.sol\":21072:21085  Make.strategy */\n      tag_379\n      0xe0\n      dup7\n      add\n      0xc0\n      dup8\n      add\n      tag_38\n      jump\t// in\n    tag_379:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21033:21086  executionManager.isStrategyWhitelisted(Make.strategy) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n        /* \"#utility.yul\":217:259   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":205:260   */\n      swap1\n      swap2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":21033:21086  executionManager.isStrategyWhitelisted(Make.strategy) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":187:261   */\n      mstore\n        /* \"#utility.yul\":160:178   */\n      0x24\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":21033:21086  executionManager.isStrategyWhitelisted(Make.strategy) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_383\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_383:\n        /* \"contracts/Manager/UnemetaMarket.sol\":21025:21117  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":22788:22790   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":21025:21117  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22770:22791   */\n      mstore\n        /* \"#utility.yul\":22827:22829   */\n      0x1a\n        /* \"#utility.yul\":22807:22825   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22800:22830   */\n      mstore\n        /* \"#utility.yul\":22866:22894   */\n      0x204e6f7420696e2053747261746567792077686974656c697374000000000000\n        /* \"#utility.yul\":22846:22864   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22839:22895   */\n      mstore\n        /* \"#utility.yul\":22912:22930   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":21025:21117  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n      tag_133\n        /* \"#utility.yul\":22586:22936   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":21025:21117  require(executionManager.isStrategyWhitelisted(Make.strategy), \" Not in Strategy whitelist\") */\n    tag_384:\n        /* \"contracts/Manager/UnemetaMarket.sol\":19102:21124  {... */\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":19013:21124  function _validateOrder(OrderTypes.MakerOrder calldata Make, bytes32 Hash) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":13294:15165  function _transferFeesAndFunds(... */\n    tag_169:\n        /* \"contracts/Manager/UnemetaMarket.sol\":13619:13625  amount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":13591:13616  uint256 finalSellerAmount */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":13714:13753  _calculateProtocolFee(strategy, amount) */\n      tag_388\n        /* \"contracts/Manager/UnemetaMarket.sol\":13736:13744  strategy */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":13619:13625  amount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":13714:13735  _calculateProtocolFee */\n      tag_389\n        /* \"contracts/Manager/UnemetaMarket.sol\":13714:13753  _calculateProtocolFee(strategy, amount) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14022:14042  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":13686:13753  uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14022:14056  protocolFeeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":14022:14042  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14022:14056  protocolFeeRecipient != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":14021:14085  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n      tag_390\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14062:14084  protocolFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":14021:14085  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n    tag_390:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14017:14244  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":14141:14161  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14181  IERC20(currency).safeTransferFrom(from, protocolFeeRecipient, protocolFeeAmount) */\n      tag_392\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":14141:14161  protocolFeeRecipient */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14134  IERC20(currency).safeTransferFrom */\n      dup10\n      dup2\n      and\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14135:14139  from */\n      dup10\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14141:14161  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14163:14180  protocolFeeAmount */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14134  IERC20(currency).safeTransferFrom */\n      tag_202\n        /* \"contracts/Manager/UnemetaMarket.sol\":14101:14181  IERC20(currency).safeTransferFrom(from, protocolFeeRecipient, protocolFeeAmount) */\n      jump\t// in\n    tag_392:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14195:14233  finalSellerAmount -= protocolFeeAmount */\n      tag_393\n        /* \"contracts/Manager/UnemetaMarket.sol\":14216:14233  protocolFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14195:14233  finalSellerAmount -= protocolFeeAmount */\n      dup4\n      tag_201\n      jump\t// in\n    tag_393:\n      swap2\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14017:14244  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n    tag_391:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14368  royaltyFeeManager */\n      sload(0x05)\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14441  royaltyFeeManager... */\n      mload(0x40)\n      0xf4f635fa00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14368  royaltyFeeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23161:23216   */\n      dup12\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14441  royaltyFeeManager... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":23143:23217   */\n      mstore\n        /* \"#utility.yul\":23233:23251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23226:23260   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":23276:23294   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23269:23303   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":14294:14321  address royaltyFeeRecipient */\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14368  royaltyFeeManager */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14412  royaltyFeeManager... */\n      0xf4f635fa\n      swap1\n        /* \"#utility.yul\":23116:23134   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":14351:14441  royaltyFeeManager... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_397:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_398\n      swap2\n      swap1\n      tag_399\n      jump\t// in\n    tag_398:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14293:14441  (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14537:14570  royaltyFeeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":14536:14598  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n      tag_400\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14576:14597  royaltyFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":14536:14598  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n    tag_400:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14532:14858  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n      iszero\n      tag_401\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14692  IERC20(currency).safeTransferFrom(from, royaltyFeeRecipient, royaltyFeeAmount) */\n      tag_402\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14647  IERC20(currency).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup11\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14648:14652  from */\n      dup10\n        /* \"contracts/Manager/UnemetaMarket.sol\":14654:14673  royaltyFeeRecipient */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":14675:14691  royaltyFeeAmount */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14647  IERC20(currency).safeTransferFrom */\n      tag_202\n        /* \"contracts/Manager/UnemetaMarket.sol\":14614:14692  IERC20(currency).safeTransferFrom(from, royaltyFeeRecipient, royaltyFeeAmount) */\n      jump\t// in\n    tag_402:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14706:14743  finalSellerAmount -= royaltyFeeAmount */\n      tag_403\n        /* \"contracts/Manager/UnemetaMarket.sol\":14727:14743  royaltyFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14706:14743  finalSellerAmount -= royaltyFeeAmount */\n      dup6\n      tag_201\n      jump\t// in\n    tag_403:\n      swap4\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":14799:14818  royaltyFeeRecipient */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":14790:14797  tokenId */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":14778:14788  collection */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d\n        /* \"contracts/Manager/UnemetaMarket.sol\":14820:14828  currency */\n      dup13\n        /* \"contracts/Manager/UnemetaMarket.sol\":14830:14846  royaltyFeeAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n      mload(0x40)\n      tag_404\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":23835:23877   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23823:23878   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":23805:23879   */\n      dup3\n      mstore\n        /* \"#utility.yul\":23910:23912   */\n      0x20\n        /* \"#utility.yul\":23895:23913   */\n      dup3\n      add\n        /* \"#utility.yul\":23888:23922   */\n      mstore\n        /* \"#utility.yul\":23793:23795   */\n      0x40\n        /* \"#utility.yul\":23778:23796   */\n      add\n      swap1\n        /* \"#utility.yul\":23631:23928   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":14763:14847  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, currency, royaltyFeeAmount) */\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/UnemetaMarket.sol\":14532:14858  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n    tag_401:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14981:15008  minPercentageToAsk * amount */\n      tag_406\n        /* \"contracts/Manager/UnemetaMarket.sol\":15002:15008  amount */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":14981:14999  minPercentageToAsk */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":14981:15008  minPercentageToAsk * amount */\n      tag_407\n      jump\t// in\n    tag_406:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14950:14975  finalSellerAmount * 10000 */\n      tag_408\n        /* \"contracts/Manager/UnemetaMarket.sol\":14950:14967  finalSellerAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":14970:14975  10000 */\n      0x2710\n        /* \"contracts/Manager/UnemetaMarket.sol\":14950:14975  finalSellerAmount * 10000 */\n      tag_407\n      jump\t// in\n    tag_408:\n        /* \"contracts/Manager/UnemetaMarket.sol\":14949:15009  (finalSellerAmount * 10000) >= (minPercentageToAsk * amount) */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":14941:15048  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":24308:24310   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":14941:15048  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24290:24311   */\n      mstore\n        /* \"#utility.yul\":24347:24349   */\n      0x22\n        /* \"#utility.yul\":24327:24345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24320:24350   */\n      mstore\n        /* \"#utility.yul\":24386:24420   */\n      0x5468652066656520697320746f6f206869676820666f72207468652073656c6c\n        /* \"#utility.yul\":24366:24384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":24359:24421   */\n      mstore\n        /* \"#utility.yul\":24457:24461   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24437:24455   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":24430:24462   */\n      mstore\n        /* \"#utility.yul\":24479:24498   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":14941:15048  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      tag_133\n        /* \"#utility.yul\":24106:24504   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":14941:15048  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n    tag_409:\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15157  IERC20(currency).safeTransferFrom(from, to, finalSellerAmount) */\n      tag_412\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15128  IERC20(currency).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup11\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":15129:15133  from */\n      dup10\n        /* \"contracts/Manager/UnemetaMarket.sol\":15135:15137  to */\n      dup10\n        /* \"contracts/Manager/UnemetaMarket.sol\":15139:15156  finalSellerAmount */\n      dup8\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15128  IERC20(currency).safeTransferFrom */\n      tag_202\n        /* \"contracts/Manager/UnemetaMarket.sol\":15095:15157  IERC20(currency).safeTransferFrom(from, to, finalSellerAmount) */\n      jump\t// in\n    tag_412:\n        /* \"contracts/Manager/UnemetaMarket.sol\":13547:15165  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":13294:15165  function _transferFeesAndFunds(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":17717:18298  function _transferNonFungibleToken(... */\n    tag_174:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:17986  transferSelectorNFT */\n      sload(0x06)\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18027  transferSelectorNFT.checkTransferManagerForToken(collection) */\n      mload(0x40)\n      0xcc15949300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:17986  transferSelectorNFT */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":205:260   */\n      dup8\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18027  transferSelectorNFT.checkTransferManagerForToken(collection) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":187:261   */\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":17949:17964  address Manager */\n      0x00\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:17986  transferSelectorNFT */\n      and\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18015  transferSelectorNFT.checkTransferManagerForToken */\n      0xcc159493\n      swap1\n        /* \"#utility.yul\":160:178   */\n      0x24\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":17967:18027  transferSelectorNFT.checkTransferManagerForToken(collection) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_416\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_416:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_417\n      swap2\n      swap1\n      tag_418\n      jump\t// in\n    tag_417:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17949:18027  address Manager = transferSelectorNFT.checkTransferManagerForToken(collection) */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":18088:18109  Manager != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n      tag_419\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":24967:24969   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24949:24970   */\n      mstore\n        /* \"#utility.yul\":25006:25008   */\n      0x1c\n        /* \"#utility.yul\":24986:25004   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24979:25009   */\n      mstore\n        /* \"#utility.yul\":25045:25075   */\n      0x43616e277420666f756e74207472616e73666572206d616e6167657200000000\n        /* \"#utility.yul\":25025:25043   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":25018:25076   */\n      mstore\n        /* \"#utility.yul\":25093:25111   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n      tag_133\n        /* \"#utility.yul\":24765:25117   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":18080:18142  require(Manager != address(0), \"Can't fount transfer manager\") */\n    tag_419:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18291  TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount) */\n      mload(0x40)\n      0x33f2fa9f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18252  TheTransferManager(Manager).transferNonFungibleToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25460:25475   */\n      dup8\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18291  TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":25442:25476   */\n      mstore\n        /* \"#utility.yul\":25512:25527   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":25492:25510   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":25485:25528   */\n      mstore\n        /* \"#utility.yul\":25564:25579   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":25544:25562   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":25537:25580   */\n      mstore\n        /* \"#utility.yul\":25596:25614   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":25589:25623   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":25639:25658   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":25632:25667   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18252  TheTransferManager(Manager).transferNonFungibleToken */\n      dup3\n      and\n      swap1\n      0x33f2fa9f\n      swap1\n        /* \"#utility.yul\":25353:25372   */\n      0xa4\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":18200:18291  TheTransferManager(Manager).transferNonFungibleToken(collection, from, to, tokenId, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_424\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_424:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_426\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_426:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":17886:18298  {... */\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":17717:18298  function _transferNonFungibleToken(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n        /* \"#utility.yul\":25890:25932   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25959:25974   */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":25941:25975   */\n      mstore\n        /* \"#utility.yul\":26011:26026   */\n      dup4\n      and\n        /* \"#utility.yul\":25991:26009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":25984:26027   */\n      mstore\n        /* \"#utility.yul\":26043:26061   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":26036:26070   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_428\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      swap1\n        /* \"#utility.yul\":25853:25871   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n    tag_429:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_431\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":15615:17410  function _transferFeesAndFundsWithWETH(... */\n    tag_225:\n        /* \"contracts/Manager/UnemetaMarket.sol\":15903:15909  amount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":15875:15900  uint256 finalSellerAmount */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":15998:16037  _calculateProtocolFee(strategy, amount) */\n      tag_433\n        /* \"contracts/Manager/UnemetaMarket.sol\":16020:16028  strategy */\n      dup9\n        /* \"contracts/Manager/UnemetaMarket.sol\":15903:15909  amount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":15998:16019  _calculateProtocolFee */\n      tag_389\n        /* \"contracts/Manager/UnemetaMarket.sol\":15998:16037  _calculateProtocolFee(strategy, amount) */\n      jump\t// in\n    tag_433:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16307:16327  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":15970:16037  uint256 protocolFeeAmount = _calculateProtocolFee(strategy, amount) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16307:16341  protocolFeeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":16307:16327  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16307:16341  protocolFeeRecipient != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":16306:16370  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n      tag_434\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16347:16369  protocolFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":16306:16370  (protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0) */\n    tag_434:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16302:16515  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n      iszero\n      tag_435\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":16412:16432  protocolFeeRecipient */\n      sload(0x02)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16452  IERC20(WETH).safeTransfer(protocolFeeRecipient, protocolFeeAmount) */\n      tag_436\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":16412:16432  protocolFeeRecipient */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":16393:16397  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16411  IERC20(WETH).safeTransfer */\n      dup2\n      and\n      swap2\n        /* \"contracts/Manager/UnemetaMarket.sol\":16412:16432  protocolFeeRecipient */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16434:16451  protocolFeeAmount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16411  IERC20(WETH).safeTransfer */\n      tag_437\n        /* \"contracts/Manager/UnemetaMarket.sol\":16386:16452  IERC20(WETH).safeTransfer(protocolFeeRecipient, protocolFeeAmount) */\n      jump\t// in\n    tag_436:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16466:16504  finalSellerAmount -= protocolFeeAmount */\n      tag_438\n        /* \"contracts/Manager/UnemetaMarket.sol\":16487:16504  protocolFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":16466:16504  finalSellerAmount -= protocolFeeAmount */\n      dup4\n      tag_201\n      jump\t// in\n    tag_438:\n      swap2\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16302:16515  if ((protocolFeeRecipient != address(0)) && (protocolFeeAmount != 0)) {... */\n    tag_435:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16636  royaltyFeeManager */\n      sload(0x05)\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16709  royaltyFeeManager... */\n      mload(0x40)\n      0xf4f635fa00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16636  royaltyFeeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23161:23216   */\n      dup10\n      dup2\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16709  royaltyFeeManager... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":23143:23217   */\n      mstore\n        /* \"#utility.yul\":23233:23251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23226:23260   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":23276:23294   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23269:23303   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Manager/UnemetaMarket.sol\":16562:16589  address royaltyFeeRecipient */\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16636  royaltyFeeManager */\n      swap2\n      and\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16680  royaltyFeeManager... */\n      0xf4f635fa\n      swap1\n        /* \"#utility.yul\":23116:23134   */\n      0x64\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":16619:16709  royaltyFeeManager... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_441\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_441:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_442\n      swap2\n      swap1\n      tag_399\n      jump\t// in\n    tag_442:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16561:16709  (address royaltyFeeRecipient, uint256 royaltyFeeAmount) = royaltyFeeManager... */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16805:16838  royaltyFeeRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/Manager/UnemetaMarket.sol\":16804:16866  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n      tag_443\n      jumpi\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":16844:16865  royaltyFeeAmount != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":16804:16866  (royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0) */\n    tag_443:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16800:17117  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n      iszero\n      tag_444\n      jumpi\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16946  IERC20(WETH).safeTransfer(royaltyFeeRecipient, royaltyFeeAmount) */\n      tag_445\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16907  IERC20(WETH).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":16889:16893  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16907  IERC20(WETH).safeTransfer */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":16908:16927  royaltyFeeRecipient */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16929:16945  royaltyFeeAmount */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16907  IERC20(WETH).safeTransfer */\n      tag_437\n        /* \"contracts/Manager/UnemetaMarket.sol\":16882:16946  IERC20(WETH).safeTransfer(royaltyFeeRecipient, royaltyFeeAmount) */\n      jump\t// in\n    tag_445:\n        /* \"contracts/Manager/UnemetaMarket.sol\":16960:16997  finalSellerAmount -= royaltyFeeAmount */\n      tag_446\n        /* \"contracts/Manager/UnemetaMarket.sol\":16981:16997  royaltyFeeAmount */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":16960:16997  finalSellerAmount -= royaltyFeeAmount */\n      dup6\n      tag_201\n      jump\t// in\n    tag_446:\n      swap4\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":17053:17072  royaltyFeeRecipient */\n      dup2\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":17044:17051  tokenId */\n      dup9\n        /* \"contracts/Manager/UnemetaMarket.sol\":17032:17042  collection */\n      dup11\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d\n        /* \"contracts/Manager/UnemetaMarket.sol\":17082:17086  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":17089:17105  royaltyFeeAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n      mload(0x40)\n      tag_447\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":23835:23877   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23823:23878   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":23805:23879   */\n      dup3\n      mstore\n        /* \"#utility.yul\":23910:23912   */\n      0x20\n        /* \"#utility.yul\":23895:23913   */\n      dup3\n      add\n        /* \"#utility.yul\":23888:23922   */\n      mstore\n        /* \"#utility.yul\":23793:23795   */\n      0x40\n        /* \"#utility.yul\":23778:23796   */\n      add\n      swap1\n        /* \"#utility.yul\":23631:23928   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":17017:17106  RoyaltyPayment(collection, tokenId, royaltyFeeRecipient, address(WETH), royaltyFeeAmount) */\n    tag_447:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Manager/UnemetaMarket.sol\":16800:17117  if ((royaltyFeeRecipient != address(0)) && (royaltyFeeAmount != 0)) {... */\n    tag_444:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17241:17268  minPercentageToAsk * amount */\n      tag_448\n        /* \"contracts/Manager/UnemetaMarket.sol\":17262:17268  amount */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":17241:17259  minPercentageToAsk */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":17241:17268  minPercentageToAsk * amount */\n      tag_407\n      jump\t// in\n    tag_448:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17210:17235  finalSellerAmount * 10000 */\n      tag_449\n        /* \"contracts/Manager/UnemetaMarket.sol\":17210:17227  finalSellerAmount */\n      dup6\n        /* \"contracts/Manager/UnemetaMarket.sol\":17230:17235  10000 */\n      0x2710\n        /* \"contracts/Manager/UnemetaMarket.sol\":17210:17235  finalSellerAmount * 10000 */\n      tag_407\n      jump\t// in\n    tag_449:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17209:17269  (finalSellerAmount * 10000) >= (minPercentageToAsk * amount) */\n      lt\n      iszero\n        /* \"contracts/Manager/UnemetaMarket.sol\":17201:17308  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      tag_450\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":24308:24310   */\n      0x20\n        /* \"contracts/Manager/UnemetaMarket.sol\":17201:17308  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24290:24311   */\n      mstore\n        /* \"#utility.yul\":24347:24349   */\n      0x22\n        /* \"#utility.yul\":24327:24345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24320:24350   */\n      mstore\n        /* \"#utility.yul\":24386:24420   */\n      0x5468652066656520697320746f6f206869676820666f72207468652073656c6c\n        /* \"#utility.yul\":24366:24384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":24359:24421   */\n      mstore\n        /* \"#utility.yul\":24457:24461   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24437:24455   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":24430:24462   */\n      mstore\n        /* \"#utility.yul\":24479:24498   */\n      0x84\n      add\n        /* \"contracts/Manager/UnemetaMarket.sol\":17201:17308  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n      tag_133\n        /* \"#utility.yul\":24106:24504   */\n      jump\n        /* \"contracts/Manager/UnemetaMarket.sol\":17201:17308  require((finalSellerAmount * 10000) >= (minPercentageToAsk * amount), \"The fee is too high for the seller\") */\n    tag_450:\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17402  IERC20(WETH).safeTransfer(to, finalSellerAmount) */\n      tag_426\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17379  IERC20(WETH).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Manager/UnemetaMarket.sol\":17361:17365  WETH */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17379  IERC20(WETH).safeTransfer */\n      and\n        /* \"contracts/Manager/UnemetaMarket.sol\":17380:17382  to */\n      dup9\n        /* \"contracts/Manager/UnemetaMarket.sol\":17384:17401  finalSellerAmount */\n      dup7\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17379  IERC20(WETH).safeTransfer */\n      tag_437\n        /* \"contracts/Manager/UnemetaMarket.sol\":17354:17402  IERC20(WETH).safeTransfer(to, finalSellerAmount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x01\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SignatureChecker.sol\":1743:2649  function verify(... */\n    tag_366:\n        /* \"contracts/libraries/SignatureChecker.sol\":2124:2175  abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash) */\n      mload(0x40)\n        /* \"#utility.yul\":26351:26417   */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/libraries/SignatureChecker.sol\":2124:2175  abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":26339:26418   */\n      mstore\n        /* \"#utility.yul\":26434:26445   */\n      0x22\n      dup2\n      add\n        /* \"#utility.yul\":26427:26454   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":26470:26482   */\n      0x42\n      dup2\n      add\n        /* \"#utility.yul\":26463:26491   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":1922:1926  bool */\n      0x00\n      swap1\n      dup2\n      swap1\n        /* \"#utility.yul\":26507:26519   */\n      0x62\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":2124:2175  abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":2114:2176  keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/libraries/SignatureChecker.sol\":2097:2176  bytes32 digest = keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, hash)) */\n      swap1\n      pop\n        /* \"contracts/libraries/SignatureChecker.sol\":2250:2276  Address.isContract(signer) */\n      tag_458\n        /* \"contracts/libraries/SignatureChecker.sol\":2269:2275  signer */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":2250:2276  Address.isContract(signer) */\n    tag_458:\n        /* \"contracts/libraries/SignatureChecker.sol\":2246:2643  if (Address.isContract(signer)) {... */\n      iszero\n      tag_460\n      jumpi\n        /* \"contracts/libraries/SignatureChecker.sol\":2453:2478  abi.encodePacked(r, s, v) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":26711:26730   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":26746:26758   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":26739:26767   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":26805:26808   */\n      0xf8\n        /* \"#utility.yul\":26801:26817   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":26819:26885   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26797:26886   */\n      and\n        /* \"#utility.yul\":26783:26795   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":26776:26887   */\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":2453:2478  abi.encodePacked(r, s, v) */\n      dup2\n      mload\n      0x41\n      dup2\n      dup4\n      sub\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":26903:26915   */\n      0x61\n      dup3\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":2453:2478  abi.encodePacked(r, s, v) */\n      swap3\n      dup4\n      swap1\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2479  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) */\n      0x1626ba7e00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap3\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2444  IERC1271(signer).isValidSignature */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n      and\n      swap2\n      0x1626ba7e\n      swap2\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2479  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) */\n      tag_463\n      swap2\n        /* \"contracts/libraries/SignatureChecker.sol\":2445:2451  digest */\n      dup6\n      swap2\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2479  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) */\n      0x65\n      add\n      tag_464\n      jump\t// in\n    tag_463:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_466\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_466:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_467\n      swap2\n      swap1\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2493  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":2483:2493  0x1626ba7e */\n      0x1626ba7e\n        /* \"contracts/libraries/SignatureChecker.sol\":2411:2493  IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e */\n      0xe0\n      shl\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":2404:2493  return IERC1271(signer).isValidSignature(digest, abi.encodePacked(r, s, v)) == 0x1626ba7e */\n      swap2\n      pop\n      pop\n      jump(tag_455)\n        /* \"contracts/libraries/SignatureChecker.sol\":2246:2643  if (Address.isContract(signer)) {... */\n    tag_460:\n        /* \"contracts/libraries/SignatureChecker.sol\":2626:2632  signer */\n      dup7\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2632  recover(digest, v, r, s) == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2622  recover(digest, v, r, s) */\n      tag_470\n        /* \"contracts/libraries/SignatureChecker.sol\":2606:2612  digest */\n      dup3\n        /* \"contracts/libraries/SignatureChecker.sol\":2614:2615  v */\n      dup9\n        /* \"contracts/libraries/SignatureChecker.sol\":2617:2618  r */\n      dup9\n        /* \"contracts/libraries/SignatureChecker.sol\":2620:2621  s */\n      dup9\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2605  recover */\n      tag_471\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2622  recover(digest, v, r, s) */\n      jump\t// in\n    tag_470:\n        /* \"contracts/libraries/SignatureChecker.sol\":2598:2632  recover(digest, v, r, s) == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":2591:2632  return recover(digest, v, r, s) == signer */\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SignatureChecker.sol\":1743:2649  function verify(... */\n    tag_455:\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Manager/UnemetaMarket.sol\":18551:18781  function _calculateProtocolFee(address theStrategy, uint256 amount) internal view returns (uint256) {... */\n    tag_389:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18642:18649  uint256 */\n      0x00\n        /* \"contracts/Manager/UnemetaMarket.sol\":18661:18680  uint256 protocolFee */\n      dup1\n        /* \"contracts/Manager/UnemetaMarket.sol\":18697:18708  theStrategy */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":18683:18725  TheExStrategy(theStrategy).viewProtocolFee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dd1cda6\n        /* \"contracts/Manager/UnemetaMarket.sol\":18683:18727  TheExStrategy(theStrategy).viewProtocolFee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_474\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_474:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_475\n      swap2\n      swap1\n      tag_476\n      jump\t// in\n    tag_475:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18661:18727  uint256 protocolFee = TheExStrategy(theStrategy).viewProtocolFee() */\n      swap1\n      pop\n        /* \"contracts/Manager/UnemetaMarket.sol\":18769:18774  10000 */\n      0x2710\n        /* \"contracts/Manager/UnemetaMarket.sol\":18745:18765  protocolFee * amount */\n      tag_477\n        /* \"contracts/Manager/UnemetaMarket.sol\":18759:18765  amount */\n      dup5\n        /* \"contracts/Manager/UnemetaMarket.sol\":18661:18727  uint256 protocolFee = TheExStrategy(theStrategy).viewProtocolFee() */\n      dup4\n        /* \"contracts/Manager/UnemetaMarket.sol\":18745:18765  protocolFee * amount */\n      tag_407\n      jump\t// in\n    tag_477:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18744:18774  (protocolFee * amount) / 10000 */\n      tag_478\n      swap2\n      swap1\n      tag_479\n      jump\t// in\n    tag_478:\n        /* \"contracts/Manager/UnemetaMarket.sol\":18737:18774  return (protocolFee * amount) / 10000 */\n      swap5\n        /* \"contracts/Manager/UnemetaMarket.sol\":18551:18781  function _calculateProtocolFee(address theStrategy, uint256 amount) internal view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_431:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_481\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_482\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_481:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_484\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_484:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":28819:28821   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":28801:28822   */\n      mstore\n        /* \"#utility.yul\":28858:28860   */\n      0x2a\n        /* \"#utility.yul\":28838:28856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":28831:28861   */\n      mstore\n        /* \"#utility.yul\":28897:28931   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":28877:28895   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":28870:28932   */\n      mstore\n        /* \"#utility.yul\":28968:28980   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28948:28966   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":28941:28981   */\n      mstore\n        /* \"#utility.yul\":28998:29017   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_133\n        /* \"#utility.yul\":28617:29023   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_437:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n        /* \"#utility.yul\":23835:23877   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23823:23878   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23805:23879   */\n      mstore\n        /* \"#utility.yul\":23895:23913   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":23888:23922   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_384\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      swap1\n        /* \"#utility.yul\":23778:23796   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      tag_429\n        /* \"#utility.yul\":23631:23928   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":688:1459  function recover(... */\n    tag_471:\n        /* \"contracts/libraries/SignatureChecker.sol\":811:818  address */\n      0x00\n        /* \"contracts/libraries/SignatureChecker.sol\":1083:1149  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contracts/libraries/SignatureChecker.sol\":1069:1149  uint256(s) <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup3\n      gt\n      iszero\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n      tag_493\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":29230:29232   */\n      0x20\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":29212:29233   */\n      mstore\n        /* \"#utility.yul\":29269:29271   */\n      0x14\n        /* \"#utility.yul\":29249:29267   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":29242:29272   */\n      mstore\n        /* \"#utility.yul\":29308:29330   */\n      0x20496e76616c6964207320706172616d65746572000000000000000000000000\n        /* \"#utility.yul\":29288:29306   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":29281:29331   */\n      mstore\n        /* \"#utility.yul\":29348:29366   */\n      0x64\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n      tag_133\n        /* \"#utility.yul\":29028:29372   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":1048:1195  require(... */\n    tag_493:\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1215  v */\n      dup4\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1221  v == 27 */\n      0xff\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":1219:1221  27 */\n      0x1b\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1221  v == 27 */\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1232  v == 27 || v == 28 */\n      dup1\n      tag_496\n      jumpi\n      pop\n        /* \"contracts/libraries/SignatureChecker.sol\":1225:1226  v */\n      dup4\n        /* \"contracts/libraries/SignatureChecker.sol\":1225:1232  v == 28 */\n      0xff\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":1230:1232  28 */\n      0x1c\n        /* \"contracts/libraries/SignatureChecker.sol\":1225:1232  v == 28 */\n      eq\n        /* \"contracts/libraries/SignatureChecker.sol\":1214:1232  v == 27 || v == 28 */\n    tag_496:\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n      tag_497\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":29579:29581   */\n      0x20\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":29561:29582   */\n      mstore\n        /* \"#utility.yul\":29618:29620   */\n      0x13\n        /* \"#utility.yul\":29598:29616   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":29591:29621   */\n      mstore\n        /* \"#utility.yul\":29657:29678   */\n      0x496e76616c6964207620706172616d6574657200000000000000000000000000\n        /* \"#utility.yul\":29637:29655   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":29630:29679   */\n      mstore\n        /* \"#utility.yul\":29696:29714   */\n      0x64\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n      tag_133\n        /* \"#utility.yul\":29377:29720   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":1206:1256  require(v == 27 || v == 28, \"Invalid v parameter\") */\n    tag_497:\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/libraries/SignatureChecker.sol\":1329:1343  address signer */\n      0x00\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":29952:29977   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":30025:30029   */\n      0xff\n        /* \"#utility.yul\":30013:30030   */\n      dup8\n      and\n        /* \"#utility.yul\":29993:30011   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":29986:30031   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":30047:30065   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":30040:30074   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":30090:30108   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":30083:30117   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":29924:29943   */\n      0xa0\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1346:1370  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_503\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_503:\n      pop\n      pop\n      mload(add(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0, mload(0x40)))\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/SignatureChecker.sol\":1388:1408  signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n      tag_504\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":30330:30332   */\n      0x20\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":30312:30333   */\n      mstore\n        /* \"#utility.yul\":30369:30371   */\n      0x0f\n        /* \"#utility.yul\":30349:30367   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":30342:30372   */\n      mstore\n        /* \"#utility.yul\":30408:30425   */\n      0x20496e76616c6964207369676e65720000000000000000000000000000000000\n        /* \"#utility.yul\":30388:30406   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":30381:30426   */\n      mstore\n        /* \"#utility.yul\":30443:30461   */\n      0x64\n      add\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n      tag_133\n        /* \"#utility.yul\":30128:30467   */\n      jump\n        /* \"contracts/libraries/SignatureChecker.sol\":1380:1428  require(signer != address(0), \" Invalid signer\") */\n    tag_504:\n        /* \"contracts/libraries/SignatureChecker.sol\":1446:1452  signer */\n      swap6\n        /* \"contracts/libraries/SignatureChecker.sol\":688:1459  function recover(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_482:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_508\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_509\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_508:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_507:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_509:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_511\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":30674:30676   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":30656:30677   */\n      mstore\n        /* \"#utility.yul\":30713:30715   */\n      0x26\n        /* \"#utility.yul\":30693:30711   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":30686:30716   */\n      mstore\n        /* \"#utility.yul\":30752:30786   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":30732:30750   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":30725:30787   */\n      mstore\n        /* \"#utility.yul\":30823:30831   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30803:30821   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":30796:30832   */\n      mstore\n        /* \"#utility.yul\":30849:30868   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_133\n        /* \"#utility.yul\":30472:30874   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_511:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_515\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":31081:31083   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":31063:31084   */\n      mstore\n        /* \"#utility.yul\":31120:31122   */\n      0x1d\n        /* \"#utility.yul\":31100:31118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":31093:31123   */\n      mstore\n        /* \"#utility.yul\":31159:31190   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":31139:31157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":31132:31191   */\n      mstore\n        /* \"#utility.yul\":31208:31226   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_133\n        /* \"#utility.yul\":30879:31232   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n    tag_515:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_518\n      swap2\n      swap1\n      tag_519\n      jump\t// in\n    tag_518:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_522\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_521)\n    tag_522:\n      0x60\n      swap2\n      pop\n    tag_521:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_523\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_524\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_523:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_524:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_526\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      jump(tag_507)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_526:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n    tag_528:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_531\n      jump\t// in\n        /* \"#utility.yul\":272:426   */\n    tag_532:\n        /* \"#utility.yul\":358:400   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":351:356   */\n      dup2\n        /* \"#utility.yul\":347:401   */\n      and\n        /* \"#utility.yul\":340:345   */\n      dup2\n        /* \"#utility.yul\":337:402   */\n      eq\n        /* \"#utility.yul\":327:420   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":416:417   */\n      0x00\n        /* \"#utility.yul\":413:414   */\n      dup1\n        /* \"#utility.yul\":406:418   */\n      revert\n        /* \"#utility.yul\":431:565   */\n    tag_533:\n        /* \"#utility.yul\":499:519   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":528:559   */\n      tag_553\n        /* \"#utility.yul\":499:519   */\n      dup2\n        /* \"#utility.yul\":528:559   */\n      tag_532\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":431:565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":570:817   */\n    tag_38:\n        /* \"#utility.yul\":629:635   */\n      0x00\n        /* \"#utility.yul\":682:684   */\n      0x20\n        /* \"#utility.yul\":670:679   */\n      dup3\n        /* \"#utility.yul\":661:668   */\n      dup5\n        /* \"#utility.yul\":657:680   */\n      sub\n        /* \"#utility.yul\":653:685   */\n      slt\n        /* \"#utility.yul\":650:702   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":698:699   */\n      0x00\n        /* \"#utility.yul\":695:696   */\n      dup1\n        /* \"#utility.yul\":688:700   */\n      revert\n        /* \"#utility.yul\":650:702   */\n    tag_555:\n        /* \"#utility.yul\":737:746   */\n      dup2\n        /* \"#utility.yul\":724:747   */\n      calldataload\n        /* \"#utility.yul\":756:787   */\n      tag_507\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":756:787   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":822:1137   */\n    tag_43:\n        /* \"#utility.yul\":890:896   */\n      0x00\n        /* \"#utility.yul\":898:904   */\n      dup1\n        /* \"#utility.yul\":951:953   */\n      0x40\n        /* \"#utility.yul\":939:948   */\n      dup4\n        /* \"#utility.yul\":930:937   */\n      dup6\n        /* \"#utility.yul\":926:949   */\n      sub\n        /* \"#utility.yul\":922:954   */\n      slt\n        /* \"#utility.yul\":919:971   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":967:968   */\n      0x00\n        /* \"#utility.yul\":964:965   */\n      dup1\n        /* \"#utility.yul\":957:969   */\n      revert\n        /* \"#utility.yul\":919:971   */\n    tag_558:\n        /* \"#utility.yul\":1006:1015   */\n      dup3\n        /* \"#utility.yul\":993:1016   */\n      calldataload\n        /* \"#utility.yul\":1025:1056   */\n      tag_559\n        /* \"#utility.yul\":1050:1055   */\n      dup2\n        /* \"#utility.yul\":1025:1056   */\n      tag_532\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":1075:1080   */\n      swap5\n        /* \"#utility.yul\":1127:1129   */\n      0x20\n        /* \"#utility.yul\":1112:1130   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1099:1131   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":822:1137   */\n      jump\t// out\n        /* \"#utility.yul\":1612:2291   */\n    tag_56:\n        /* \"#utility.yul\":1740:1746   */\n      0x00\n        /* \"#utility.yul\":1748:1754   */\n      dup1\n        /* \"#utility.yul\":1801:1803   */\n      0x40\n        /* \"#utility.yul\":1789:1798   */\n      dup4\n        /* \"#utility.yul\":1780:1787   */\n      dup6\n        /* \"#utility.yul\":1776:1799   */\n      sub\n        /* \"#utility.yul\":1772:1804   */\n      slt\n        /* \"#utility.yul\":1769:1821   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":1817:1818   */\n      0x00\n        /* \"#utility.yul\":1814:1815   */\n      dup1\n        /* \"#utility.yul\":1807:1819   */\n      revert\n        /* \"#utility.yul\":1769:1821   */\n    tag_564:\n        /* \"#utility.yul\":1857:1866   */\n      dup3\n        /* \"#utility.yul\":1844:1867   */\n      calldataload\n        /* \"#utility.yul\":1886:1904   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1927:1929   */\n      dup1\n        /* \"#utility.yul\":1919:1925   */\n      dup3\n        /* \"#utility.yul\":1916:1930   */\n      gt\n        /* \"#utility.yul\":1913:1947   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":1943:1944   */\n      0x00\n        /* \"#utility.yul\":1940:1941   */\n      dup1\n        /* \"#utility.yul\":1933:1945   */\n      revert\n        /* \"#utility.yul\":1913:1947   */\n    tag_565:\n        /* \"#utility.yul\":1966:1988   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2022:2025   */\n      0xc0\n        /* \"#utility.yul\":2004:2020   */\n      dup3\n      dup8\n      sub\n        /* \"#utility.yul\":2000:2026   */\n      slt\n        /* \"#utility.yul\":1997:2043   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":2039:2040   */\n      0x00\n        /* \"#utility.yul\":2036:2037   */\n      dup1\n        /* \"#utility.yul\":2029:2041   */\n      revert\n        /* \"#utility.yul\":1997:2043   */\n    tag_566:\n        /* \"#utility.yul\":2062:2064   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":2117:2119   */\n      0x20\n        /* \"#utility.yul\":2102:2120   */\n      dup5\n      add\n        /* \"#utility.yul\":2089:2121   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2133:2149   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2130:2166   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2159:2160   */\n      dup1\n        /* \"#utility.yul\":2152:2164   */\n      revert\n        /* \"#utility.yul\":2130:2166   */\n    tag_567:\n      pop\n        /* \"#utility.yul\":2185:2209   */\n      dup4\n      add\n        /* \"#utility.yul\":2243:2246   */\n      0x0200\n        /* \"#utility.yul\":2225:2241   */\n      dup2\n      dup7\n      sub\n        /* \"#utility.yul\":2221:2247   */\n      slt\n        /* \"#utility.yul\":2218:2264   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":2260:2261   */\n      0x00\n        /* \"#utility.yul\":2257:2258   */\n      dup1\n        /* \"#utility.yul\":2250:2262   */\n      revert\n        /* \"#utility.yul\":2218:2264   */\n    tag_568:\n        /* \"#utility.yul\":2283:2285   */\n      dup1\n        /* \"#utility.yul\":2273:2285   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1612:2291   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3427:4042   */\n    tag_99:\n        /* \"#utility.yul\":3513:3519   */\n      0x00\n        /* \"#utility.yul\":3521:3527   */\n      dup1\n        /* \"#utility.yul\":3574:3576   */\n      0x20\n        /* \"#utility.yul\":3562:3571   */\n      dup4\n        /* \"#utility.yul\":3553:3560   */\n      dup6\n        /* \"#utility.yul\":3549:3572   */\n      sub\n        /* \"#utility.yul\":3545:3577   */\n      slt\n        /* \"#utility.yul\":3542:3594   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":3590:3591   */\n      0x00\n        /* \"#utility.yul\":3587:3588   */\n      dup1\n        /* \"#utility.yul\":3580:3592   */\n      revert\n        /* \"#utility.yul\":3542:3594   */\n    tag_575:\n        /* \"#utility.yul\":3630:3639   */\n      dup3\n        /* \"#utility.yul\":3617:3640   */\n      calldataload\n        /* \"#utility.yul\":3659:3677   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3700:3702   */\n      dup1\n        /* \"#utility.yul\":3692:3698   */\n      dup3\n        /* \"#utility.yul\":3689:3703   */\n      gt\n        /* \"#utility.yul\":3686:3720   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":3716:3717   */\n      0x00\n        /* \"#utility.yul\":3713:3714   */\n      dup1\n        /* \"#utility.yul\":3706:3718   */\n      revert\n        /* \"#utility.yul\":3686:3720   */\n    tag_576:\n        /* \"#utility.yul\":3754:3760   */\n      dup2\n        /* \"#utility.yul\":3743:3752   */\n      dup6\n        /* \"#utility.yul\":3739:3761   */\n      add\n        /* \"#utility.yul\":3729:3761   */\n      swap2\n      pop\n        /* \"#utility.yul\":3799:3806   */\n      dup6\n        /* \"#utility.yul\":3792:3796   */\n      0x1f\n        /* \"#utility.yul\":3788:3790   */\n      dup4\n        /* \"#utility.yul\":3784:3797   */\n      add\n        /* \"#utility.yul\":3780:3807   */\n      slt\n        /* \"#utility.yul\":3770:3825   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":3821:3822   */\n      0x00\n        /* \"#utility.yul\":3818:3819   */\n      dup1\n        /* \"#utility.yul\":3811:3823   */\n      revert\n        /* \"#utility.yul\":3770:3825   */\n    tag_577:\n        /* \"#utility.yul\":3861:3863   */\n      dup2\n        /* \"#utility.yul\":3848:3864   */\n      calldataload\n        /* \"#utility.yul\":3887:3889   */\n      dup2\n        /* \"#utility.yul\":3879:3885   */\n      dup2\n        /* \"#utility.yul\":3876:3890   */\n      gt\n        /* \"#utility.yul\":3873:3907   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":3903:3904   */\n      0x00\n        /* \"#utility.yul\":3900:3901   */\n      dup1\n        /* \"#utility.yul\":3893:3905   */\n      revert\n        /* \"#utility.yul\":3873:3907   */\n    tag_578:\n        /* \"#utility.yul\":3956:3963   */\n      dup7\n        /* \"#utility.yul\":3951:3953   */\n      0x20\n        /* \"#utility.yul\":3941:3947   */\n      dup3\n        /* \"#utility.yul\":3938:3939   */\n      0x05\n        /* \"#utility.yul\":3934:3948   */\n      shl\n        /* \"#utility.yul\":3930:3932   */\n      dup6\n        /* \"#utility.yul\":3926:3949   */\n      add\n        /* \"#utility.yul\":3922:3954   */\n      add\n        /* \"#utility.yul\":3919:3964   */\n      gt\n        /* \"#utility.yul\":3916:3981   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":3977:3978   */\n      0x00\n        /* \"#utility.yul\":3974:3975   */\n      dup1\n        /* \"#utility.yul\":3967:3979   */\n      revert\n        /* \"#utility.yul\":3916:3981   */\n    tag_579:\n        /* \"#utility.yul\":4008:4010   */\n      0x20\n        /* \"#utility.yul\":4000:4011   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":4030:4036   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":3427:4042   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4047:4227   */\n    tag_112:\n        /* \"#utility.yul\":4106:4112   */\n      0x00\n        /* \"#utility.yul\":4159:4161   */\n      0x20\n        /* \"#utility.yul\":4147:4156   */\n      dup3\n        /* \"#utility.yul\":4138:4145   */\n      dup5\n        /* \"#utility.yul\":4134:4157   */\n      sub\n        /* \"#utility.yul\":4130:4162   */\n      slt\n        /* \"#utility.yul\":4127:4179   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":4175:4176   */\n      0x00\n        /* \"#utility.yul\":4172:4173   */\n      dup1\n        /* \"#utility.yul\":4165:4177   */\n      revert\n        /* \"#utility.yul\":4127:4179   */\n    tag_581:\n      pop\n        /* \"#utility.yul\":4198:4221   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4047:4227   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4592:4710   */\n    tag_536:\n        /* \"#utility.yul\":4678:4683   */\n      dup1\n        /* \"#utility.yul\":4671:4684   */\n      iszero\n        /* \"#utility.yul\":4664:4685   */\n      iszero\n        /* \"#utility.yul\":4657:4662   */\n      dup2\n        /* \"#utility.yul\":4654:4686   */\n      eq\n        /* \"#utility.yul\":4644:4704   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":4700:4701   */\n      0x00\n        /* \"#utility.yul\":4697:4698   */\n      dup1\n        /* \"#utility.yul\":4690:4702   */\n      revert\n        /* \"#utility.yul\":4715:4843   */\n    tag_537:\n        /* \"#utility.yul\":4780:4800   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":4809:4837   */\n      tag_553\n        /* \"#utility.yul\":4780:4800   */\n      dup2\n        /* \"#utility.yul\":4809:4837   */\n      tag_536\n      jump\t// in\n        /* \"#utility.yul\":4848:5089   */\n    tag_137:\n        /* \"#utility.yul\":4904:4910   */\n      0x00\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4945:4954   */\n      dup3\n        /* \"#utility.yul\":4936:4943   */\n      dup5\n        /* \"#utility.yul\":4932:4955   */\n      sub\n        /* \"#utility.yul\":4928:4960   */\n      slt\n        /* \"#utility.yul\":4925:4977   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":4973:4974   */\n      0x00\n        /* \"#utility.yul\":4970:4971   */\n      dup1\n        /* \"#utility.yul\":4963:4975   */\n      revert\n        /* \"#utility.yul\":4925:4977   */\n    tag_588:\n        /* \"#utility.yul\":5012:5021   */\n      dup2\n        /* \"#utility.yul\":4999:5022   */\n      calldataload\n        /* \"#utility.yul\":5031:5059   */\n      tag_507\n        /* \"#utility.yul\":5053:5058   */\n      dup2\n        /* \"#utility.yul\":5031:5059   */\n      tag_536\n      jump\t// in\n        /* \"#utility.yul\":5798:5982   */\n    tag_538:\n        /* \"#utility.yul\":5850:5927   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5847:5848   */\n      0x00\n        /* \"#utility.yul\":5840:5928   */\n      mstore\n        /* \"#utility.yul\":5947:5951   */\n      0x41\n        /* \"#utility.yul\":5944:5945   */\n      0x04\n        /* \"#utility.yul\":5937:5952   */\n      mstore\n        /* \"#utility.yul\":5971:5975   */\n      0x24\n        /* \"#utility.yul\":5968:5969   */\n      0x00\n        /* \"#utility.yul\":5961:5976   */\n      revert\n        /* \"#utility.yul\":5987:6237   */\n    tag_539:\n        /* \"#utility.yul\":6054:6056   */\n      0x40\n        /* \"#utility.yul\":6048:6057   */\n      mload\n        /* \"#utility.yul\":6096:6102   */\n      0x0200\n        /* \"#utility.yul\":6084:6103   */\n      dup2\n      add\n        /* \"#utility.yul\":6133:6151   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6118:6152   */\n      dup2\n      gt\n        /* \"#utility.yul\":6154:6176   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":6115:6177   */\n      or\n        /* \"#utility.yul\":6112:6200   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":6180:6198   */\n      tag_595\n      tag_538\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":6216:6218   */\n      0x40\n        /* \"#utility.yul\":6209:6231   */\n      mstore\n        /* \"#utility.yul\":5987:6237   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6242:7019   */\n    tag_540:\n        /* \"#utility.yul\":6284:6289   */\n      0x00\n        /* \"#utility.yul\":6337:6340   */\n      dup3\n        /* \"#utility.yul\":6330:6334   */\n      0x1f\n        /* \"#utility.yul\":6322:6328   */\n      dup4\n        /* \"#utility.yul\":6318:6335   */\n      add\n        /* \"#utility.yul\":6314:6341   */\n      slt\n        /* \"#utility.yul\":6304:6359   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":6355:6356   */\n      0x00\n        /* \"#utility.yul\":6352:6353   */\n      dup1\n        /* \"#utility.yul\":6345:6357   */\n      revert\n        /* \"#utility.yul\":6304:6359   */\n    tag_597:\n        /* \"#utility.yul\":6391:6397   */\n      dup2\n        /* \"#utility.yul\":6378:6398   */\n      calldataload\n        /* \"#utility.yul\":6417:6435   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6454:6456   */\n      dup1\n        /* \"#utility.yul\":6450:6452   */\n      dup3\n        /* \"#utility.yul\":6447:6457   */\n      gt\n        /* \"#utility.yul\":6444:6480   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":6460:6478   */\n      tag_599\n      tag_538\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":6594:6596   */\n      0x40\n        /* \"#utility.yul\":6588:6597   */\n      mload\n        /* \"#utility.yul\":6656:6660   */\n      0x1f\n        /* \"#utility.yul\":6648:6661   */\n      dup4\n      add\n        /* \"#utility.yul\":6499:6565   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":6644:6666   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":6668:6670   */\n      0x3f\n        /* \"#utility.yul\":6640:6671   */\n      add\n        /* \"#utility.yul\":6636:6676   */\n      and\n        /* \"#utility.yul\":6624:6677   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":6692:6710   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":6712:6734   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":6689:6735   */\n      or\n        /* \"#utility.yul\":6686:6758   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":6738:6756   */\n      tag_601\n      tag_538\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":6778:6788   */\n      dup2\n        /* \"#utility.yul\":6774:6776   */\n      0x40\n        /* \"#utility.yul\":6767:6789   */\n      mstore\n        /* \"#utility.yul\":6813:6815   */\n      dup4\n        /* \"#utility.yul\":6805:6811   */\n      dup2\n        /* \"#utility.yul\":6798:6816   */\n      mstore\n        /* \"#utility.yul\":6859:6862   */\n      dup7\n        /* \"#utility.yul\":6852:6856   */\n      0x20\n        /* \"#utility.yul\":6847:6849   */\n      dup6\n        /* \"#utility.yul\":6839:6845   */\n      dup9\n        /* \"#utility.yul\":6835:6850   */\n      add\n        /* \"#utility.yul\":6831:6857   */\n      add\n        /* \"#utility.yul\":6828:6863   */\n      gt\n        /* \"#utility.yul\":6825:6880   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":6876:6877   */\n      0x00\n        /* \"#utility.yul\":6873:6874   */\n      dup1\n        /* \"#utility.yul\":6866:6878   */\n      revert\n        /* \"#utility.yul\":6825:6880   */\n    tag_602:\n        /* \"#utility.yul\":6940:6942   */\n      dup4\n        /* \"#utility.yul\":6933:6937   */\n      0x20\n        /* \"#utility.yul\":6925:6931   */\n      dup8\n        /* \"#utility.yul\":6921:6938   */\n      add\n        /* \"#utility.yul\":6914:6918   */\n      0x20\n        /* \"#utility.yul\":6906:6912   */\n      dup4\n        /* \"#utility.yul\":6902:6919   */\n      add\n        /* \"#utility.yul\":6889:6943   */\n      calldatacopy\n        /* \"#utility.yul\":6987:6988   */\n      0x00\n        /* \"#utility.yul\":6980:6984   */\n      0x20\n        /* \"#utility.yul\":6975:6977   */\n      dup6\n        /* \"#utility.yul\":6967:6973   */\n      dup4\n        /* \"#utility.yul\":6963:6978   */\n      add\n        /* \"#utility.yul\":6959:6985   */\n      add\n        /* \"#utility.yul\":6952:6989   */\n      mstore\n        /* \"#utility.yul\":7007:7013   */\n      dup1\n        /* \"#utility.yul\":6998:7013   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6242:7019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7024:7180   */\n    tag_541:\n        /* \"#utility.yul\":7090:7110   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":7150:7154   */\n      0xff\n        /* \"#utility.yul\":7139:7155   */\n      dup2\n      and\n        /* \"#utility.yul\":7129:7156   */\n      dup2\n      eq\n        /* \"#utility.yul\":7119:7174   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":7170:7171   */\n      0x00\n        /* \"#utility.yul\":7167:7168   */\n      dup1\n        /* \"#utility.yul\":7160:7172   */\n      revert\n        /* \"#utility.yul\":7185:8791   */\n    tag_149:\n        /* \"#utility.yul\":7293:7302   */\n      0x00\n        /* \"#utility.yul\":7352:7358   */\n      0x0200\n        /* \"#utility.yul\":7344:7349   */\n      dup3\n        /* \"#utility.yul\":7328:7342   */\n      calldatasize\n        /* \"#utility.yul\":7324:7350   */\n      sub\n        /* \"#utility.yul\":7320:7359   */\n      slt\n        /* \"#utility.yul\":7317:7376   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":7372:7373   */\n      0x00\n        /* \"#utility.yul\":7369:7370   */\n      dup1\n        /* \"#utility.yul\":7362:7374   */\n      revert\n        /* \"#utility.yul\":7317:7376   */\n    tag_606:\n        /* \"#utility.yul\":7400:7417   */\n      tag_607\n      tag_539\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":7442:7464   */\n      tag_608\n        /* \"#utility.yul\":7458:7463   */\n      dup4\n        /* \"#utility.yul\":7442:7464   */\n      tag_537\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":7433:7440   */\n      dup2\n        /* \"#utility.yul\":7426:7465   */\n      mstore\n        /* \"#utility.yul\":7499:7533   */\n      tag_609\n        /* \"#utility.yul\":7529:7531   */\n      0x20\n        /* \"#utility.yul\":7522:7527   */\n      dup5\n        /* \"#utility.yul\":7518:7532   */\n      add\n        /* \"#utility.yul\":7499:7533   */\n      tag_533\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":7494:7496   */\n      0x20\n        /* \"#utility.yul\":7485:7492   */\n      dup3\n        /* \"#utility.yul\":7481:7497   */\n      add\n        /* \"#utility.yul\":7474:7534   */\n      mstore\n        /* \"#utility.yul\":7568:7602   */\n      tag_610\n        /* \"#utility.yul\":7598:7600   */\n      0x40\n        /* \"#utility.yul\":7591:7596   */\n      dup5\n        /* \"#utility.yul\":7587:7601   */\n      add\n        /* \"#utility.yul\":7568:7602   */\n      tag_533\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":7563:7565   */\n      0x40\n        /* \"#utility.yul\":7554:7561   */\n      dup3\n        /* \"#utility.yul\":7550:7566   */\n      add\n        /* \"#utility.yul\":7543:7603   */\n      mstore\n        /* \"#utility.yul\":7661:7663   */\n      0x60\n        /* \"#utility.yul\":7654:7659   */\n      dup4\n        /* \"#utility.yul\":7650:7664   */\n      add\n        /* \"#utility.yul\":7637:7665   */\n      calldataload\n        /* \"#utility.yul\":7632:7634   */\n      0x60\n        /* \"#utility.yul\":7623:7630   */\n      dup3\n        /* \"#utility.yul\":7619:7635   */\n      add\n        /* \"#utility.yul\":7612:7666   */\n      mstore\n        /* \"#utility.yul\":7725:7728   */\n      0x80\n        /* \"#utility.yul\":7718:7723   */\n      dup4\n        /* \"#utility.yul\":7714:7729   */\n      add\n        /* \"#utility.yul\":7701:7730   */\n      calldataload\n        /* \"#utility.yul\":7695:7698   */\n      0x80\n        /* \"#utility.yul\":7686:7693   */\n      dup3\n        /* \"#utility.yul\":7682:7699   */\n      add\n        /* \"#utility.yul\":7675:7731   */\n      mstore\n        /* \"#utility.yul\":7790:7793   */\n      0xa0\n        /* \"#utility.yul\":7783:7788   */\n      dup4\n        /* \"#utility.yul\":7779:7794   */\n      add\n        /* \"#utility.yul\":7766:7795   */\n      calldataload\n        /* \"#utility.yul\":7760:7763   */\n      0xa0\n        /* \"#utility.yul\":7751:7758   */\n      dup3\n        /* \"#utility.yul\":7747:7764   */\n      add\n        /* \"#utility.yul\":7740:7796   */\n      mstore\n        /* \"#utility.yul\":7831:7866   */\n      tag_611\n        /* \"#utility.yul\":7861:7864   */\n      0xc0\n        /* \"#utility.yul\":7854:7859   */\n      dup5\n        /* \"#utility.yul\":7850:7865   */\n      add\n        /* \"#utility.yul\":7831:7866   */\n      tag_533\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":7825:7828   */\n      0xc0\n        /* \"#utility.yul\":7816:7823   */\n      dup3\n        /* \"#utility.yul\":7812:7829   */\n      add\n        /* \"#utility.yul\":7805:7867   */\n      mstore\n        /* \"#utility.yul\":7902:7937   */\n      tag_612\n        /* \"#utility.yul\":7932:7935   */\n      0xe0\n        /* \"#utility.yul\":7925:7930   */\n      dup5\n        /* \"#utility.yul\":7921:7936   */\n      add\n        /* \"#utility.yul\":7902:7937   */\n      tag_533\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":7896:7899   */\n      0xe0\n        /* \"#utility.yul\":7883:7900   */\n      dup3\n      add\n        /* \"#utility.yul\":7876:7938   */\n      mstore\n        /* \"#utility.yul\":7957:7960   */\n      0x0100\n        /* \"#utility.yul\":8007:8021   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":7994:8022   */\n      calldataload\n        /* \"#utility.yul\":7976:7992   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7969:8023   */\n      mstore\n        /* \"#utility.yul\":8042:8045   */\n      0x0120\n        /* \"#utility.yul\":8092:8106   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8079:8107   */\n      calldataload\n        /* \"#utility.yul\":8061:8077   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8054:8108   */\n      mstore\n        /* \"#utility.yul\":8127:8130   */\n      0x0140\n        /* \"#utility.yul\":8177:8191   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8164:8192   */\n      calldataload\n        /* \"#utility.yul\":8146:8162   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8139:8193   */\n      mstore\n        /* \"#utility.yul\":8212:8215   */\n      0x0160\n        /* \"#utility.yul\":8262:8276   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8249:8277   */\n      calldataload\n        /* \"#utility.yul\":8231:8247   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8224:8278   */\n      mstore\n        /* \"#utility.yul\":8297:8300   */\n      0x0180\n        /* \"#utility.yul\":8336:8350   */\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":8323:8351   */\n      calldataload\n        /* \"#utility.yul\":8374:8392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8363:8393   */\n      dup2\n      gt\n        /* \"#utility.yul\":8360:8410   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":8406:8407   */\n      0x00\n        /* \"#utility.yul\":8403:8404   */\n      dup1\n        /* \"#utility.yul\":8396:8408   */\n      revert\n        /* \"#utility.yul\":8360:8410   */\n    tag_613:\n        /* \"#utility.yul\":8444:8496   */\n      tag_614\n        /* \"#utility.yul\":8481:8495   */\n      calldatasize\n        /* \"#utility.yul\":8472:8478   */\n      dup3\n        /* \"#utility.yul\":8465:8470   */\n      dup8\n        /* \"#utility.yul\":8461:8479   */\n      add\n        /* \"#utility.yul\":8444:8496   */\n      tag_540\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":8439:8441   */\n      dup3\n        /* \"#utility.yul\":8430:8437   */\n      dup5\n        /* \"#utility.yul\":8426:8442   */\n      add\n        /* \"#utility.yul\":8419:8497   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":8516:8519   */\n      0x01a0\n        /* \"#utility.yul\":8553:8585   */\n      tag_615\n        /* \"#utility.yul\":8581:8583   */\n      dup2\n        /* \"#utility.yul\":8574:8579   */\n      dup6\n        /* \"#utility.yul\":8570:8584   */\n      add\n        /* \"#utility.yul\":8553:8585   */\n      tag_541\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":8535:8551   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8528:8586   */\n      mstore\n        /* \"#utility.yul\":8605:8608   */\n      0x01c0\n        /* \"#utility.yul\":8655:8669   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":8642:8670   */\n      calldataload\n        /* \"#utility.yul\":8624:8640   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8617:8671   */\n      mstore\n        /* \"#utility.yul\":8690:8693   */\n      0x01e0\n        /* \"#utility.yul\":8740:8754   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":8727:8755   */\n      calldataload\n        /* \"#utility.yul\":8709:8725   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":8702:8756   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":8539:8546   */\n      swap1\n        /* \"#utility.yul\":7185:8791   */\n      jump\t// out\n        /* \"#utility.yul\":8796:9355   */\n    tag_542:\n        /* \"#utility.yul\":8854:8859   */\n      0x00\n        /* \"#utility.yul\":8861:8867   */\n      dup1\n        /* \"#utility.yul\":8921:8924   */\n      dup4\n        /* \"#utility.yul\":8908:8925   */\n      calldataload\n        /* \"#utility.yul\":9003:9069   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1\n        /* \"#utility.yul\":8992:9000   */\n      dup5\n        /* \"#utility.yul\":8976:8990   */\n      calldatasize\n        /* \"#utility.yul\":8972:9001   */\n      sub\n        /* \"#utility.yul\":8968:9070   */\n      add\n        /* \"#utility.yul\":8948:8966   */\n      dup2\n        /* \"#utility.yul\":8944:9071   */\n      slt\n        /* \"#utility.yul\":8934:9089   */\n      tag_617\n      jumpi\n        /* \"#utility.yul\":9085:9086   */\n      0x00\n        /* \"#utility.yul\":9082:9083   */\n      dup1\n        /* \"#utility.yul\":9075:9087   */\n      revert\n        /* \"#utility.yul\":8934:9089   */\n    tag_617:\n        /* \"#utility.yul\":9113:9146   */\n      dup4\n      add\n        /* \"#utility.yul\":9217:9221   */\n      0x20\n        /* \"#utility.yul\":9204:9222   */\n      dup2\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":9165:9186   */\n      calldataload\n      swap1\n      pop\n        /* \"#utility.yul\":9245:9263   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9234:9264   */\n      dup2\n      gt\n        /* \"#utility.yul\":9231:9281   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":9277:9278   */\n      0x00\n        /* \"#utility.yul\":9274:9275   */\n      dup1\n        /* \"#utility.yul\":9267:9279   */\n      revert\n        /* \"#utility.yul\":9231:9281   */\n    tag_618:\n        /* \"#utility.yul\":9324:9330   */\n      dup1\n        /* \"#utility.yul\":9308:9322   */\n      calldatasize\n        /* \"#utility.yul\":9304:9331   */\n      sub\n        /* \"#utility.yul\":9297:9302   */\n      dup3\n        /* \"#utility.yul\":9293:9332   */\n      sgt\n        /* \"#utility.yul\":9290:9349   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":9345:9346   */\n      0x00\n        /* \"#utility.yul\":9342:9343   */\n      dup1\n        /* \"#utility.yul\":9335:9347   */\n      revert\n        /* \"#utility.yul\":9290:9349   */\n    tag_619:\n        /* \"#utility.yul\":8796:9355   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9360:9685   */\n    tag_543:\n        /* \"#utility.yul\":9448:9454   */\n      dup2\n        /* \"#utility.yul\":9443:9446   */\n      dup4\n        /* \"#utility.yul\":9436:9455   */\n      mstore\n        /* \"#utility.yul\":9500:9506   */\n      dup2\n        /* \"#utility.yul\":9493:9498   */\n      dup2\n        /* \"#utility.yul\":9486:9490   */\n      0x20\n        /* \"#utility.yul\":9481:9484   */\n      dup6\n        /* \"#utility.yul\":9477:9491   */\n      add\n        /* \"#utility.yul\":9464:9507   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":9552:9553   */\n      0x00\n        /* \"#utility.yul\":9545:9549   */\n      0x20\n        /* \"#utility.yul\":9536:9542   */\n      dup3\n        /* \"#utility.yul\":9531:9534   */\n      dup5\n        /* \"#utility.yul\":9527:9543   */\n      add\n        /* \"#utility.yul\":9523:9550   */\n      add\n        /* \"#utility.yul\":9516:9554   */\n      mstore\n        /* \"#utility.yul\":9418:9421   */\n      0x00\n        /* \"#utility.yul\":9674:9678   */\n      0x20\n        /* \"#utility.yul\":9604:9670   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":9599:9601   */\n      0x1f\n        /* \"#utility.yul\":9591:9597   */\n      dup5\n        /* \"#utility.yul\":9587:9602   */\n      add\n        /* \"#utility.yul\":9583:9671   */\n      and\n        /* \"#utility.yul\":9578:9581   */\n      dup5\n        /* \"#utility.yul\":9574:9672   */\n      add\n        /* \"#utility.yul\":9570:9679   */\n      add\n        /* \"#utility.yul\":9563:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9360:9685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9770:12567   */\n    tag_155:\n        /* \"#utility.yul\":10043:10045   */\n      0x40\n        /* \"#utility.yul\":10032:10041   */\n      dup2\n        /* \"#utility.yul\":10025:10046   */\n      mstore\n        /* \"#utility.yul\":10006:10010   */\n      0x00\n        /* \"#utility.yul\":10065:10068   */\n      0x0100\n        /* \"#utility.yul\":10103:10109   */\n      dup5\n        /* \"#utility.yul\":10090:10110   */\n      calldataload\n        /* \"#utility.yul\":10119:10147   */\n      tag_623\n        /* \"#utility.yul\":10141:10146   */\n      dup2\n        /* \"#utility.yul\":10119:10147   */\n      tag_536\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":10190:10203   */\n      iszero\n        /* \"#utility.yul\":10183:10204   */\n      iszero\n        /* \"#utility.yul\":10178:10180   */\n      0x40\n        /* \"#utility.yul\":10163:10181   */\n      dup5\n      add\n        /* \"#utility.yul\":10156:10205   */\n      mstore\n        /* \"#utility.yul\":10254:10258   */\n      0x20\n        /* \"#utility.yul\":10242:10259   */\n      dup6\n      add\n        /* \"#utility.yul\":10229:10260   */\n      calldataload\n        /* \"#utility.yul\":10269:10302   */\n      tag_624\n        /* \"#utility.yul\":10229:10260   */\n      dup2\n        /* \"#utility.yul\":10269:10302   */\n      tag_532\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10351:10393   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10342:10349   */\n      dup2\n        /* \"#utility.yul\":10338:10394   */\n      and\n        /* \"#utility.yul\":10333:10335   */\n      0x60\n        /* \"#utility.yul\":10322:10331   */\n      dup6\n        /* \"#utility.yul\":10318:10336   */\n      add\n        /* \"#utility.yul\":10311:10395   */\n      mstore\n      pop\n        /* \"#utility.yul\":10457:10459   */\n      0x40\n        /* \"#utility.yul\":10449:10455   */\n      dup6\n        /* \"#utility.yul\":10445:10460   */\n      add\n        /* \"#utility.yul\":10432:10461   */\n      calldataload\n        /* \"#utility.yul\":10426:10429   */\n      0x80\n        /* \"#utility.yul\":10415:10424   */\n      dup5\n        /* \"#utility.yul\":10411:10430   */\n      add\n        /* \"#utility.yul\":10404:10462   */\n      mstore\n        /* \"#utility.yul\":10524:10526   */\n      0x60\n        /* \"#utility.yul\":10516:10522   */\n      dup6\n        /* \"#utility.yul\":10512:10527   */\n      add\n        /* \"#utility.yul\":10499:10528   */\n      calldataload\n        /* \"#utility.yul\":10493:10496   */\n      0xa0\n        /* \"#utility.yul\":10482:10491   */\n      dup5\n        /* \"#utility.yul\":10478:10497   */\n      add\n        /* \"#utility.yul\":10471:10529   */\n      mstore\n        /* \"#utility.yul\":10592:10595   */\n      0x80\n        /* \"#utility.yul\":10584:10590   */\n      dup6\n        /* \"#utility.yul\":10580:10596   */\n      add\n        /* \"#utility.yul\":10567:10597   */\n      calldataload\n        /* \"#utility.yul\":10560:10564   */\n      0xc0\n        /* \"#utility.yul\":10549:10558   */\n      dup5\n        /* \"#utility.yul\":10545:10565   */\n      add\n        /* \"#utility.yul\":10538:10598   */\n      mstore\n        /* \"#utility.yul\":10641:10697   */\n      tag_625\n        /* \"#utility.yul\":10692:10695   */\n      0xa0\n        /* \"#utility.yul\":10684:10690   */\n      dup7\n        /* \"#utility.yul\":10680:10696   */\n      add\n        /* \"#utility.yul\":10672:10678   */\n      dup7\n        /* \"#utility.yul\":10641:10697   */\n      tag_542\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":10734:10738   */\n      0xc0\n        /* \"#utility.yul\":10728:10731   */\n      0xe0\n        /* \"#utility.yul\":10717:10726   */\n      dup7\n        /* \"#utility.yul\":10713:10732   */\n      add\n        /* \"#utility.yul\":10706:10739   */\n      mstore\n        /* \"#utility.yul\":10759:10832   */\n      tag_626\n        /* \"#utility.yul\":10828:10830   */\n      dup4\n        /* \"#utility.yul\":10817:10826   */\n      dup7\n        /* \"#utility.yul\":10813:10831   */\n      add\n        /* \"#utility.yul\":10799:10811   */\n      dup3\n        /* \"#utility.yul\":10785:10797   */\n      dup5\n        /* \"#utility.yul\":10759:10832   */\n      tag_543\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":10748:10832   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":10879:10888   */\n      dup4\n        /* \"#utility.yul\":10874:10877   */\n      dup2\n        /* \"#utility.yul\":10870:10889   */\n      sub\n        /* \"#utility.yul\":10863:10867   */\n      0x20\n        /* \"#utility.yul\":10852:10861   */\n      dup6\n        /* \"#utility.yul\":10848:10868   */\n      add\n        /* \"#utility.yul\":10841:10890   */\n      mstore\n        /* \"#utility.yul\":10909:10915   */\n      0x0200\n        /* \"#utility.yul\":10924:10969   */\n      tag_627\n        /* \"#utility.yul\":10965:10968   */\n      dup3\n        /* \"#utility.yul\":10940:10963   */\n      tag_628\n        /* \"#utility.yul\":10956:10962   */\n      dup9\n        /* \"#utility.yul\":10940:10963   */\n      tag_537\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":1212:1225   */\n      iszero\n        /* \"#utility.yul\":1205:1226   */\n      iszero\n        /* \"#utility.yul\":1193:1227   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1142:1233   */\n      jump\n        /* \"#utility.yul\":10924:10969   */\n    tag_627:\n        /* \"#utility.yul\":11000:11037   */\n      tag_629\n        /* \"#utility.yul\":11031:11035   */\n      0x20\n        /* \"#utility.yul\":11023:11029   */\n      dup8\n        /* \"#utility.yul\":11019:11036   */\n      add\n        /* \"#utility.yul\":11000:11037   */\n      tag_533\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":2884:2926   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2873:2927   */\n      and\n        /* \"#utility.yul\":11090:11094   */\n      0x20\n        /* \"#utility.yul\":11081:11095   */\n      dup4\n      add\n        /* \"#utility.yul\":2861:2928   */\n      mstore\n        /* \"#utility.yul\":11127:11162   */\n      tag_631\n        /* \"#utility.yul\":11158:11160   */\n      0x40\n        /* \"#utility.yul\":11146:11161   */\n      dup8\n      add\n        /* \"#utility.yul\":11127:11162   */\n      tag_533\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":2884:2926   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2873:2927   */\n      dup2\n      and\n        /* \"#utility.yul\":11215:11217   */\n      0x40\n        /* \"#utility.yul\":11206:11218   */\n      dup5\n      add\n        /* \"#utility.yul\":2861:2928   */\n      mstore\n        /* \"#utility.yul\":11171:11219   */\n      pop\n        /* \"#utility.yul\":11274:11276   */\n      0x60\n        /* \"#utility.yul\":11266:11272   */\n      dup7\n        /* \"#utility.yul\":11262:11277   */\n      add\n        /* \"#utility.yul\":11249:11278   */\n      calldataload\n        /* \"#utility.yul\":11244:11246   */\n      0x60\n        /* \"#utility.yul\":11239:11242   */\n      dup4\n        /* \"#utility.yul\":11235:11247   */\n      add\n        /* \"#utility.yul\":11228:11279   */\n      mstore\n        /* \"#utility.yul\":11335:11338   */\n      0x80\n        /* \"#utility.yul\":11327:11333   */\n      dup7\n        /* \"#utility.yul\":11323:11339   */\n      add\n        /* \"#utility.yul\":11310:11340   */\n      calldataload\n        /* \"#utility.yul\":11304:11307   */\n      0x80\n        /* \"#utility.yul\":11299:11302   */\n      dup4\n        /* \"#utility.yul\":11295:11308   */\n      add\n        /* \"#utility.yul\":11288:11341   */\n      mstore\n        /* \"#utility.yul\":11397:11400   */\n      0xa0\n        /* \"#utility.yul\":11389:11395   */\n      dup7\n        /* \"#utility.yul\":11385:11401   */\n      add\n        /* \"#utility.yul\":11372:11402   */\n      calldataload\n        /* \"#utility.yul\":11366:11369   */\n      0xa0\n        /* \"#utility.yul\":11361:11364   */\n      dup4\n        /* \"#utility.yul\":11357:11370   */\n      add\n        /* \"#utility.yul\":11350:11403   */\n      mstore\n        /* \"#utility.yul\":11434:11471   */\n      tag_633\n        /* \"#utility.yul\":11465:11469   */\n      0xc0\n        /* \"#utility.yul\":11457:11463   */\n      dup8\n        /* \"#utility.yul\":11453:11470   */\n      add\n        /* \"#utility.yul\":11434:11471   */\n      tag_533\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":2884:2926   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2873:2927   */\n      and\n        /* \"#utility.yul\":11524:11528   */\n      0xc0\n        /* \"#utility.yul\":11515:11529   */\n      dup4\n      add\n        /* \"#utility.yul\":2861:2928   */\n      mstore\n        /* \"#utility.yul\":11561:11597   */\n      tag_635\n        /* \"#utility.yul\":11592:11595   */\n      0xe0\n        /* \"#utility.yul\":11580:11596   */\n      dup8\n      add\n        /* \"#utility.yul\":11561:11597   */\n      tag_533\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":2884:2926   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2873:2927   */\n      and\n        /* \"#utility.yul\":11650:11653   */\n      0xe0\n        /* \"#utility.yul\":11641:11654   */\n      dup4\n      add\n        /* \"#utility.yul\":2861:2928   */\n      mstore\n        /* \"#utility.yul\":11698:11713   */\n      dup3\n      dup7\n      add\n        /* \"#utility.yul\":11685:11714   */\n      calldataload\n        /* \"#utility.yul\":11671:11683   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":11664:11715   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11734:11740   */\n      0x0120\n        /* \"#utility.yul\":11783:11798   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":11770:11799   */\n      calldataload\n        /* \"#utility.yul\":11756:11768   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11749:11800   */\n      mstore\n        /* \"#utility.yul\":11819:11825   */\n      0x0140\n        /* \"#utility.yul\":11868:11883   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":11855:11884   */\n      calldataload\n        /* \"#utility.yul\":11841:11853   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11834:11885   */\n      mstore\n        /* \"#utility.yul\":11904:11910   */\n      0x0160\n        /* \"#utility.yul\":11953:11968   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":11940:11969   */\n      calldataload\n        /* \"#utility.yul\":11926:11938   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11919:11970   */\n      mstore\n        /* \"#utility.yul\":11989:11995   */\n      0x0180\n      swap2\n        /* \"#utility.yul\":12042:12097   */\n      tag_637\n        /* \"#utility.yul\":12081:12096   */\n      dup4\n      dup8\n      add\n        /* \"#utility.yul\":11698:11713   */\n      dup8\n        /* \"#utility.yul\":12042:12097   */\n      tag_542\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":12127:12129   */\n      dup3\n        /* \"#utility.yul\":12122:12124   */\n      dup6\n        /* \"#utility.yul\":12117:12120   */\n      dup6\n        /* \"#utility.yul\":12113:12125   */\n      add\n        /* \"#utility.yul\":12106:12130   */\n      mstore\n        /* \"#utility.yul\":12153:12224   */\n      tag_638\n        /* \"#utility.yul\":12220:12222   */\n      dup4\n        /* \"#utility.yul\":12215:12218   */\n      dup6\n        /* \"#utility.yul\":12211:12223   */\n      add\n        /* \"#utility.yul\":12195:12209   */\n      dup3\n        /* \"#utility.yul\":12179:12193   */\n      dup5\n        /* \"#utility.yul\":12153:12224   */\n      tag_543\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12139:12224   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12243:12249   */\n      0x01a0\n        /* \"#utility.yul\":12280:12313   */\n      tag_639\n        /* \"#utility.yul\":12309:12311   */\n      dup2\n        /* \"#utility.yul\":12301:12307   */\n      dup8\n        /* \"#utility.yul\":12297:12312   */\n      add\n        /* \"#utility.yul\":12280:12313   */\n      tag_541\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":9757:9761   */\n      0xff\n        /* \"#utility.yul\":9746:9762   */\n      and\n        /* \"#utility.yul\":12355:12367   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9734:9763   */\n      mstore\n        /* \"#utility.yul\":12387:12393   */\n      0x01c0\n        /* \"#utility.yul\":12436:12451   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":12423:12452   */\n      calldataload\n        /* \"#utility.yul\":12409:12421   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12402:12453   */\n      mstore\n        /* \"#utility.yul\":12472:12478   */\n      0x01e0\n        /* \"#utility.yul\":12521:12536   */\n      swap5\n      dup6\n      add\n        /* \"#utility.yul\":12508:12537   */\n      calldataload\n        /* \"#utility.yul\":12494:12506   */\n      swap5\n      add\n        /* \"#utility.yul\":12487:12538   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n      swap1\n      swap3\n        /* \"#utility.yul\":12555:12561   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9770:12567   */\n      jump\t// out\n        /* \"#utility.yul\":12572:12939   */\n    tag_159:\n        /* \"#utility.yul\":12657:12663   */\n      0x00\n        /* \"#utility.yul\":12665:12671   */\n      dup1\n        /* \"#utility.yul\":12673:12679   */\n      0x00\n        /* \"#utility.yul\":12726:12728   */\n      0x60\n        /* \"#utility.yul\":12714:12723   */\n      dup5\n        /* \"#utility.yul\":12705:12712   */\n      dup7\n        /* \"#utility.yul\":12701:12724   */\n      sub\n        /* \"#utility.yul\":12697:12729   */\n      slt\n        /* \"#utility.yul\":12694:12746   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":12742:12743   */\n      0x00\n        /* \"#utility.yul\":12739:12740   */\n      dup1\n        /* \"#utility.yul\":12732:12744   */\n      revert\n        /* \"#utility.yul\":12694:12746   */\n    tag_642:\n        /* \"#utility.yul\":12774:12783   */\n      dup4\n        /* \"#utility.yul\":12768:12784   */\n      mload\n        /* \"#utility.yul\":12793:12821   */\n      tag_643\n        /* \"#utility.yul\":12815:12820   */\n      dup2\n        /* \"#utility.yul\":12793:12821   */\n      tag_536\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":12885:12887   */\n      0x20\n        /* \"#utility.yul\":12870:12888   */\n      dup6\n      add\n        /* \"#utility.yul\":12864:12889   */\n      mload\n        /* \"#utility.yul\":12929:12931   */\n      0x40\n        /* \"#utility.yul\":12914:12932   */\n      swap1\n      swap6\n      add\n        /* \"#utility.yul\":12908:12933   */\n      mload\n        /* \"#utility.yul\":12840:12845   */\n      swap1\n      swap7\n        /* \"#utility.yul\":12864:12889   */\n      swap5\n      swap6\n      pop\n        /* \"#utility.yul\":12908:12933   */\n      swap4\n        /* \"#utility.yul\":12572:12939   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14338:14522   */\n    tag_545:\n        /* \"#utility.yul\":14390:14467   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14387:14388   */\n      0x00\n        /* \"#utility.yul\":14380:14468   */\n      mstore\n        /* \"#utility.yul\":14487:14491   */\n      0x11\n        /* \"#utility.yul\":14484:14485   */\n      0x04\n        /* \"#utility.yul\":14477:14492   */\n      mstore\n        /* \"#utility.yul\":14511:14515   */\n      0x24\n        /* \"#utility.yul\":14508:14509   */\n      0x00\n        /* \"#utility.yul\":14501:14516   */\n      revert\n        /* \"#utility.yul\":14527:14655   */\n    tag_201:\n        /* \"#utility.yul\":14594:14603   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":14615:14626   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":14612:14649   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":14629:14647   */\n      tag_130\n      tag_545\n      jump\t// in\n        /* \"#utility.yul\":15726:15910   */\n    tag_295:\n        /* \"#utility.yul\":15778:15855   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15775:15776   */\n      0x00\n        /* \"#utility.yul\":15768:15856   */\n      mstore\n        /* \"#utility.yul\":15875:15879   */\n      0x32\n        /* \"#utility.yul\":15872:15873   */\n      0x04\n        /* \"#utility.yul\":15865:15880   */\n      mstore\n        /* \"#utility.yul\":15899:15903   */\n      0x24\n        /* \"#utility.yul\":15896:15897   */\n      0x00\n        /* \"#utility.yul\":15889:15904   */\n      revert\n        /* \"#utility.yul\":16328:16523   */\n    tag_302:\n        /* \"#utility.yul\":16367:16370   */\n      0x00\n        /* \"#utility.yul\":16398:16464   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16391:16396   */\n      dup3\n        /* \"#utility.yul\":16388:16465   */\n      sub\n        /* \"#utility.yul\":16385:16488   */\n      tag_658\n      jumpi\n        /* \"#utility.yul\":16468:16486   */\n      tag_658\n      tag_545\n      jump\t// in\n    tag_658:\n      pop\n        /* \"#utility.yul\":16515:16516   */\n      0x01\n        /* \"#utility.yul\":16504:16517   */\n      add\n      swap1\n        /* \"#utility.yul\":16328:16523   */\n      jump\t// out\n        /* \"#utility.yul\":16528:17018   */\n    tag_304:\n        /* \"#utility.yul\":16717:16719   */\n      0x20\n        /* \"#utility.yul\":16706:16715   */\n      dup2\n        /* \"#utility.yul\":16699:16720   */\n      mstore\n        /* \"#utility.yul\":16756:16762   */\n      dup2\n        /* \"#utility.yul\":16751:16753   */\n      0x20\n        /* \"#utility.yul\":16740:16749   */\n      dup3\n        /* \"#utility.yul\":16736:16754   */\n      add\n        /* \"#utility.yul\":16729:16763   */\n      mstore\n        /* \"#utility.yul\":16680:16684   */\n      0x00\n        /* \"#utility.yul\":16786:16852   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16778:16784   */\n      dup4\n        /* \"#utility.yul\":16775:16853   */\n      gt\n        /* \"#utility.yul\":16772:16870   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":16866:16867   */\n      0x00\n        /* \"#utility.yul\":16863:16864   */\n      dup1\n        /* \"#utility.yul\":16856:16868   */\n      revert\n        /* \"#utility.yul\":16772:16870   */\n    tag_660:\n        /* \"#utility.yul\":16900:16906   */\n      dup3\n        /* \"#utility.yul\":16897:16898   */\n      0x05\n        /* \"#utility.yul\":16893:16907   */\n      shl\n        /* \"#utility.yul\":16957:16963   */\n      dup1\n        /* \"#utility.yul\":16949:16955   */\n      dup6\n        /* \"#utility.yul\":16944:16946   */\n      0x40\n        /* \"#utility.yul\":16933:16942   */\n      dup6\n        /* \"#utility.yul\":16929:16947   */\n      add\n        /* \"#utility.yul\":16916:16964   */\n      calldatacopy\n        /* \"#utility.yul\":16985:17007   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":17009:17011   */\n      0x40\n        /* \"#utility.yul\":16981:17012   */\n      add\n      swap4\n        /* \"#utility.yul\":16528:17018   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17023:17148   */\n    tag_314:\n        /* \"#utility.yul\":17088:17097   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":17109:17119   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":17106:17142   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":17122:17140   */\n      tag_130\n      tag_545\n      jump\t// in\n        /* \"#utility.yul\":18279:19493   */\n    tag_345:\n        /* \"#utility.yul\":18788:18813   */\n      dup15\n      dup2\n      mstore\n        /* \"#utility.yul\":18856:18870   */\n      dup14\n      iszero\n        /* \"#utility.yul\":18849:18871   */\n      iszero\n        /* \"#utility.yul\":18844:18846   */\n      0x20\n        /* \"#utility.yul\":18829:18847   */\n      dup3\n      add\n        /* \"#utility.yul\":18822:18872   */\n      mstore\n        /* \"#utility.yul\":18920:18962   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18908:18963   */\n      dup14\n      dup2\n      and\n        /* \"#utility.yul\":18903:18905   */\n      0x40\n        /* \"#utility.yul\":18888:18906   */\n      dup4\n      add\n        /* \"#utility.yul\":18881:18964   */\n      mstore\n        /* \"#utility.yul\":2873:2927   */\n      dup13\n      and\n        /* \"#utility.yul\":19015:19017   */\n      0x60\n        /* \"#utility.yul\":19000:19018   */\n      dup3\n      add\n        /* \"#utility.yul\":2861:2928   */\n      mstore\n        /* \"#utility.yul\":18775:18778   */\n      0x01c0\n        /* \"#utility.yul\":18760:18779   */\n      dup2\n      add\n        /* \"#utility.yul\":19056:19062   */\n      dup12\n        /* \"#utility.yul\":19050:19053   */\n      0x80\n        /* \"#utility.yul\":19039:19048   */\n      dup4\n        /* \"#utility.yul\":19035:19054   */\n      add\n        /* \"#utility.yul\":19028:19063   */\n      mstore\n        /* \"#utility.yul\":19100:19106   */\n      dup11\n        /* \"#utility.yul\":19094:19097   */\n      0xa0\n        /* \"#utility.yul\":19083:19092   */\n      dup4\n        /* \"#utility.yul\":19079:19098   */\n      add\n        /* \"#utility.yul\":19072:19107   */\n      mstore\n        /* \"#utility.yul\":19144:19150   */\n      dup10\n        /* \"#utility.yul\":19138:19141   */\n      0xc0\n        /* \"#utility.yul\":19127:19136   */\n      dup4\n        /* \"#utility.yul\":19123:19142   */\n      add\n        /* \"#utility.yul\":19116:19151   */\n      mstore\n        /* \"#utility.yul\":19160:19207   */\n      tag_669\n        /* \"#utility.yul\":19202:19205   */\n      0xe0\n        /* \"#utility.yul\":19191:19200   */\n      dup4\n        /* \"#utility.yul\":19187:19206   */\n      add\n        /* \"#utility.yul\":19179:19185   */\n      dup11\n        /* \"#utility.yul\":2884:2926   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2873:2927   */\n      and\n        /* \"#utility.yul\":2861:2928   */\n      swap1\n      mstore\n        /* \"#utility.yul\":2807:2934   */\n      jump\n        /* \"#utility.yul\":19160:19207   */\n    tag_669:\n        /* \"#utility.yul\":2884:2926   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2873:2927   */\n      dup9\n      and\n        /* \"#utility.yul\":19258:19261   */\n      0x0100\n        /* \"#utility.yul\":19243:19262   */\n      dup4\n      add\n        /* \"#utility.yul\":2861:2928   */\n      mstore\n        /* \"#utility.yul\":19294:19297   */\n      0x0120\n        /* \"#utility.yul\":19279:19298   */\n      dup3\n      add\n        /* \"#utility.yul\":19272:19307   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":19338:19341   */\n      0x0140\n        /* \"#utility.yul\":19323:19342   */\n      dup2\n      add\n        /* \"#utility.yul\":19316:19352   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":19383:19386   */\n      0x0160\n        /* \"#utility.yul\":19368:19387   */\n      dup5\n      add\n        /* \"#utility.yul\":19361:19397   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":19428:19431   */\n      0x0180\n        /* \"#utility.yul\":19413:19432   */\n      dup4\n      add\n        /* \"#utility.yul\":19406:19442   */\n      mstore\n        /* \"#utility.yul\":19473:19476   */\n      0x01a0\n        /* \"#utility.yul\":19458:19477   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":19451:19487   */\n      mstore\n        /* \"#utility.yul\":18279:19493   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21447:21629   */\n    tag_365:\n        /* \"#utility.yul\":21504:21510   */\n      0x00\n        /* \"#utility.yul\":21557:21559   */\n      0x20\n        /* \"#utility.yul\":21545:21554   */\n      dup3\n        /* \"#utility.yul\":21536:21543   */\n      dup5\n        /* \"#utility.yul\":21532:21555   */\n      sub\n        /* \"#utility.yul\":21528:21560   */\n      slt\n        /* \"#utility.yul\":21525:21577   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":21573:21574   */\n      0x00\n        /* \"#utility.yul\":21570:21571   */\n      dup1\n        /* \"#utility.yul\":21563:21575   */\n      revert\n        /* \"#utility.yul\":21525:21577   */\n    tag_676:\n        /* \"#utility.yul\":21596:21623   */\n      tag_507\n        /* \"#utility.yul\":21613:21622   */\n      dup3\n        /* \"#utility.yul\":21596:21623   */\n      tag_541\n      jump\t// in\n        /* \"#utility.yul\":21981:22226   */\n    tag_375:\n        /* \"#utility.yul\":22048:22054   */\n      0x00\n        /* \"#utility.yul\":22101:22103   */\n      0x20\n        /* \"#utility.yul\":22089:22098   */\n      dup3\n        /* \"#utility.yul\":22080:22087   */\n      dup5\n        /* \"#utility.yul\":22076:22099   */\n      sub\n        /* \"#utility.yul\":22072:22104   */\n      slt\n        /* \"#utility.yul\":22069:22121   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":22117:22118   */\n      0x00\n        /* \"#utility.yul\":22114:22115   */\n      dup1\n        /* \"#utility.yul\":22107:22119   */\n      revert\n        /* \"#utility.yul\":22069:22121   */\n    tag_680:\n        /* \"#utility.yul\":22149:22158   */\n      dup2\n        /* \"#utility.yul\":22143:22159   */\n      mload\n        /* \"#utility.yul\":22168:22196   */\n      tag_507\n        /* \"#utility.yul\":22190:22195   */\n      dup2\n        /* \"#utility.yul\":22168:22196   */\n      tag_536\n      jump\t// in\n        /* \"#utility.yul\":23314:23626   */\n    tag_399:\n        /* \"#utility.yul\":23393:23399   */\n      0x00\n        /* \"#utility.yul\":23401:23407   */\n      dup1\n        /* \"#utility.yul\":23454:23456   */\n      0x40\n        /* \"#utility.yul\":23442:23451   */\n      dup4\n        /* \"#utility.yul\":23433:23440   */\n      dup6\n        /* \"#utility.yul\":23429:23452   */\n      sub\n        /* \"#utility.yul\":23425:23457   */\n      slt\n        /* \"#utility.yul\":23422:23474   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":23470:23471   */\n      0x00\n        /* \"#utility.yul\":23467:23468   */\n      dup1\n        /* \"#utility.yul\":23460:23472   */\n      revert\n        /* \"#utility.yul\":23422:23474   */\n    tag_686:\n        /* \"#utility.yul\":23502:23511   */\n      dup3\n        /* \"#utility.yul\":23496:23512   */\n      mload\n        /* \"#utility.yul\":23521:23552   */\n      tag_687\n        /* \"#utility.yul\":23546:23551   */\n      dup2\n        /* \"#utility.yul\":23521:23552   */\n      tag_532\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":23616:23618   */\n      0x20\n        /* \"#utility.yul\":23601:23619   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":23595:23620   */\n      mload\n        /* \"#utility.yul\":23571:23576   */\n      swap3\n      swap5\n        /* \"#utility.yul\":23595:23620   */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23314:23626   */\n      jump\t// out\n        /* \"#utility.yul\":23933:24101   */\n    tag_407:\n        /* \"#utility.yul\":24006:24015   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":24037:24046   */\n      dup2\n      iszero\n        /* \"#utility.yul\":24054:24069   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":24048:24070   */\n      dup5\n      eq\n        /* \"#utility.yul\":24034:24071   */\n      or\n        /* \"#utility.yul\":24024:24095   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":24075:24093   */\n      tag_130\n      tag_545\n      jump\t// in\n        /* \"#utility.yul\":24509:24760   */\n    tag_418:\n        /* \"#utility.yul\":24579:24585   */\n      0x00\n        /* \"#utility.yul\":24632:24634   */\n      0x20\n        /* \"#utility.yul\":24620:24629   */\n      dup3\n        /* \"#utility.yul\":24611:24618   */\n      dup5\n        /* \"#utility.yul\":24607:24630   */\n      sub\n        /* \"#utility.yul\":24603:24635   */\n      slt\n        /* \"#utility.yul\":24600:24652   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":24648:24649   */\n      0x00\n        /* \"#utility.yul\":24645:24646   */\n      dup1\n        /* \"#utility.yul\":24638:24650   */\n      revert\n        /* \"#utility.yul\":24600:24652   */\n    tag_694:\n        /* \"#utility.yul\":24680:24689   */\n      dup2\n        /* \"#utility.yul\":24674:24690   */\n      mload\n        /* \"#utility.yul\":24699:24730   */\n      tag_507\n        /* \"#utility.yul\":24724:24729   */\n      dup2\n        /* \"#utility.yul\":24699:24730   */\n      tag_532\n      jump\t// in\n        /* \"#utility.yul\":26926:27176   */\n    tag_546:\n        /* \"#utility.yul\":27011:27012   */\n      0x00\n        /* \"#utility.yul\":27021:27134   */\n    tag_702:\n        /* \"#utility.yul\":27035:27041   */\n      dup4\n        /* \"#utility.yul\":27032:27033   */\n      dup2\n        /* \"#utility.yul\":27029:27042   */\n      lt\n        /* \"#utility.yul\":27021:27134   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":27111:27122   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":27105:27123   */\n      mload\n        /* \"#utility.yul\":27092:27103   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":27085:27124   */\n      mstore\n        /* \"#utility.yul\":27057:27059   */\n      0x20\n        /* \"#utility.yul\":27050:27060   */\n      add\n        /* \"#utility.yul\":27021:27134   */\n      jump(tag_702)\n    tag_704:\n      pop\n      pop\n        /* \"#utility.yul\":27168:27169   */\n      0x00\n        /* \"#utility.yul\":27150:27166   */\n      swap2\n      add\n        /* \"#utility.yul\":27143:27170   */\n      mstore\n        /* \"#utility.yul\":26926:27176   */\n      jump\t// out\n        /* \"#utility.yul\":27181:27510   */\n    tag_547:\n        /* \"#utility.yul\":27222:27225   */\n      0x00\n        /* \"#utility.yul\":27260:27265   */\n      dup2\n        /* \"#utility.yul\":27254:27266   */\n      mload\n        /* \"#utility.yul\":27287:27293   */\n      dup1\n        /* \"#utility.yul\":27282:27285   */\n      dup5\n        /* \"#utility.yul\":27275:27294   */\n      mstore\n        /* \"#utility.yul\":27303:27379   */\n      tag_706\n        /* \"#utility.yul\":27372:27378   */\n      dup2\n        /* \"#utility.yul\":27365:27369   */\n      0x20\n        /* \"#utility.yul\":27360:27363   */\n      dup7\n        /* \"#utility.yul\":27356:27370   */\n      add\n        /* \"#utility.yul\":27349:27353   */\n      0x20\n        /* \"#utility.yul\":27342:27347   */\n      dup7\n        /* \"#utility.yul\":27338:27354   */\n      add\n        /* \"#utility.yul\":27303:27379   */\n      tag_546\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":27424:27426   */\n      0x1f\n        /* \"#utility.yul\":27412:27427   */\n      add\n        /* \"#utility.yul\":27429:27495   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":27408:27496   */\n      and\n        /* \"#utility.yul\":27399:27497   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":27499:27503   */\n      0x20\n        /* \"#utility.yul\":27395:27504   */\n      add\n      swap3\n        /* \"#utility.yul\":27181:27510   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27515:27803   */\n    tag_464:\n        /* \"#utility.yul\":27690:27696   */\n      dup3\n        /* \"#utility.yul\":27679:27688   */\n      dup2\n        /* \"#utility.yul\":27672:27697   */\n      mstore\n        /* \"#utility.yul\":27733:27735   */\n      0x40\n        /* \"#utility.yul\":27728:27730   */\n      0x20\n        /* \"#utility.yul\":27717:27726   */\n      dup3\n        /* \"#utility.yul\":27713:27731   */\n      add\n        /* \"#utility.yul\":27706:27736   */\n      mstore\n        /* \"#utility.yul\":27653:27657   */\n      0x00\n        /* \"#utility.yul\":27753:27797   */\n      tag_508\n        /* \"#utility.yul\":27793:27795   */\n      0x40\n        /* \"#utility.yul\":27782:27791   */\n      dup4\n        /* \"#utility.yul\":27778:27796   */\n      add\n        /* \"#utility.yul\":27770:27776   */\n      dup5\n        /* \"#utility.yul\":27753:27797   */\n      tag_547\n      jump\t// in\n        /* \"#utility.yul\":27808:28144   */\n    tag_468:\n        /* \"#utility.yul\":27877:27883   */\n      0x00\n        /* \"#utility.yul\":27930:27932   */\n      0x20\n        /* \"#utility.yul\":27918:27927   */\n      dup3\n        /* \"#utility.yul\":27909:27916   */\n      dup5\n        /* \"#utility.yul\":27905:27928   */\n      sub\n        /* \"#utility.yul\":27901:27933   */\n      slt\n        /* \"#utility.yul\":27898:27950   */\n      iszero\n      tag_710\n      jumpi\n        /* \"#utility.yul\":27946:27947   */\n      0x00\n        /* \"#utility.yul\":27943:27944   */\n      dup1\n        /* \"#utility.yul\":27936:27948   */\n      revert\n        /* \"#utility.yul\":27898:27950   */\n    tag_710:\n        /* \"#utility.yul\":27978:27987   */\n      dup2\n        /* \"#utility.yul\":27972:27988   */\n      mload\n        /* \"#utility.yul\":28028:28094   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28021:28026   */\n      dup2\n        /* \"#utility.yul\":28017:28095   */\n      and\n        /* \"#utility.yul\":28010:28015   */\n      dup2\n        /* \"#utility.yul\":28007:28096   */\n      eq\n        /* \"#utility.yul\":27997:28114   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":28110:28111   */\n      0x00\n        /* \"#utility.yul\":28107:28108   */\n      dup1\n        /* \"#utility.yul\":28100:28112   */\n      revert\n        /* \"#utility.yul\":28149:28333   */\n    tag_476:\n        /* \"#utility.yul\":28219:28225   */\n      0x00\n        /* \"#utility.yul\":28272:28274   */\n      0x20\n        /* \"#utility.yul\":28260:28269   */\n      dup3\n        /* \"#utility.yul\":28251:28258   */\n      dup5\n        /* \"#utility.yul\":28247:28270   */\n      sub\n        /* \"#utility.yul\":28243:28275   */\n      slt\n        /* \"#utility.yul\":28240:28292   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":28288:28289   */\n      0x00\n        /* \"#utility.yul\":28285:28286   */\n      dup1\n        /* \"#utility.yul\":28278:28290   */\n      revert\n        /* \"#utility.yul\":28240:28292   */\n    tag_713:\n      pop\n        /* \"#utility.yul\":28311:28327   */\n      mload\n      swap2\n        /* \"#utility.yul\":28149:28333   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28338:28612   */\n    tag_479:\n        /* \"#utility.yul\":28378:28379   */\n      0x00\n        /* \"#utility.yul\":28404:28405   */\n      dup3\n        /* \"#utility.yul\":28394:28583   */\n      tag_715\n      jumpi\n        /* \"#utility.yul\":28439:28516   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28436:28437   */\n      0x00\n        /* \"#utility.yul\":28429:28517   */\n      mstore\n        /* \"#utility.yul\":28540:28544   */\n      0x12\n        /* \"#utility.yul\":28537:28538   */\n      0x04\n        /* \"#utility.yul\":28530:28545   */\n      mstore\n        /* \"#utility.yul\":28568:28572   */\n      0x24\n        /* \"#utility.yul\":28565:28566   */\n      0x00\n        /* \"#utility.yul\":28558:28573   */\n      revert\n        /* \"#utility.yul\":28394:28583   */\n    tag_715:\n      pop\n        /* \"#utility.yul\":28597:28606   */\n      div\n      swap1\n        /* \"#utility.yul\":28338:28612   */\n      jump\t// out\n        /* \"#utility.yul\":31237:31524   */\n    tag_519:\n        /* \"#utility.yul\":31366:31369   */\n      0x00\n        /* \"#utility.yul\":31404:31410   */\n      dup3\n        /* \"#utility.yul\":31398:31411   */\n      mload\n        /* \"#utility.yul\":31420:31486   */\n      tag_724\n        /* \"#utility.yul\":31479:31485   */\n      dup2\n        /* \"#utility.yul\":31474:31477   */\n      dup5\n        /* \"#utility.yul\":31467:31471   */\n      0x20\n        /* \"#utility.yul\":31459:31465   */\n      dup8\n        /* \"#utility.yul\":31455:31472   */\n      add\n        /* \"#utility.yul\":31420:31486   */\n      tag_546\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":31502:31518   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":31237:31524   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31529:31748   */\n    tag_531:\n        /* \"#utility.yul\":31678:31680   */\n      0x20\n        /* \"#utility.yul\":31667:31676   */\n      dup2\n        /* \"#utility.yul\":31660:31681   */\n      mstore\n        /* \"#utility.yul\":31641:31645   */\n      0x00\n        /* \"#utility.yul\":31698:31742   */\n      tag_507\n        /* \"#utility.yul\":31738:31740   */\n      0x20\n        /* \"#utility.yul\":31727:31736   */\n      dup4\n        /* \"#utility.yul\":31723:31741   */\n      add\n        /* \"#utility.yul\":31715:31721   */\n      dup5\n        /* \"#utility.yul\":31698:31742   */\n      tag_547\n      jump\t// in\n\n    auxdata: 0xa26469706673582212203e3f069888d19a53f22370805c756b9a209e773dd85833c0bde3d962ae95ed3564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1080": {
									"entryPoint": null,
									"id": 1080,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 157,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:748:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:19"
															},
															"nodeType": "YulIf",
															"src": "115:70:19"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:19",
														"type": ""
													}
												],
												"src": "14:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "345:401:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "392:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "404:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "394:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:33:19"
															},
															"nodeType": "YulIf",
															"src": "355:53:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "417:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "427:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:40:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "417:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "476:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "531:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "486:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:49:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "544:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "599:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "584:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "554:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:49:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "656:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "667:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "622:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:49:19"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "680:60:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "724:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "735:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "720:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "720:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "690:29:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:50:19"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "290:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "302:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "310:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "318:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "326:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "334:6:19",
														"type": ""
													}
												],
												"src": "196:550:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b50604051620040823803806200408283398101604081905262000034916200010c565b600160005562000044336200009d565b600380546001600160a01b039687166001600160a01b031991821617909155600480549587169582169590951790945560058054938616938516939093179092558316608052600280549190931691161790556200017c565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200010757600080fd5b919050565b600080600080600060a086880312156200012557600080fd5b6200013086620000ef565b94506200014060208701620000ef565b93506200015060408701620000ef565b92506200016060608701620000ef565b91506200017060808701620000ef565b90509295509295909350565b608051613eb9620001c9600039600081816103ec01528181610b5201528181610cda01528181610d76015281816128f401528181612a1701528181612a9c0152612bb20152613eb96000f3fe60806040526004361061016a5760003560e01c806364df049e116100cb578063ad5c46481161007f578063d4ff41dc11610059578063d4ff41dc1461044e578063f2fde38b1461046e578063f75ff53f1461048e57600080fd5b8063ad5c4648146103da578063c54987691461040e578063cbd2ec651461042e57600080fd5b806387e4401f116100b057806387e4401f146103625780638da5cb5b1461038f5780639e53a69a146103ba57600080fd5b806364df049e14610320578063715018a61461034d57600080fd5b8063483abb9f116101225780635ce052d7116101075780635ce052d7146102b35780635e14f68e146102d357806363521def1461030057600080fd5b8063483abb9f14610273578063509a1a41146102a057600080fd5b806331e27e271161015357806331e27e27146101e85780634266581e1461021857806345ea72311461025357600080fd5b80630f747d741461016f5780631df47f80146101c6575b600080fd5b34801561017b57600080fd5b5060035461019c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156101d257600080fd5b506101e66101e1366004613459565b6104ae565b005b3480156101f457600080fd5b50610208610203366004613476565b610525565b60405190151581526020016101bd565b34801561022457600080fd5b50610245610233366004613459565b60076020526000908152604090205481565b6040519081526020016101bd565b34801561025f57600080fd5b506101e661026e3660046134a2565b610560565b34801561027f57600080fd5b5060045461019c9073ffffffffffffffffffffffffffffffffffffffff1681565b6101e66102ae3660046134a2565b610a41565b3480156102bf57600080fd5b506101e66102ce366004613459565b610fcb565b3480156102df57600080fd5b5060065461019c9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561030c57600080fd5b506101e661031b3660046134a2565b6110bf565b34801561032c57600080fd5b5060025461019c9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561035957600080fd5b506101e6611522565b34801561036e57600080fd5b5060055461019c9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561039b57600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff1661019c565b3480156103c657600080fd5b506101e66103d5366004613516565b611536565b3480156103e657600080fd5b5061019c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041a57600080fd5b506101e6610429366004613459565b611717565b34801561043a57600080fd5b506101e661044936600461358b565b61180b565b34801561045a57600080fd5b506101e6610469366004613459565b61197d565b34801561047a57600080fd5b506101e6610489366004613459565b611a71565b34801561049a57600080fd5b506101e66104a9366004613459565b611b28565b6104b6611c1c565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb1090600090a250565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260086020908152604080832084845290915290205460ff165b92915050565b6002600054036105d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556105e360208201826135bd565b80156105f957506105f760208301836135bd565b155b61065f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4572726f722041626f7574204f7264657220536964650000000000000000000060448201526064016105c8565b61066f6040830160208401613459565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610703576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f72646572206d757374206265207468652073656e646572000000000000000060448201526064016105c8565b6000610716610711836136ef565b611c9d565b90506107228282611d44565b6000808061073660e0860160c08701613459565b73ffffffffffffffffffffffffffffffffffffffff1663d310677d87876040518363ffffffff1660e01b81526004016107709291906138b4565b606060405180830381865afa15801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190613a9e565b9250925092508261081e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53747261746567792073686f756c642062652076616c6964000000000000000060448201526064016105c8565b6001600860006108346040890160208a01613459565b73ffffffffffffffffffffffffffffffffffffffff168152602080820192909252604090810160009081206101008a01358252909252902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556108ef6108ac60e0870160c08801613459565b6108bc6060880160408901613459565b846108ce6101008a0160e08b01613459565b336108df60408c0160208d01613459565b8c604001358c610160013561232e565b6109296109026060870160408801613459565b6109126040880160208901613459565b61092260408a0160208b01613459565b85856125fe565b61093960e0860160c08701613459565b73ffffffffffffffffffffffffffffffffffffffff1661095f6040870160208801613459565b73ffffffffffffffffffffffffffffffffffffffff166109856040890160208a01613459565b73ffffffffffffffffffffffffffffffffffffffff167f95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be876101008a018035906109d29060e08d01613459565b6109e260608d0160408e01613459565b60408051948552602085019390935273ffffffffffffffffffffffffffffffffffffffff918216848401521660608301526080820188905260a082018790528b013560c082015260e00160405180910390a45050600160005550505050565b600260005403610aad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105c8565b6002600055610abf60208201826135bd565b8015610ad55750610ad360208301836135bd565b155b610b3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4572726f722041626f7574204f7264657220536964650000000000000000000060448201526064016105c8565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016610b83610100830160e08401613459565b73ffffffffffffffffffffffffffffffffffffffff1614610c00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f43757272656e6379206d7573742062652057455448000000000000000000000060448201526064016105c8565b610c106040830160208401613459565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ca4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f72646572206d757374206265207468652073656e646572000000000000000060448201526064016105c8565b3482604001351115610d0757610d023330610cc3346040870135613b04565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169291906127b9565b610d74565b34826040013514610d74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d73672e76616c756520697320746f6f2068696768000000000000000000000060448201526064016105c8565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ddc57600080fd5b505af1158015610df0573d6000803e3d6000fd5b50505050506000610e0482610711906136ef565b9050610e108282611d44565b60008080610e2460e0860160c08701613459565b73ffffffffffffffffffffffffffffffffffffffff1663d310677d87876040518363ffffffff1660e01b8152600401610e5e9291906138b4565b606060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190613a9e565b92509250925082610f0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53747261746567792073686f756c642062652076616c6964000000000000000060448201526064016105c8565b600160086000610f226040890160208a01613459565b73ffffffffffffffffffffffffffffffffffffffff168152602080820192909252604090810160009081206101008a01358252909252902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790556108ef610f9a60e0870160c08801613459565b610faa6060880160408901613459565b84610fbb60408a0160208b01613459565b8a604001358a610160013561289b565b610fd3611c1c565b73ffffffffffffffffffffffffffffffffffffffff8116611050576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f742075706461746520746f2061206e756c6c20616464726573730060448201526064016105c8565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fb4f5db40df3aced29e88a4babbc3b46e305e07d34098525d18b1497056e6383890600090a250565b60026000540361112b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105c8565b600260005561113d60208201826135bd565b158015611152575061115260208301836135bd565b6111b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4572726f722041626f7574204f7264657220536964650000000000000000000060448201526064016105c8565b6111c86040830160208401613459565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4f72646572206d757374206265207468652073656e646572000000000000000060448201526064016105c8565b600061126a610711836136ef565b90506112768282611d44565b6000808061128a60e0860160c08701613459565b73ffffffffffffffffffffffffffffffffffffffff16632a75ffee87876040518363ffffffff1660e01b81526004016112c49291906138b4565b606060405180830381865afa1580156112e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113059190613a9e565b92509250925082611372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f53747261746567792073686f756c642062652076616c6964000000000000000060448201526064016105c8565b6001600860006113886040890160208a01613459565b73ffffffffffffffffffffffffffffffffffffffff168152602080820192909252604090810160009081206101008a013582529092529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155611415906114049060608801908801613459565b336109226040890160208a01613459565b61147961142860e0870160c08801613459565b6114386060880160408901613459565b8461144a6101008a0160e08b01613459565b61145a60408b0160208c01613459565b61146a60408d0160208e01613459565b8c604001358d6080013561232e565b61148960e0860160c08701613459565b73ffffffffffffffffffffffffffffffffffffffff166114af6040870160208801613459565b73ffffffffffffffffffffffffffffffffffffffff166114d56040890160208a01613459565b73ffffffffffffffffffffffffffffffffffffffff167f68cd251d4d267c6e2034ff0088b990352b97b2002c0476587d0c4da889c11330876101008a018035906109d29060e08d01613459565b61152a611c1c565b6115346000612bd9565b565b8061159d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616e6e6f7420626520656d7074792043616e63656c206c697374000000000060448201526064016105c8565b60005b818110156116c257336000908152600760205260409020548383838181106115ca576115ca613b17565b90506020020135101561165f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f7765722060448201527f7468616e2063757272656e74000000000000000000000000000000000000000060648201526084016105c8565b33600090815260086020526040812060019185858581811061168357611683613b17565b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555080806116ba90613b46565b9150506115a0565b503373ffffffffffffffffffffffffffffffffffffffff167ffa0ae5d80fe3763c880a3839fab0294171a6f730d1f82c4cd5392c6f67b41732838360405161170b929190613b7e565b60405180910390a25050565b61171f611c1c565b73ffffffffffffffffffffffffffffffffffffffff811661179c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f742075706461746520746f2061206e756c6c20616464726573730060448201526064016105c8565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f80e3874461ebbd918ac3e81da0a92e5e51387d70f337237c9123e48d20e5a50890600090a250565b3360009081526007602052604090205481116118a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f7765722060448201527f7468616e2063757272656e74000000000000000000000000000000000000000060648201526084016105c8565b336000908152600760205260409020546118c6906207a120613bd0565b811061192e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f43616e6e6f742063616e63656c20746f6f206d616e79206f726465727300000060448201526064016105c8565b3360008181526007602052604090819020839055517f1e7178d84f0b0825c65795cd62e7972809ad3aac6917843aaec596161b2c0a97906119729084815260200190565b60405180910390a250565b611985611c1c565b73ffffffffffffffffffffffffffffffffffffffff8116611a02576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f742075706461746520746f2061206e756c6c20616464726573730060448201526064016105c8565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f36e2a376eabc3bc60cb88f29c288f53e36874a95a7f407330ab4f166b090569890600090a250565b611a79611c1c565b73ffffffffffffffffffffffffffffffffffffffff8116611b1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105c8565b611b2581612bd9565b50565b611b30611c1c565b73ffffffffffffffffffffffffffffffffffffffff8116611bad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f43616e6e6f742075706461746520746f2061206e756c6c20616464726573730060448201526064016105c8565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517f205d78ab41afe80bd6b6aaa5d7599d5300ff8690da3ab1302c1b552f7baf7d8c90600090a250565b60015473ffffffffffffffffffffffffffffffffffffffff163314611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c8565b80516020808301516040808501516060860151608087015160a088015160c089015160e08a01516101008b01516101208c01516101408d01516101608e01516101808f01518051908e01209a5160009e611d279e7f40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a850289e919d919c9b9a999897969594939201613be3565b604051602081830303815290604052805190602001209050919050565b60086000611d586040850160208601613459565b73ffffffffffffffffffffffffffffffffffffffff16815260208082019290925260409081016000908120610100860135825290925290205460ff16158015611df4575060076000611db06040850160208601613459565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610100013510155b611e5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f726465723a204d61746368696e67206f72646572206578706972656400000060448201526064016105c8565b6000611e6c6040840160208501613459565b73ffffffffffffffffffffffffffffffffffffffff1603611f0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f546865204f72646572207369676e65722063616e6e6f7420626520746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016105c8565b60008260a0013511611fa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f546865206f7264657220616d6f756e742073686f756c6420626520677265617460448201527f6572207468616e2030000000000000000000000000000000000000000000000060648201526084016105c8565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090506120808284602001602081019061205c9190613459565b61206e6101c087016101a08801613c9d565b866101c00135876101e0013586612c50565b6120e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f5369676e61747572653a20496e76616c6964000000000000000000000000000060448201526064016105c8565b60035473ffffffffffffffffffffffffffffffffffffffff166343b938c5612115610100860160e08701613459565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa15801561217e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a29190613cb8565b612208576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420696e2043757272656e63792077686974656c69737400000000000060448201526064016105c8565b60045473ffffffffffffffffffffffffffffffffffffffff1663999ba27c61223660e0860160c08701613459565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa15801561229f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122c39190613cb8565b612329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f204e6f7420696e2053747261746567792077686974656c69737400000000000060448201526064016105c8565b505050565b81600061233b8a83612e24565b60025490915073ffffffffffffffffffffffffffffffffffffffff161580159061236457508015155b1561239f576002546123929073ffffffffffffffffffffffffffffffffffffffff89811691899116846127b9565b61239c8183613b04565b91505b6005546040517ff4f635fa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b81166004830152602482018b905260448201879052600092839291169063f4f635fa906064016040805180830381865afa158015612420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124449190613cd5565b909250905073ffffffffffffffffffffffffffffffffffffffff82161580159061246d57508015155b1561252a5761249473ffffffffffffffffffffffffffffffffffffffff8a168984846127b9565b61249e8185613b04565b93508173ffffffffffffffffffffffffffffffffffffffff168a8c73ffffffffffffffffffffffffffffffffffffffff167f27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d8c8560405161252192919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60405180910390a45b6125348686613d03565b61254085612710613d03565b10156125ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f5468652066656520697320746f6f206869676820666f72207468652073656c6c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084016105c8565b6125f073ffffffffffffffffffffffffffffffffffffffff8a168989876127b9565b505050505050505050505050565b6006546040517fcc15949300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152600092169063cc15949390602401602060405180830381865afa15801561266f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126939190613d1a565b905073ffffffffffffffffffffffffffffffffffffffff8116612712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f43616e277420666f756e74207472616e73666572206d616e616765720000000060448201526064016105c8565b6040517f33f2fa9f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528681166024830152858116604483015260648201859052608482018490528216906333f2fa9f9060a401600060405180830381600087803b15801561279957600080fd5b505af11580156127ad573d6000803e3d6000fd5b50505050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526128959085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612eb7565b50505050565b8160006128a88883612e24565b60025490915073ffffffffffffffffffffffffffffffffffffffff16158015906128d157508015155b1561292a5760025461291d9073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116911683612fc3565b6129278183613b04565b91505b6005546040517ff4f635fa00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89811660048301526024820189905260448201879052600092839291169063f4f635fa906064016040805180830381865afa1580156129ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129cf9190613cd5565b909250905073ffffffffffffffffffffffffffffffffffffffff8216158015906129f857508015155b15612af457612a3e73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168383612fc3565b612a488185613b04565b93508173ffffffffffffffffffffffffffffffffffffffff16888a73ffffffffffffffffffffffffffffffffffffffff167f27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d7f000000000000000000000000000000000000000000000000000000000000000085604051612aeb92919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60405180910390a45b612afe8686613d03565b612b0a85612710613d03565b1015612b98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f5468652066656520697320746f6f206869676820666f72207468652073656c6c60448201527f657200000000000000000000000000000000000000000000000000000000000060648201526084016105c8565b6127ad73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168886612fc3565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040517f1901000000000000000000000000000000000000000000000000000000000000602082015260228101829052604281018790526000908190606201604051602081830303815290604052805190602001209050612cc78773ffffffffffffffffffffffffffffffffffffffff163b151590565b15612ddc57604080516020810187905280820186905260f888901b7fff000000000000000000000000000000000000000000000000000000000000001660608201528151604181830301815260618201928390527f1626ba7e0000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff891691631626ba7e91612d6b918591606501613da5565b602060405180830381865afa158015612d88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dac9190613dbe565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916631626ba7e60e01b14915050612e1a565b8673ffffffffffffffffffffffffffffffffffffffff16612dff82888888613019565b73ffffffffffffffffffffffffffffffffffffffff16149150505b9695505050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16639dd1cda66040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e969190613e00565b9050612710612ea58483613d03565b612eaf9190613e19565b949350505050565b6000612f19826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166132259092919063ffffffff16565b8051909150156123295780806020019051810190612f379190613cb8565b612329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105c8565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526123299084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401612813565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156130a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f20496e76616c6964207320706172616d6574657200000000000000000000000060448201526064016105c8565b8360ff16601b14806130ba57508360ff16601c145b613120576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f496e76616c6964207620706172616d657465720000000000000000000000000060448201526064016105c8565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015613174573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661321c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f20496e76616c6964207369676e6572000000000000000000000000000000000060448201526064016105c8565b95945050505050565b6060613234848460008561323e565b90505b9392505050565b6060824710156132d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105c8565b73ffffffffffffffffffffffffffffffffffffffff85163b61334e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105c8565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516133779190613e54565b60006040518083038185875af1925050503d80600081146133b4576040519150601f19603f3d011682016040523d82523d6000602084013e6133b9565b606091505b50915091506133c98282866133d4565b979650505050505050565b606083156133e3575081613237565b8251156133f35782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c89190613e70565b73ffffffffffffffffffffffffffffffffffffffff81168114611b2557600080fd5b803561345481613427565b919050565b60006020828403121561346b57600080fd5b813561323781613427565b6000806040838503121561348957600080fd5b823561349481613427565b946020939093013593505050565b600080604083850312156134b557600080fd5b823567ffffffffffffffff808211156134cd57600080fd5b9084019060c082870312156134e157600080fd5b909250602084013590808211156134f757600080fd5b508301610200818603121561350b57600080fd5b809150509250929050565b6000806020838503121561352957600080fd5b823567ffffffffffffffff8082111561354157600080fd5b818501915085601f83011261355557600080fd5b81358181111561356457600080fd5b8660208260051b850101111561357957600080fd5b60209290920196919550909350505050565b60006020828403121561359d57600080fd5b5035919050565b8015158114611b2557600080fd5b8035613454816135a4565b6000602082840312156135cf57600080fd5b8135613237816135a4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610200810167ffffffffffffffff8111828210171561362d5761362d6135da565b60405290565b600082601f83011261364457600080fd5b813567ffffffffffffffff8082111561365f5761365f6135da565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156136a5576136a56135da565b816040528381528660208588010111156136be57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461345457600080fd5b6000610200823603121561370257600080fd5b61370a613609565b613713836135b2565b815261372160208401613449565b602082015261373260408401613449565b6040820152606083013560608201526080830135608082015260a083013560a082015261376160c08401613449565b60c082015261377260e08401613449565b60e082015261010083810135908201526101208084013590820152610140808401359082015261016080840135908201526101808084013567ffffffffffffffff8111156137bf57600080fd5b6137cb36828701613633565b8284015250506101a06137df8185016136de565b908201526101c083810135908201526101e092830135928101929092525090565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261383557600080fd5b830160208101925035905067ffffffffffffffff81111561385557600080fd5b80360382131561386457600080fd5b9250929050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60408152600061010084356138c8816135a4565b1515604084015260208501356138dd81613427565b73ffffffffffffffffffffffffffffffffffffffff811660608501525060408501356080840152606085013560a0840152608085013560c084015261392560a0860186613800565b60c060e0860152613939838601828461386b565b915050838103602085015261020061395a82613954886135b2565b15159052565b61396660208701613449565b73ffffffffffffffffffffffffffffffffffffffff16602083015261398d60408701613449565b73ffffffffffffffffffffffffffffffffffffffff8116604084015250606086013560608301526080860135608083015260a086013560a08301526139d460c08701613449565b73ffffffffffffffffffffffffffffffffffffffff1660c08301526139fb60e08701613449565b73ffffffffffffffffffffffffffffffffffffffff1660e0830152828601359282019290925261012080860135908201526101408086013590820152610160808601359082015261018091613a5283870187613800565b8285850152613a64838501828461386b565b94505050506101a0613a778187016136de565b60ff16908201526101c085810135908201526101e094850135940193909352509092915050565b600080600060608486031215613ab357600080fd5b8351613abe816135a4565b602085015160409095015190969495509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561055a5761055a613ad5565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613b7757613b77613ad5565b5060010190565b6020815281602082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613bb757600080fd5b8260051b80856040850137919091016040019392505050565b8082018082111561055a5761055a613ad5565b8e81528d1515602082015273ffffffffffffffffffffffffffffffffffffffff8d811660408301528c1660608201526101c081018b60808301528a60a08301528960c0830152613c4b60e083018a73ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff88166101008301526101208201969096526101408101949094526101608401929092526101808301526101a0909101529998505050505050505050565b600060208284031215613caf57600080fd5b613237826136de565b600060208284031215613cca57600080fd5b8151613237816135a4565b60008060408385031215613ce857600080fd5b8251613cf381613427565b6020939093015192949293505050565b808202811582820484141761055a5761055a613ad5565b600060208284031215613d2c57600080fd5b815161323781613427565b60005b83811015613d52578181015183820152602001613d3a565b50506000910152565b60008151808452613d73816020860160208601613d37565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8281526040602082015260006132346040830184613d5b565b600060208284031215613dd057600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461323757600080fd5b600060208284031215613e1257600080fd5b5051919050565b600082613e4f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008251613e66818460208701613d37565b9190910192915050565b6020815260006132376020830184613d5b56fea26469706673582212203e3f069888d19a53f22370805c756b9a209e773dd85833c0bde3d962ae95ed3564736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4082 CODESIZE SUB DUP1 PUSH3 0x4082 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x10C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH3 0x44 CALLER PUSH3 0x9D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP6 DUP8 AND SWAP6 DUP3 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP4 DUP7 AND SWAP4 DUP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP4 AND PUSH1 0x80 MSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x17C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x130 DUP7 PUSH3 0xEF JUMP JUMPDEST SWAP5 POP PUSH3 0x140 PUSH1 0x20 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP4 POP PUSH3 0x150 PUSH1 0x40 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP3 POP PUSH3 0x160 PUSH1 0x60 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP2 POP PUSH3 0x170 PUSH1 0x80 DUP8 ADD PUSH3 0xEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3EB9 PUSH3 0x1C9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x3EC ADD MSTORE DUP2 DUP2 PUSH2 0xB52 ADD MSTORE DUP2 DUP2 PUSH2 0xCDA ADD MSTORE DUP2 DUP2 PUSH2 0xD76 ADD MSTORE DUP2 DUP2 PUSH2 0x28F4 ADD MSTORE DUP2 DUP2 PUSH2 0x2A17 ADD MSTORE DUP2 DUP2 PUSH2 0x2A9C ADD MSTORE PUSH2 0x2BB2 ADD MSTORE PUSH2 0x3EB9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64DF049E GT PUSH2 0xCB JUMPI DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD4FF41DC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD4FF41DC EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xF75FF53F EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xC5498769 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xCBD2EC65 EQ PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87E4401F GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x87E4401F EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x9E53A69A EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64DF049E EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483ABB9F GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x5CE052D7 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x5CE052D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x5E14F68E EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x63521DEF EQ PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483ABB9F EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x509A1A41 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31E27E27 GT PUSH2 0x153 JUMPI DUP1 PUSH4 0x31E27E27 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4266581E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x45EA7231 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF747D74 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1DF47F80 EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x3476 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0xFCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x10BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1522 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3516 JUMP JUMPDEST PUSH2 0x1536 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x358B JUMP JUMPDEST PUSH2 0x180B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x197D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1A71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8CFFB07FAA2874440346743BDC0A86B06C3335CC47DC49B327D10E77B73CEB10 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x5E3 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x35BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F9 JUMPI POP PUSH2 0x5F7 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x35BD JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722041626F7574204F72646572205369646500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x66F PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 PUSH2 0x711 DUP4 PUSH2 0x36EF JUMP JUMPDEST PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP PUSH2 0x722 DUP3 DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x736 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x770 SWAP3 SWAP2 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x78D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x3A9E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x834 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8EF PUSH2 0x8AC PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x8BC PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST DUP5 PUSH2 0x8CE PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST CALLER PUSH2 0x8DF PUSH1 0x40 DUP13 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x3459 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP13 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x232E JUMP JUMPDEST PUSH2 0x929 PUSH2 0x902 PUSH1 0x60 DUP8 ADD PUSH1 0x40 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x912 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x922 PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x25FE JUMP JUMPDEST PUSH2 0x939 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95F PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x985 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95FB6205E23FF6BDA16A2D1DBA56B9AD7C783F67C96FA149785052F47696F2BE DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x9D2 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x9E2 PUSH1 0x60 DUP14 ADD PUSH1 0x40 DUP15 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP5 DUP5 ADD MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE DUP12 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xABF PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x35BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI POP PUSH2 0xAD3 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x35BD JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722041626F7574204F72646572205369646500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH2 0xB83 PUSH2 0x100 DUP4 ADD PUSH1 0xE0 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656E6379206D75737420626520574554480000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0xC10 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD02 CALLER ADDRESS PUSH2 0xCC3 CALLVALUE PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x3B04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP3 SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0xD74 JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD EQ PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D73672E76616C756520697320746F6F20686967680000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xE04 DUP3 PUSH2 0x711 SWAP1 PUSH2 0x36EF JUMP JUMPDEST SWAP1 POP PUSH2 0xE10 DUP3 DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xE24 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x3A9E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0xF22 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8EF PUSH2 0xF9A PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0xFAA PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST DUP5 PUSH2 0xFBB PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP11 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x289B JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB4F5DB40DF3ACED29E88A4BABBC3B46E305E07D34098525D18B1497056E63838 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x113D PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x35BD JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1152 JUMPI POP PUSH2 0x1152 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x11B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722041626F7574204F72646572205369646500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126A PUSH2 0x711 DUP4 PUSH2 0x36EF JUMP JUMPDEST SWAP1 POP PUSH2 0x1276 DUP3 DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x128A PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A75FFEE DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C4 SWAP3 SWAP2 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x3A9E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x1388 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x1415 SWAP1 PUSH2 0x1404 SWAP1 PUSH1 0x60 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST CALLER PUSH2 0x922 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1479 PUSH2 0x1428 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST DUP5 PUSH2 0x144A PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x145A PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x40 DUP14 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x3459 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP14 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x232E JUMP JUMPDEST PUSH2 0x1489 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14AF PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14D5 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68CD251D4D267C6E2034FF0088B990352B97B2002C0476587D0C4DA889C11330 DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x9D2 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x152A PUSH2 0x1C1C JUMP JUMPDEST PUSH2 0x1534 PUSH1 0x0 PUSH2 0x2BD9 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x159D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420626520656D7074792043616E63656C206C6973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x15CA JUMPI PUSH2 0x15CA PUSH2 0x3B17 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E2063757272656E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1683 JUMPI PUSH2 0x1683 PUSH2 0x3B17 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x16BA SWAP1 PUSH2 0x3B46 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15A0 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA0AE5D80FE3763C880A3839FAB0294171A6F730D1F82C4CD5392C6F67B41732 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x170B SWAP3 SWAP2 SWAP1 PUSH2 0x3B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x171F PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x179C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x80E3874461EBBD918AC3E81DA0A92E5E51387D70F337237C9123E48D20E5A508 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x18A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E2063757272656E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18C6 SWAP1 PUSH3 0x7A120 PUSH2 0x3BD0 JUMP JUMPDEST DUP2 LT PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20746F6F206D616E79206F7264657273000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x1E7178D84F0B0825C65795CD62E7972809AD3AAC6917843AAEC596161B2C0A97 SWAP1 PUSH2 0x1972 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1985 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1A02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x36E2A376EABC3BC60CB88F29C288F53E36874A95A7F407330AB4F166B0905698 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1A79 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x1B25 DUP2 PUSH2 0x2BD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B30 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1BAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x205D78AB41AFE80BD6B6AAA5D7599D5300FF8690DA3AB1302C1B552F7BAF7D8C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH2 0x100 DUP12 ADD MLOAD PUSH2 0x120 DUP13 ADD MLOAD PUSH2 0x140 DUP14 ADD MLOAD PUSH2 0x160 DUP15 ADD MLOAD PUSH2 0x180 DUP16 ADD MLOAD DUP1 MLOAD SWAP1 DUP15 ADD KECCAK256 SWAP11 MLOAD PUSH1 0x0 SWAP15 PUSH2 0x1D27 SWAP15 PUSH32 0x40261ADE532FA1D2C7293DF30AAADB9B3C616FAE525A0B56D3D411C841A85028 SWAP15 SWAP2 SWAP14 SWAP2 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD PUSH2 0x3BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x1D58 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP7 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1DF4 JUMPI POP PUSH1 0x7 PUSH1 0x0 PUSH2 0x1DB0 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x100 ADD CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x1E5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F726465723A204D61746368696E67206F726465722065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6C PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204F72646572207369676E65722063616E6E6F7420626520746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x1FA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F7264657220616D6F756E742073686F756C64206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572207468616E20300000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E3445393F211D11D7F88D325BC26CE78976B4DECD39029FEB202D9B409FC3C5 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2080 DUP3 DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x205C SWAP2 SWAP1 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x206E PUSH2 0x1C0 DUP8 ADD PUSH2 0x1A0 DUP9 ADD PUSH2 0x3C9D JUMP JUMPDEST DUP7 PUSH2 0x1C0 ADD CALLDATALOAD DUP8 PUSH2 0x1E0 ADD CALLDATALOAD DUP7 PUSH2 0x2C50 JUMP JUMPDEST PUSH2 0x20E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572653A20496E76616C69640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43B938C5 PUSH2 0x2115 PUSH2 0x100 DUP7 ADD PUSH1 0xE0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x217E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A2 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH2 0x2208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2043757272656E63792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x999BA27C PUSH2 0x2236 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x229F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22C3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH2 0x2329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2053747261746567792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x233B DUP11 DUP4 PUSH2 0x2E24 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2364 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x239F JUMPI PUSH1 0x2 SLOAD PUSH2 0x2392 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND SWAP2 DUP10 SWAP2 AND DUP5 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x239C DUP2 DUP4 PUSH2 0x3B04 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF4F635FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2420 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2444 SWAP2 SWAP1 PUSH2 0x3CD5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x246D JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x252A JUMPI PUSH2 0x2494 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP10 DUP5 DUP5 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x249E DUP2 DUP6 PUSH2 0x3B04 JUMP JUMPDEST SWAP4 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D DUP13 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2521 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x2534 DUP7 DUP7 PUSH2 0x3D03 JUMP JUMPDEST PUSH2 0x2540 DUP6 PUSH2 0x2710 PUSH2 0x3D03 JUMP JUMPDEST LT ISZERO PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652066656520697320746F6F206869676820666F72207468652073656C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x25F0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP10 DUP10 DUP8 PUSH2 0x27B9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCC15949300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xCC159493 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x266F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2693 SWAP2 SWAP1 PUSH2 0x3D1A JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420666F756E74207472616E73666572206D616E6167657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x33F2FA9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0x33F2FA9F SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2895 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2EB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x28A8 DUP9 DUP4 PUSH2 0x2E24 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x28D1 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x292A JUMPI PUSH1 0x2 SLOAD PUSH2 0x291D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x2FC3 JUMP JUMPDEST PUSH2 0x2927 DUP2 DUP4 PUSH2 0x3B04 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF4F635FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29CF SWAP2 SWAP1 PUSH2 0x3CD5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x29F8 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2AF4 JUMPI PUSH2 0x2A3E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x2FC3 JUMP JUMPDEST PUSH2 0x2A48 DUP2 DUP6 PUSH2 0x3B04 JUMP JUMPDEST SWAP4 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2AEB SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x2AFE DUP7 DUP7 PUSH2 0x3D03 JUMP JUMPDEST PUSH2 0x2B0A DUP6 PUSH2 0x2710 PUSH2 0x3D03 JUMP JUMPDEST LT ISZERO PUSH2 0x2B98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652066656520697320746F6F206869676820666F72207468652073656C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x27AD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP9 DUP7 PUSH2 0x2FC3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2CC7 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2DDC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xF8 DUP9 SWAP1 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x41 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x61 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP2 PUSH4 0x1626BA7E SWAP2 PUSH2 0x2D6B SWAP2 DUP6 SWAP2 PUSH1 0x65 ADD PUSH2 0x3DA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DAC SWAP2 SWAP1 PUSH2 0x3DBE JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL EQ SWAP2 POP POP PUSH2 0x2E1A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DFF DUP3 DUP9 DUP9 DUP9 PUSH2 0x3019 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DD1CDA6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E96 SWAP2 SWAP1 PUSH2 0x3E00 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH2 0x2EA5 DUP5 DUP4 PUSH2 0x3D03 JUMP JUMPDEST PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x3E19 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F19 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3225 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2329 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2F37 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH2 0x2329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2329 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x30A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20496E76616C6964207320706172616D65746572000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x30BA JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x3120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207620706172616D6574657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3174 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x321C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20496E76616C6964207369676E65720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3234 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x323E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x32D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x334E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3377 SWAP2 SWAP1 PUSH2 0x3E54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x33B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x33B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x33C9 DUP3 DUP3 DUP7 PUSH2 0x33D4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x33E3 JUMPI POP DUP2 PUSH2 0x3237 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x33F3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x3E70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3454 DUP2 PUSH2 0x3427 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x346B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3237 DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3494 DUP2 PUSH2 0x3427 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x34CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x34E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x34F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x350B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3454 DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3237 DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x362D JUMPI PUSH2 0x362D PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x365F JUMPI PUSH2 0x365F PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x36A5 JUMPI PUSH2 0x36A5 PUSH2 0x35DA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x36BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x3702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x370A PUSH2 0x3609 JUMP JUMPDEST PUSH2 0x3713 DUP4 PUSH2 0x35B2 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3721 PUSH1 0x20 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3732 PUSH1 0x40 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x3761 PUSH1 0xC0 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x3772 PUSH1 0xE0 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37CB CALLDATASIZE DUP3 DUP8 ADD PUSH2 0x3633 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1A0 PUSH2 0x37DF DUP2 DUP6 ADD PUSH2 0x36DE JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x3864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x100 DUP5 CALLDATALOAD PUSH2 0x38C8 DUP2 PUSH2 0x35A4 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x38DD DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3925 PUSH1 0xA0 DUP7 ADD DUP7 PUSH2 0x3800 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x3939 DUP4 DUP7 ADD DUP3 DUP5 PUSH2 0x386B JUMP JUMPDEST SWAP2 POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x200 PUSH2 0x395A DUP3 PUSH2 0x3954 DUP9 PUSH2 0x35B2 JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x3966 PUSH1 0x20 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x398D PUSH1 0x40 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP7 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x39D4 PUSH1 0xC0 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x39FB PUSH1 0xE0 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP4 ADD MSTORE DUP3 DUP7 ADD CALLDATALOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x120 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 SWAP2 PUSH2 0x3A52 DUP4 DUP8 ADD DUP8 PUSH2 0x3800 JUMP JUMPDEST DUP3 DUP6 DUP6 ADD MSTORE PUSH2 0x3A64 DUP4 DUP6 ADD DUP3 DUP5 PUSH2 0x386B JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1A0 PUSH2 0x3A77 DUP2 DUP8 ADD PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP5 DUP6 ADD CALLDATALOAD SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3AB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x3ABE DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x3AD5 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3B77 JUMPI PUSH2 0x3B77 PUSH2 0x3AD5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x3BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x3AD5 JUMP JUMPDEST DUP15 DUP2 MSTORE DUP14 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3C4B PUSH1 0xE0 DUP4 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x140 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH2 0x160 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3237 DUP3 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3237 DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x3CF3 DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x3AD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3237 DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D52 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3D3A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3D73 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3D37 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3234 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D5B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x3237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3E4F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3E66 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3D37 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3237 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D5B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY EXTCODEHASH MOD SWAP9 DUP9 0xD1 SWAP11 MSTORE8 CALLCODE 0x23 PUSH17 0x805C756B9A209E773DD85833C0BDE3D962 0xAE SWAP6 0xED CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "995:22312:8:-:0;;;3921:572;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:2;1806:7;:22;936:32:0;719:10:7;936:18:0;:32::i;:::-;4229:15:8;:54;;-1:-1:-1;;;;;4229:54:8;;;-1:-1:-1;;;;;;4229:54:8;;;;;;;4293:16;:50;;;;;;;;;;;;;;;4353:17;:57;;;;;;;;;;;;;;;4420:12;;;;4442:20;:44;;;;;;;;;;;995:22312;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:177:19:-;93:13;;-1:-1:-1;;;;;135:31:19;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:550::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;690:50;735:3;724:9;720:19;690:50;:::i;:::-;680:60;;196:550;;;;;;;;:::o;:::-;995:22312:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateProtocolFee_1929": {
									"entryPoint": 11812,
									"id": 1929,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_560": {
									"entryPoint": 11959,
									"id": 560,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 7196,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferFeesAndFundsWithWETH_1862": {
									"entryPoint": 10395,
									"id": 1862,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_transferFeesAndFunds_1740": {
									"entryPoint": 9006,
									"id": 1740,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@_transferNonFungibleToken_1904": {
									"entryPoint": 9726,
									"id": 1904,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 11225,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOrder_2031": {
									"entryPoint": 7492,
									"id": 2031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancelAllOrdersForSender_1541": {
									"entryPoint": 6155,
									"id": 1541,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelMultipleMakerOrders_1598": {
									"entryPoint": 5430,
									"id": 1598,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@currencyManager_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@executionManager_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_720": {
									"entryPoint": 12862,
									"id": 720,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_650": {
									"entryPoint": 12837,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@hash_2463": {
									"entryPoint": 7325,
									"id": 2463,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_579": {
									"entryPoint": null,
									"id": 579,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isUserOrderNonceExecutedOrCancelled_1614": {
									"entryPoint": 1317,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@matchSellerOrdersWETH_1252": {
									"entryPoint": 2625,
									"id": 1252,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@matchSellerOrders_1376": {
									"entryPoint": 1376,
									"id": 1376,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@matchesBuyerOrder_1500": {
									"entryPoint": 4287,
									"id": 1500,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@protocolFeeRecipient_962": {
									"entryPoint": null,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recover_2527": {
									"entryPoint": 12313,
									"id": 2527,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 5410,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyFeeManager_971": {
									"entryPoint": null,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_338": {
									"entryPoint": 10169,
									"id": 338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_312": {
									"entryPoint": 12227,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 6769,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferSelectorNFT_974": {
									"entryPoint": null,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCurrencyManager_2059": {
									"entryPoint": 4043,
									"id": 2059,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateExecutionManager_2087": {
									"entryPoint": 6525,
									"id": 2087,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateProtocolFeeRecipient_2103": {
									"entryPoint": 1198,
									"id": 2103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRoyaltyFeeManager_2131": {
									"entryPoint": 5911,
									"id": 2131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTransferSelectorNFT_2159": {
									"entryPoint": 6952,
									"id": 2159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userMinOrderNonce_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_855": {
									"entryPoint": 13268,
									"id": 855,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verify_2587": {
									"entryPoint": 11344,
									"id": 2587,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 13385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 13746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 13875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 13401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 15642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 13430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 15573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 13590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 13757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 15544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256t_uint256_fromMemory": {
									"entryPoint": 15006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 15806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_TakerOrder_$2419_calldata_ptrt_struct$_MakerOrder_$2406_calldata_ptr": {
									"entryPoint": 13474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 13707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 15872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 15517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 14046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bytes": {
									"entryPoint": 15707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 14443,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 15956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 15230,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed": {
									"entryPoint": 15331,
									"id": null,
									"parameterSlots": 15,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 15781,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheCurrencyManager_$2257__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheExManager_$2294__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheRoyaltyManager_$2310__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TheTransferSelector_$2368__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1_t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1_t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_TakerOrder_$2419_calldata_ptr_t_struct$_MakerOrder_$2406_calldata_ptr__to_t_struct$_TakerOrder_$2419_memory_ptr_t_struct$_MakerOrder_$2406_memory_ptr__fromStack_reversed": {
									"entryPoint": 14516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint8": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_memory": {
									"entryPoint": 13833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"calldata_access_bytes_calldata": {
									"entryPoint": 14336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 15312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 15897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 15619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 15108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"convert_t_struct$_MakerOrder_$2406_calldata_ptr_to_t_struct$_MakerOrder_$2406_memory_ptr": {
									"entryPoint": 14063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 15671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 15174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 15061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 15127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 13786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 13351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 13732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31750:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "142:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "152:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "164:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "175:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "160:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "152:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "194:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "209:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "217:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "205:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "205:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheCurrencyManager_$2257__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "111:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "122:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "133:4:19",
														"type": ""
													}
												],
												"src": "14:253:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:109:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "404:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "413:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "416:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "406:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "406:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "406:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "340:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "351:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "358:42:19",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "347:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "347:54:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "337:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "337:65:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "330:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:73:19"
															},
															"nodeType": "YulIf",
															"src": "327:93:19"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "306:5:19",
														"type": ""
													}
												],
												"src": "272:154:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:85:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "490:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "512:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "499:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "499:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "490:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "553:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "528:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "528:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "528:31:19"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "459:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "470:5:19",
														"type": ""
													}
												],
												"src": "431:134:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "640:177:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "686:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "695:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "698:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "688:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "688:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "688:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "661:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "670:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "657:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "657:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "682:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "653:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:32:19"
															},
															"nodeType": "YulIf",
															"src": "650:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "711:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "737:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "724:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "715:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "781:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "756:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "756:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "796:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "806:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "606:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "617:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "629:6:19",
														"type": ""
													}
												],
												"src": "570:247:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "909:228:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "955:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "964:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "967:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "930:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "939:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:32:19"
															},
															"nodeType": "YulIf",
															"src": "919:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1006:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "993:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "984:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1050:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1025:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1065:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1075:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1089:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1116:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1127:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1099:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:32:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "867:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "878:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "890:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "898:6:19",
														"type": ""
													}
												],
												"src": "822:315:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1219:5:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1212:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1212:13:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1205:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:34:19"
														}
													]
												},
												"name": "abi_encode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1167:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1174:3:19",
														"type": ""
													}
												],
												"src": "1142:91:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:92:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1343:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1355:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1366:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1343:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1385:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1410:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1403:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1403:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1396:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1378:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1378:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1378:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1302:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1313:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1324:4:19",
														"type": ""
													}
												],
												"src": "1238:187:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:76:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1541:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1541:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1583:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1594:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1576:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1500:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1511:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1522:4:19",
														"type": ""
													}
												],
												"src": "1430:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1759:532:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1805:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1814:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1817:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1807:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1807:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1807:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1780:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1789:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1776:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:32:19"
															},
															"nodeType": "YulIf",
															"src": "1769:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1830:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1857:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1844:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1844:23:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1834:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1876:28:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1886:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1880:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1931:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1933:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1933:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1919:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1927:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1916:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:14:19"
															},
															"nodeType": "YulIf",
															"src": "1913:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1956:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1970:9:19"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1981:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1966:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:22:19"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1960:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2027:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2036:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2039:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2029:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2029:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2029:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2008:7:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2017:2:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2004:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:3:19",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:26:19"
															},
															"nodeType": "YulIf",
															"src": "1997:46:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2052:12:19",
															"value": {
																"name": "_2",
																"nodeType": "YulIdentifier",
																"src": "2062:2:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2073:48:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2106:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2117:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2102:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2089:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:32:19"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2077:8:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2150:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2159:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2162:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2152:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2152:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2152:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2136:8:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2146:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2133:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:16:19"
															},
															"nodeType": "YulIf",
															"src": "2130:36:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2175:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2189:9:19"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2200:8:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2185:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2185:24:19"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2179:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2248:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2257:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2260:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2250:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2250:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2238:2:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2243:3:19",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:26:19"
															},
															"nodeType": "YulIf",
															"src": "2218:46:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2273:12:19",
															"value": {
																"name": "_3",
																"nodeType": "YulIdentifier",
																"src": "2283:2:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_TakerOrder_$2419_calldata_ptrt_struct$_MakerOrder_$2406_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1717:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1728:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1740:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1748:6:19",
														"type": ""
													}
												],
												"src": "1612:679:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2418:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2428:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2440:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2436:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2436:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2428:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2470:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2485:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2493:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2463:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2463:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheExManager_$2294__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2387:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2398:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2409:4:19",
														"type": ""
													}
												],
												"src": "2296:247:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2677:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2687:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2699:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2687:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2752:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2722:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheTransferSelector_$2368__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2646:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2657:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2668:4:19",
														"type": ""
													}
												],
												"src": "2548:254:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2851:83:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2868:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2877:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2884:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2873:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2873:54:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:67:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2861:67:19"
														}
													]
												},
												"name": "abi_encode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2835:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2842:3:19",
														"type": ""
													}
												],
												"src": "2807:127:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3040:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3050:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3062:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3073:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3058:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3050:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3107:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3115:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3085:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3085:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3009:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3020:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3031:4:19",
														"type": ""
													}
												],
												"src": "2939:226:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3297:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3307:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3319:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3330:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3315:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3307:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3349:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3364:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3372:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3360:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TheRoyaltyManager_$2310__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3266:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3277:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3288:4:19",
														"type": ""
													}
												],
												"src": "3170:252:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3532:510:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3578:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3590:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3580:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3580:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3580:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3562:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3574:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:32:19"
															},
															"nodeType": "YulIf",
															"src": "3542:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3603:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3630:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3617:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:23:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3607:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3649:28:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3659:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3653:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3704:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3713:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3716:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3706:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3706:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3706:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3692:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3700:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3689:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3689:14:19"
															},
															"nodeType": "YulIf",
															"src": "3686:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3729:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3743:9:19"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3754:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3739:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3739:22:19"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3733:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3809:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3818:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3821:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3811:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3811:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3811:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3788:2:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3792:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3784:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3784:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3799:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3780:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3780:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3773:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:35:19"
															},
															"nodeType": "YulIf",
															"src": "3770:55:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3834:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3861:2:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3848:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3848:16:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3838:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3891:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3900:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3903:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3893:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3893:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3879:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3887:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3876:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3876:14:19"
															},
															"nodeType": "YulIf",
															"src": "3873:34:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3965:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3977:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3967:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3967:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3967:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3930:2:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3938:1:19",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3941:6:19"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3934:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3934:14:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3926:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3926:23:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3951:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3922:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:32:19"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3956:7:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3919:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:45:19"
															},
															"nodeType": "YulIf",
															"src": "3916:65:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3990:21:19",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4004:2:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4000:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:11:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3990:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4020:16:19",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "4030:6:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3490:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3501:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3513:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3521:6:19",
														"type": ""
													}
												],
												"src": "3427:615:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4117:110:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4163:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4172:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4175:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4165:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4165:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4165:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:32:19"
															},
															"nodeType": "YulIf",
															"src": "4127:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4188:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4211:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4198:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4188:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4083:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4094:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4106:6:19",
														"type": ""
													}
												],
												"src": "4047:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4406:181:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4423:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4434:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4416:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4416:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4416:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4457:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4453:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4453:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4446:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4446:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4496:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4507:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4492:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4492:18:19"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4512:33:19",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4485:61:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4485:61:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4383:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4397:4:19",
														"type": ""
													}
												],
												"src": "4232:355:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4634:76:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4688:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4697:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4700:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4690:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4690:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4657:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4678:5:19"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4671:6:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4671:13:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4664:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4664:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4654:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4654:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:40:19"
															},
															"nodeType": "YulIf",
															"src": "4644:60:19"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4623:5:19",
														"type": ""
													}
												],
												"src": "4592:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4761:82:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4771:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4793:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4780:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4780:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4771:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4831:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4809:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4809:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4809:28:19"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4740:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4751:5:19",
														"type": ""
													}
												],
												"src": "4715:128:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4915:174:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4961:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4970:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4963:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4963:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4963:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4936:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4945:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4932:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4932:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4928:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4928:32:19"
															},
															"nodeType": "YulIf",
															"src": "4925:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4986:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5012:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4999:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4990:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5031:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5031:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5031:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5068:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5078:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4881:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4892:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:19",
														"type": ""
													}
												],
												"src": "4848:241:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5268:172:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5285:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5278:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5278:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5278:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5319:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5330:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5315:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:2:19",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5369:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5354:18:19"
																	},
																	{
																		"hexValue": "4572726f722041626f7574204f726465722053696465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5374:24:19",
																		"type": "",
																		"value": "Error About Order Side"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5347:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5347:52:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5347:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5408:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5420:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5431:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5416:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5408:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5245:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5259:4:19",
														"type": ""
													}
												],
												"src": "5094:346:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5619:174:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5636:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5629:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5681:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5666:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5686:2:19",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5659:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5659:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5659:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5709:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5720:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5705:18:19"
																	},
																	{
																		"hexValue": "4f72646572206d757374206265207468652073656e646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5725:26:19",
																		"type": "",
																		"value": "Order must be the sender"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:54:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5761:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5773:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5784:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5769:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5761:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5596:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5610:4:19",
														"type": ""
													}
												],
												"src": "5445:348:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5830:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5847:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5850:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5840:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5840:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5947:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5937:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5937:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5937:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5971:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5961:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5961:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5798:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6028:209:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6038:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6054:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6048:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6066:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6088:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6096:6:19",
																		"type": "",
																		"value": "0x0200"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6084:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:19:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6070:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6178:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6180:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6180:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6180:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6121:10:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6133:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6118:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6118:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6157:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6169:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6154:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6154:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6115:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:62:19"
															},
															"nodeType": "YulIf",
															"src": "6112:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6216:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6220:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6209:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6209:22:19"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6017:6:19",
														"type": ""
													}
												],
												"src": "5987:250:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6294:725:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6343:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6352:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6355:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6345:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6345:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6345:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6322:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6330:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6318:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6318:17:19"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6337:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6314:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6314:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:35:19"
															},
															"nodeType": "YulIf",
															"src": "6304:55:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6368:30:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6391:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6378:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6378:20:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6372:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6407:28:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6417:18:19",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6411:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6458:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6460:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6460:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6460:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6450:2:19"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6454:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6447:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6447:10:19"
															},
															"nodeType": "YulIf",
															"src": "6444:36:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6489:76:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6499:66:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6493:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6574:23:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6594:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6588:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:9:19"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6578:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6606:71:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6628:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "6652:2:19"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6656:4:19",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6648:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6648:13:19"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "6663:2:19"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "6644:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6644:22:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6668:2:19",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6640:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6640:31:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "6673:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6636:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6636:40:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6624:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:53:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6610:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6736:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6738:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6738:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6738:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6695:10:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6707:2:19"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6692:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6692:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6715:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6727:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6712:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6689:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6689:46:19"
															},
															"nodeType": "YulIf",
															"src": "6686:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6774:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6778:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6767:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6767:22:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6813:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:18:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6798:18:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6864:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6873:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6876:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6866:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6866:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6866:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6839:6:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6847:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6835:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6835:15:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6852:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6831:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6831:26:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6859:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6828:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:35:19"
															},
															"nodeType": "YulIf",
															"src": "6825:55:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6906:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6914:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6902:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6925:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6933:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6921:17:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6940:2:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6889:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6889:54:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "6967:6:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6975:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6963:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6963:15:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6980:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6959:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6959:26:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6952:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6952:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6952:37:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6998:15:19",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "7007:6:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6998:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6268:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6276:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6284:5:19",
														"type": ""
													}
												],
												"src": "6242:777:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7071:109:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7081:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7103:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7090:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7081:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7158:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7167:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7170:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7160:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7160:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7160:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7132:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7143:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7150:4:19",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7139:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7139:16:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7129:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7122:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:35:19"
															},
															"nodeType": "YulIf",
															"src": "7119:55:19"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7050:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7061:5:19",
														"type": ""
													}
												],
												"src": "7024:156:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7307:1484:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7360:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7369:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7372:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7362:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7362:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7362:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "7328:12:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7328:14:19"
																			},
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7344:5:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7324:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7324:26:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:6:19",
																		"type": "",
																		"value": "0x0200"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7320:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7320:39:19"
															},
															"nodeType": "YulIf",
															"src": "7317:59:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7385:32:19",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7400:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7400:17:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "7389:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "7433:7:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7458:5:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7442:15:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7442:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7426:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7426:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7426:39:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7485:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7494:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7481:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7481:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7522:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7529:2:19",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7518:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7518:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7499:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7499:34:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:60:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7554:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7563:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7550:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7550:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7591:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7598:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7587:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7587:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7568:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7568:34:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7543:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7543:60:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7543:60:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7623:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7632:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7619:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7619:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7654:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7661:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7650:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7650:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7637:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7637:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7612:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7612:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7612:54:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7686:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7695:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7682:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7682:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7718:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7725:3:19",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7714:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7714:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7701:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7701:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7675:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7675:56:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7751:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7760:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7747:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7747:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7783:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7790:3:19",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7779:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7779:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7766:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7766:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7740:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7740:56:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7816:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7825:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7812:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7812:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7854:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7861:3:19",
																						"type": "",
																						"value": "192"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7850:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7850:15:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7831:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7831:35:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7805:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7805:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7805:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7887:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7883:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7883:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7925:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7932:3:19",
																						"type": "",
																						"value": "224"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7921:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7921:15:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address",
																			"nodeType": "YulIdentifier",
																			"src": "7902:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7902:35:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7876:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7876:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7876:62:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7947:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7957:3:19",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7951:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "7980:7:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7989:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7976:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7976:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8011:5:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "8018:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8007:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8007:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7994:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7994:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7969:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7969:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7969:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8032:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8042:3:19",
																"type": "",
																"value": "288"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "8036:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8065:7:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "8074:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8096:5:19"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "8103:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8092:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8092:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8079:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8054:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8054:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8054:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8117:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8127:3:19",
																"type": "",
																"value": "320"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "8121:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8150:7:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "8159:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8146:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8146:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8181:5:19"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "8188:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8177:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8177:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8164:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8164:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8139:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8139:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8139:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8202:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8212:3:19",
																"type": "",
																"value": "352"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "8206:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8235:7:19"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "8244:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8231:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8266:5:19"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "8273:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8262:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8262:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8249:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8249:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8224:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8224:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8224:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8287:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8297:3:19",
																"type": "",
																"value": "384"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "8291:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8309:42:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8340:5:19"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "8347:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8336:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8336:14:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8323:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8323:28:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8313:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8394:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8403:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8406:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8396:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8396:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8396:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8366:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8374:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8363:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8363:30:19"
															},
															"nodeType": "YulIf",
															"src": "8360:50:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8430:7:19"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "8439:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8426:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8426:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8465:5:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8472:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8461:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8461:18:19"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "8481:12:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8481:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "8444:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:52:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8419:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8419:78:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8419:78:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8506:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8516:3:19",
																"type": "",
																"value": "416"
															},
															"variables": [
																{
																	"name": "_6",
																	"nodeType": "YulTypedName",
																	"src": "8510:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8539:7:19"
																			},
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "8548:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8574:5:19"
																					},
																					{
																						"name": "_6",
																						"nodeType": "YulIdentifier",
																						"src": "8581:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8570:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8570:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "8553:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8553:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8528:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8528:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8528:58:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8595:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8605:3:19",
																"type": "",
																"value": "448"
															},
															"variables": [
																{
																	"name": "_7",
																	"nodeType": "YulTypedName",
																	"src": "8599:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8628:7:19"
																			},
																			{
																				"name": "_7",
																				"nodeType": "YulIdentifier",
																				"src": "8637:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8624:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8624:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8659:5:19"
																					},
																					{
																						"name": "_7",
																						"nodeType": "YulIdentifier",
																						"src": "8666:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8655:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8655:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8642:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8642:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8617:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8617:54:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8680:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8690:3:19",
																"type": "",
																"value": "480"
															},
															"variables": [
																{
																	"name": "_8",
																	"nodeType": "YulTypedName",
																	"src": "8684:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "8713:7:19"
																			},
																			{
																				"name": "_8",
																				"nodeType": "YulIdentifier",
																				"src": "8722:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8709:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8709:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8744:5:19"
																					},
																					{
																						"name": "_8",
																						"nodeType": "YulIdentifier",
																						"src": "8751:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8740:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8740:14:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8727:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8727:28:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8702:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8702:54:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8765:20:19",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "8778:7:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8765:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_struct$_MakerOrder_$2406_calldata_ptr_to_t_struct$_MakerOrder_$2406_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7283:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7293:9:19",
														"type": ""
													}
												],
												"src": "7185:1606:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8872:483:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8882:43:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8908:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:17:19"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "8886:18:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9073:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9082:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9085:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9075:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9075:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9075:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "8948:18:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "8976:12:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8976:14:19"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "8992:8:19"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "8972:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8972:29:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9003:66:19",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8968:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8968:102:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8944:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8944:127:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8937:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8937:135:19"
															},
															"nodeType": "YulIf",
															"src": "8934:155:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9098:48:19",
															"value": {
																"arguments": [
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "9117:18:19"
																	},
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "9137:8:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9113:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9113:33:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "9102:7:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9155:31:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "9178:7:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9165:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9165:21:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9155:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9195:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "9208:7:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9217:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9204:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9204:18:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9195:5:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9265:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9274:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9277:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9267:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9267:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9267:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9237:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9245:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9234:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9234:30:19"
															},
															"nodeType": "YulIf",
															"src": "9231:50:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9333:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9342:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9345:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9335:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9335:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9335:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9297:5:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "9308:12:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9308:14:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9324:6:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9304:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9304:27:19"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "9293:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9293:39:19"
															},
															"nodeType": "YulIf",
															"src": "9290:59:19"
														}
													]
												},
												"name": "calldata_access_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "8836:8:19",
														"type": ""
													},
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8846:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8854:5:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8861:6:19",
														"type": ""
													}
												],
												"src": "8796:559:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9426:259:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9443:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9448:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9436:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9436:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9436:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9481:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9486:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9477:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9477:14:19"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "9493:5:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9500:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "9464:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9464:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9464:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9531:3:19"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "9536:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9527:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9527:16:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9545:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9523:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9523:27:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9552:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9516:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9516:38:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9516:38:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9563:116:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9578:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "9591:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9599:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9587:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9587:15:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9604:66:19",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9583:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9583:88:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9574:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9574:98:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9674:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9570:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9570:109:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9563:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "9395:5:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9402:6:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9410:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9418:3:19",
														"type": ""
													}
												],
												"src": "9360:325:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9732:33:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9741:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9750:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9757:4:19",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9746:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9746:16:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9734:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9734:29:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9734:29:19"
														}
													]
												},
												"name": "abi_encode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9716:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9723:3:19",
														"type": ""
													}
												],
												"src": "9690:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10015:2552:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10032:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10043:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10025:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10025:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10025:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10055:13:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10065:3:19",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10059:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10077:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10103:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10090:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:20:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10081:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10141:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10119:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10119:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10119:28:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10167:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10178:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10163:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10163:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10197:5:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10190:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10190:13:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10183:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10183:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10156:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10156:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10156:49:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10214:46:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10246:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10254:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10242:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10242:17:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10229:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:31:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "10218:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "10294:7:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "10269:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10269:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10269:33:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10322:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10333:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10318:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10318:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "10342:7:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10351:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10338:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10338:56:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10311:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:84:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10311:84:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10415:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10426:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10411:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10411:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10449:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10457:2:19",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10445:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10445:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10432:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10432:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10404:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10482:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10493:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10478:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10478:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10516:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10524:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10512:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10512:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10499:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10499:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10471:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10471:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10471:58:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10549:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10560:4:19",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10545:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10545:20:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10584:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10592:3:19",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10580:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10580:16:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10567:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10567:30:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10538:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10538:60:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10538:60:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10607:90:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10672:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10684:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10692:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10680:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10680:16:19"
																	}
																],
																"functionName": {
																	"name": "calldata_access_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10641:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10641:56:19"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "10611:12:19",
																	"type": ""
																},
																{
																	"name": "memberValue1",
																	"nodeType": "YulTypedName",
																	"src": "10625:12:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10717:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10728:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10713:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10713:19:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10734:4:19",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10706:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10706:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10706:33:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10748:84:19",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "10785:12:19"
																	},
																	{
																		"name": "memberValue1",
																		"nodeType": "YulIdentifier",
																		"src": "10799:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10817:9:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10828:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10813:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10813:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10759:25:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10759:73:19"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "10752:3:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10852:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10863:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10848:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10848:20:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10874:3:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10879:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10870:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10870:19:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10841:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10841:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10841:49:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10899:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10909:6:19",
																"type": "",
																"value": "0x0200"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "10903:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10956:6:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10940:15:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10940:23:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10965:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10924:15:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10924:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10924:45:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10978:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11023:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11031:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11019:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11019:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11000:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11000:37:19"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "10982:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "11065:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11085:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11090:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11081:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11081:14:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11046:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11046:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11046:50:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11105:57:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11150:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11158:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11146:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11146:15:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11127:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11127:35:19"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "11109:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "11190:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11210:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11215:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:12:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11171:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11171:48:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11239:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11244:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11235:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11235:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11266:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11274:2:19",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11262:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11262:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11249:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11249:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11228:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11228:51:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11299:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11304:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11295:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11295:13:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11327:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11335:3:19",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11323:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11323:16:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11310:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11310:30:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11288:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11288:53:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11288:53:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11361:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11366:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11357:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11357:13:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11389:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11397:3:19",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11385:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11385:16:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11372:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11372:30:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11350:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11350:53:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11350:53:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11412:59:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11457:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11465:4:19",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11453:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11453:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11434:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11434:37:19"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "11416:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "11499:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11519:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11524:4:19",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11515:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11515:14:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11480:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11480:50:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11539:58:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11584:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11592:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11580:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11580:16:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11561:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11561:36:19"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "11543:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "11625:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11645:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11650:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11641:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11641:13:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11606:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11606:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11606:49:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11675:3:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11680:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11671:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11671:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11702:6:19"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "11710:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11698:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11698:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11685:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11685:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11664:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11664:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11664:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11724:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11734:6:19",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "11728:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11760:3:19"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11765:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11756:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11787:6:19"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "11795:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11783:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11783:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11770:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11770:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11749:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11749:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11749:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11809:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11819:6:19",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "11813:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11845:3:19"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "11850:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11872:6:19"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "11880:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11868:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11868:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11855:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11855:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11894:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11904:6:19",
																"type": "",
																"value": "0x0160"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "11898:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11930:3:19"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "11935:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11926:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11926:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "11957:6:19"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "11965:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11953:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11953:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11940:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11940:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11919:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11919:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11919:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11979:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11989:6:19",
																"type": "",
																"value": "0x0180"
															},
															"variables": [
																{
																	"name": "_6",
																	"nodeType": "YulTypedName",
																	"src": "11983:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12004:93:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12073:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12085:6:19"
																			},
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "12093:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12081:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12081:15:19"
																	}
																],
																"functionName": {
																	"name": "calldata_access_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "12042:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:55:19"
															},
															"variables": [
																{
																	"name": "memberValue0_5",
																	"nodeType": "YulTypedName",
																	"src": "12008:14:19",
																	"type": ""
																},
																{
																	"name": "memberValue1_1",
																	"nodeType": "YulTypedName",
																	"src": "12024:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12117:3:19"
																			},
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "12122:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12113:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12113:12:19"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "12127:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12106:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12106:24:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12106:24:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12139:85:19",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_5",
																		"nodeType": "YulIdentifier",
																		"src": "12179:14:19"
																	},
																	{
																		"name": "memberValue1_1",
																		"nodeType": "YulIdentifier",
																		"src": "12195:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12215:3:19"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "12220:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12211:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12211:12:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "12153:25:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12153:71:19"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12143:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12233:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12243:6:19",
																"type": "",
																"value": "0x01a0"
															},
															"variables": [
																{
																	"name": "_7",
																	"nodeType": "YulTypedName",
																	"src": "12237:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12258:55:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12301:6:19"
																			},
																			{
																				"name": "_7",
																				"nodeType": "YulIdentifier",
																				"src": "12309:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12297:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12297:15:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "12280:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12280:33:19"
															},
															"variables": [
																{
																	"name": "memberValue0_6",
																	"nodeType": "YulTypedName",
																	"src": "12262:14:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_6",
																		"nodeType": "YulIdentifier",
																		"src": "12339:14:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12359:3:19"
																			},
																			{
																				"name": "_7",
																				"nodeType": "YulIdentifier",
																				"src": "12364:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12355:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12355:12:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "12322:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12322:46:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12322:46:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12377:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12387:6:19",
																"type": "",
																"value": "0x01c0"
															},
															"variables": [
																{
																	"name": "_8",
																	"nodeType": "YulTypedName",
																	"src": "12381:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12413:3:19"
																			},
																			{
																				"name": "_8",
																				"nodeType": "YulIdentifier",
																				"src": "12418:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12409:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12409:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "12440:6:19"
																					},
																					{
																						"name": "_8",
																						"nodeType": "YulIdentifier",
																						"src": "12448:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12436:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12436:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12423:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12423:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12402:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12402:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12402:51:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12462:16:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12472:6:19",
																"type": "",
																"value": "0x01e0"
															},
															"variables": [
																{
																	"name": "_9",
																	"nodeType": "YulTypedName",
																	"src": "12466:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12498:3:19"
																			},
																			{
																				"name": "_9",
																				"nodeType": "YulIdentifier",
																				"src": "12503:2:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12494:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12494:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "12525:6:19"
																					},
																					{
																						"name": "_9",
																						"nodeType": "YulIdentifier",
																						"src": "12533:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12521:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12521:15:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12508:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12508:29:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12487:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12487:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12487:51:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12547:14:19",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "12555:6:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12547:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_TakerOrder_$2419_calldata_ptr_t_struct$_MakerOrder_$2406_calldata_ptr__to_t_struct$_TakerOrder_$2419_memory_ptr_t_struct$_MakerOrder_$2406_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9976:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9987:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9995:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10006:4:19",
														"type": ""
													}
												],
												"src": "9770:2797:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12684:255:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12730:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12739:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12742:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12732:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12732:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12732:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12705:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12714:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12701:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12701:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12726:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12697:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12697:32:19"
															},
															"nodeType": "YulIf",
															"src": "12694:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12755:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12774:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12768:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12768:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12759:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12815:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "12793:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12793:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12793:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12830:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12840:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12830:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12854:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12874:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12885:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12870:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12870:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12864:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12864:25:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "12854:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12898:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12918:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12929:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12914:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12914:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12908:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12908:25:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "12898:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12634:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12645:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12657:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12665:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12673:6:19",
														"type": ""
													}
												],
												"src": "12572:367:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13118:174:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13135:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13146:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13128:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13128:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13128:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13169:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13180:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13165:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13165:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13185:2:19",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13158:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13158:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13158:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13208:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13219:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13204:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13204:18:19"
																	},
																	{
																		"hexValue": "53747261746567792073686f756c642062652076616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13224:26:19",
																		"type": "",
																		"value": "Strategy should be valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13197:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13197:54:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13197:54:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13260:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13272:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13283:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13268:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13260:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13095:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13109:4:19",
														"type": ""
													}
												],
												"src": "12944:348:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13566:417:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13576:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13588:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13599:3:19",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13584:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13584:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13576:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13619:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13630:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13612:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13612:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13612:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13657:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13668:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13653:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13653:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13673:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13646:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13646:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13646:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13689:52:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13699:42:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13693:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13761:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13772:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13757:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13757:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "13781:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13789:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13777:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13777:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13750:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13750:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13750:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13813:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13824:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13809:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13809:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "13833:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13841:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13829:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13829:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13802:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13802:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13802:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13865:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13876:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13861:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13861:19:19"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13882:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13854:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13854:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13854:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13909:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13920:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13905:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13905:19:19"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "13926:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13898:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13898:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13898:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13953:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13964:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13949:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13949:19:19"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "13970:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13942:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13942:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13942:35:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13487:9:19",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "13498:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "13506:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13514:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13522:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13530:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13538:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13546:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13557:4:19",
														"type": ""
													}
												],
												"src": "13297:686:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14162:171:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14179:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14190:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14172:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14172:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14172:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14213:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14224:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14209:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14209:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14229:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14202:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14202:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14202:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14252:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14263:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14248:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14248:18:19"
																	},
																	{
																		"hexValue": "43757272656e6379206d7573742062652057455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14268:23:19",
																		"type": "",
																		"value": "Currency must be WETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14241:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14241:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14241:51:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14301:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14313:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14324:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14309:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14309:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14301:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14139:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14153:4:19",
														"type": ""
													}
												],
												"src": "13988:345:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14370:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14387:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14390:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14380:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14380:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14380:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14484:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14487:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14477:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14477:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14477:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14508:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14511:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14501:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14501:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14501:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14338:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14576:79:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14586:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14598:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14601:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14594:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14594:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14586:4:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14627:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14629:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14629:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14629:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14618:4:19"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14624:1:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14615:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14615:11:19"
															},
															"nodeType": "YulIf",
															"src": "14612:37:19"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14558:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14561:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14567:4:19",
														"type": ""
													}
												],
												"src": "14527:128:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14834:171:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14851:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14862:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14844:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14844:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14844:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14885:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14896:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14881:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14881:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14901:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14874:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14874:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14874:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14924:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14935:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14920:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14920:18:19"
																	},
																	{
																		"hexValue": "4d73672e76616c756520697320746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14940:23:19",
																		"type": "",
																		"value": "Msg.value is too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14913:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14913:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14913:51:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14973:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14985:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14996:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14981:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14981:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14973:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14811:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14825:4:19",
														"type": ""
													}
												],
												"src": "14660:345:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15184:181:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15201:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15212:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15194:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15194:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15235:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15246:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15231:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15231:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15251:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15224:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15224:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15224:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15274:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15285:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15270:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15270:18:19"
																	},
																	{
																		"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15290:33:19",
																		"type": "",
																		"value": "Cannot update to a null address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15263:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15263:61:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15263:61:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15333:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15345:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15356:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15341:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15341:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15333:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15161:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15175:4:19",
														"type": ""
													}
												],
												"src": "15010:355:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15544:177:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15561:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15572:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15554:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15554:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15554:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15595:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15606:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15591:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15591:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15611:2:19",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15584:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15584:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15584:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15634:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15645:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15630:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15630:18:19"
																	},
																	{
																		"hexValue": "43616e6e6f7420626520656d7074792043616e63656c206c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15650:29:19",
																		"type": "",
																		"value": "Cannot be empty Cancel list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15623:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15623:57:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15623:57:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15689:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15701:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15712:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15697:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15697:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15689:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15521:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15535:4:19",
														"type": ""
													}
												],
												"src": "15370:351:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15758:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15775:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15778:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15768:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15768:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15768:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15872:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15875:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15865:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15865:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15865:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15896:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15899:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15889:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15889:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15889:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15726:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16089:234:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16106:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16117:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16099:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16099:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16099:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16140:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16151:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16136:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16136:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16156:2:19",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16129:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16129:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16129:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16179:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16190:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16175:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16175:18:19"
																	},
																	{
																		"hexValue": "43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f77657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16195:34:19",
																		"type": "",
																		"value": "Cancel Order nonce cannot lower "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16168:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16168:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16168:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16250:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16261:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16246:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16246:18:19"
																	},
																	{
																		"hexValue": "7468616e2063757272656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16266:14:19",
																		"type": "",
																		"value": "than current"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16239:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16239:42:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16239:42:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16290:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16302:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16313:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16298:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16298:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16290:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16066:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16080:4:19",
														"type": ""
													}
												],
												"src": "15915:408:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16375:148:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16466:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16468:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16468:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16468:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16391:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16398:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16388:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16388:77:19"
															},
															"nodeType": "YulIf",
															"src": "16385:103:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16497:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16508:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16515:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16504:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16504:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16497:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16357:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16367:3:19",
														"type": ""
													}
												],
												"src": "16328:195:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16689:329:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16706:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16717:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16699:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16699:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16699:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16740:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16751:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16736:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16736:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16756:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16729:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16729:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16729:34:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16854:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16863:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16866:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16856:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16856:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16856:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16778:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16786:66:19",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16775:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16775:78:19"
															},
															"nodeType": "YulIf",
															"src": "16772:98:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16879:28:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16897:1:19",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16900:6:19"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16893:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16893:14:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16883:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16933:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16944:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16929:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16929:18:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16949:6:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16957:6:19"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "16916:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16916:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16916:48:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16973:39:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16989:9:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17000:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16985:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16985:22:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17009:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16981:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16981:31:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16973:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16650:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16661:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16669:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16680:4:19",
														"type": ""
													}
												],
												"src": "16528:490:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17071:77:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17081:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17092:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17095:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17088:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17088:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17081:3:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17120:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17122:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17122:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17122:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17112:1:19"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "17115:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17109:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17109:10:19"
															},
															"nodeType": "YulIf",
															"src": "17106:36:19"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17054:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17057:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17063:3:19",
														"type": ""
													}
												],
												"src": "17023:125:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17327:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17344:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17355:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17337:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17337:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17337:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17378:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17389:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17374:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17374:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17394:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17367:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17367:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17367:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17417:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17428:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17413:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17413:18:19"
																	},
																	{
																		"hexValue": "43616e6e6f742063616e63656c20746f6f206d616e79206f7264657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17433:31:19",
																		"type": "",
																		"value": "Cannot cancel too many orders"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17406:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17406:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17406:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17474:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17486:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17497:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17482:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17482:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17474:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17304:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17318:4:19",
														"type": ""
													}
												],
												"src": "17153:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17685:228:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17702:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17713:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17695:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17695:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17695:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17736:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17747:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17732:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17732:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17752:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17725:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17725:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17725:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17775:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17786:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17771:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17771:18:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17791:34:19",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17764:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17764:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17764:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17846:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17857:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17842:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17842:18:19"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17862:8:19",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17835:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17835:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17835:36:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17880:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17892:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17903:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17888:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17888:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17880:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17662:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17676:4:19",
														"type": ""
													}
												],
												"src": "17511:402:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18092:182:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18109:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18120:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18102:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18102:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18102:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18143:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18154:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18139:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18139:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18159:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18132:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18132:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18132:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18182:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18193:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18178:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18178:18:19"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18198:34:19",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18171:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18171:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18171:62:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18242:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18254:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18265:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18250:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18250:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18242:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18069:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18083:4:19",
														"type": ""
													}
												],
												"src": "17918:356:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18742:751:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18752:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18764:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18775:3:19",
																		"type": "",
																		"value": "448"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18760:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18760:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18752:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18795:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18806:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18788:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18788:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18788:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18833:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18844:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18829:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18829:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "18863:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18856:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18856:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18849:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18849:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18822:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18822:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18822:50:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18892:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18903:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18888:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18888:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "18912:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18920:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18908:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18908:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18881:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18881:83:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18881:83:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18992:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19004:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19015:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19000:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19000:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "18973:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18973:46:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18973:46:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19039:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19050:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19035:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19035:19:19"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "19056:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19028:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19028:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19028:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19083:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19094:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19079:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19079:19:19"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "19100:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19072:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19072:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19072:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19127:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19138:3:19",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19123:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19123:19:19"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "19144:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19116:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19116:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19116:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "19179:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19191:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19202:3:19",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19187:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19187:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "19160:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19160:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19160:47:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "19235:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19247:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19258:3:19",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19243:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19243:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nodeType": "YulIdentifier",
																	"src": "19216:18:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19216:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19216:47:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19283:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19294:3:19",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19279:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19279:19:19"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "19300:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19272:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19272:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19272:35:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19327:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19338:3:19",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19323:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19323:19:19"
																	},
																	{
																		"name": "value10",
																		"nodeType": "YulIdentifier",
																		"src": "19344:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19316:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19316:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19316:36:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19372:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19383:3:19",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19368:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19368:19:19"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "19389:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19361:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19361:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19361:36:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19417:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19428:3:19",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19413:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19413:19:19"
																	},
																	{
																		"name": "value12",
																		"nodeType": "YulIdentifier",
																		"src": "19434:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19406:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19406:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19406:36:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19462:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19473:3:19",
																				"type": "",
																				"value": "416"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19458:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19458:19:19"
																	},
																	{
																		"name": "value13",
																		"nodeType": "YulIdentifier",
																		"src": "19479:7:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19451:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19451:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19451:36:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18603:9:19",
														"type": ""
													},
													{
														"name": "value13",
														"nodeType": "YulTypedName",
														"src": "18614:7:19",
														"type": ""
													},
													{
														"name": "value12",
														"nodeType": "YulTypedName",
														"src": "18623:7:19",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "18632:7:19",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "18641:7:19",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "18650:6:19",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "18658:6:19",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "18666:6:19",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "18674:6:19",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "18682:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18690:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18698:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18706:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18714:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18722:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18733:4:19",
														"type": ""
													}
												],
												"src": "18279:1214:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19672:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19689:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19700:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19682:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19682:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19682:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19723:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19734:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19719:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19719:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19739:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19712:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19712:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19712:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19762:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19773:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19758:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19758:18:19"
																	},
																	{
																		"hexValue": "4f726465723a204d61746368696e67206f726465722065787069726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19778:31:19",
																		"type": "",
																		"value": "Order: Matching order expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19751:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19751:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19751:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19819:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19831:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19842:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19827:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19827:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19819:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19649:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19663:4:19",
														"type": ""
													}
												],
												"src": "19498:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20030:233:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20047:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20058:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20040:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20040:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20040:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20081:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20092:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20077:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20077:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20097:2:19",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20070:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20070:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20070:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20120:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20131:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20116:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20116:18:19"
																	},
																	{
																		"hexValue": "546865204f72646572207369676e65722063616e6e6f7420626520746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20136:34:19",
																		"type": "",
																		"value": "The Order signer cannot be the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20109:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20109:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20109:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20191:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20202:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20187:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20187:18:19"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20207:13:19",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20180:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20180:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20180:41:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20230:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20242:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20253:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20238:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20238:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20230:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20007:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20021:4:19",
														"type": ""
													}
												],
												"src": "19856:407:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20442:231:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20459:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20470:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20452:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20452:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20452:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20493:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20504:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20489:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20489:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20509:2:19",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20482:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20482:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20482:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20532:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20543:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20528:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20528:18:19"
																	},
																	{
																		"hexValue": "546865206f7264657220616d6f756e742073686f756c64206265206772656174",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20548:34:19",
																		"type": "",
																		"value": "The order amount should be great"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20521:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20521:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20521:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20603:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20614:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20599:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20599:18:19"
																	},
																	{
																		"hexValue": "6572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20619:11:19",
																		"type": "",
																		"value": "er than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20592:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20592:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20592:39:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20640:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20652:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20663:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20648:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "20648:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20640:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20419:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20433:4:19",
														"type": ""
													}
												],
												"src": "20268:405:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21143:299:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21153:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21165:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21176:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21161:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21161:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21153:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21196:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21207:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21189:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21189:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21189:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21234:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21245:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21230:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21230:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21250:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21223:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21223:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21223:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21277:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21288:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21273:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21273:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21293:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21266:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21266:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21266:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21320:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21331:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21316:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21316:18:19"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21336:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21309:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21309:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21309:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21363:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21374:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21359:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21359:19:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "21384:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21392:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "21380:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21380:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21352:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21352:84:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21352:84:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1_t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1_t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21080:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "21091:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21099:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21107:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21115:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21123:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21134:4:19",
														"type": ""
													}
												],
												"src": "20678:764:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21515:114:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21561:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21570:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21573:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21563:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21563:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21563:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21536:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21545:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21532:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21532:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21557:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21528:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21528:32:19"
															},
															"nodeType": "YulIf",
															"src": "21525:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21586:37:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21613:9:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "21596:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21596:27:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "21586:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21481:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21492:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21504:6:19",
														"type": ""
													}
												],
												"src": "21447:182:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21808:168:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21825:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21836:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21818:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21818:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21818:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21859:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21870:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21855:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21855:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21875:2:19",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21848:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21848:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21848:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21898:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21909:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21894:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21894:18:19"
																	},
																	{
																		"hexValue": "5369676e61747572653a20496e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21914:20:19",
																		"type": "",
																		"value": "Signature: Invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21887:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21887:48:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21887:48:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21944:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21956:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21967:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21952:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "21952:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21944:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21785:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21799:4:19",
														"type": ""
													}
												],
												"src": "21634:342:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22059:167:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22105:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22114:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22117:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22107:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22107:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22107:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22080:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22089:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22076:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22076:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22101:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "22072:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22072:32:19"
															},
															"nodeType": "YulIf",
															"src": "22069:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22130:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22149:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22143:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22143:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "22134:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22190:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "22168:21:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22168:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22168:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22205:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "22215:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "22205:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22025:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "22036:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22048:6:19",
														"type": ""
													}
												],
												"src": "21981:245:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22405:176:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22422:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22433:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22415:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22415:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22415:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22456:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22467:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22452:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22452:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22472:2:19",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22445:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22445:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22445:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22495:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22506:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22491:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22491:18:19"
																	},
																	{
																		"hexValue": "204e6f7420696e2043757272656e63792077686974656c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22511:28:19",
																		"type": "",
																		"value": " Not in Currency whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22484:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22484:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22484:56:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22549:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22561:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22572:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22557:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22557:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22549:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22382:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22396:4:19",
														"type": ""
													}
												],
												"src": "22231:350:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22760:176:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22777:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22788:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22770:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22770:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22770:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22811:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22822:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22807:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22807:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22827:2:19",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22800:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22800:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22800:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22850:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22861:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22846:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22846:18:19"
																	},
																	{
																		"hexValue": "204e6f7420696e2053747261746567792077686974656c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22866:28:19",
																		"type": "",
																		"value": " Not in Strategy whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22839:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22839:56:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22839:56:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22904:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22916:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22927:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22912:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "22912:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22904:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22737:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22751:4:19",
														"type": ""
													}
												],
												"src": "22586:350:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23098:211:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23108:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23120:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23131:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23116:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23116:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23108:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23150:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "23165:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23173:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23161:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23161:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23143:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23143:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23143:74:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23237:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23248:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23233:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23233:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23253:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23226:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23226:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23226:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23280:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23291:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23276:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23276:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23296:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23269:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23269:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23269:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23051:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23062:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23070:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23078:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23089:4:19",
														"type": ""
													}
												],
												"src": "22941:368:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23412:214:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23458:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23467:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23470:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23460:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23460:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23460:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23433:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23442:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23429:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23429:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23454:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "23425:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23425:32:19"
															},
															"nodeType": "YulIf",
															"src": "23422:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23483:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23502:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23496:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23496:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "23487:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23546:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "23521:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23521:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23521:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23561:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23571:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "23561:6:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23585:35:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23605:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23616:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23601:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23601:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23595:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23595:25:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "23585:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23370:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "23381:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23393:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23401:6:19",
														"type": ""
													}
												],
												"src": "23314:312:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23760:168:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23770:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23782:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23793:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23778:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23778:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23770:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23812:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "23827:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23835:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23823:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23823:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23805:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23805:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23805:74:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23899:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23910:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23895:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23895:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23915:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23888:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "23888:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23888:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23721:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23732:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23740:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23751:4:19",
														"type": ""
													}
												],
												"src": "23631:297:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23985:116:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23995:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24010:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24013:1:19"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24006:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24006:9:19"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "23995:7:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24073:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24075:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24075:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24075:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "24044:1:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "24037:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24037:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "24051:1:19"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "24058:7:19"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "24067:1:19"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "24054:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "24054:15:19"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "24048:2:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24048:22:19"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "24034:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24034:37:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24027:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24027:45:19"
															},
															"nodeType": "YulIf",
															"src": "24024:71:19"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23964:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23967:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "23973:7:19",
														"type": ""
													}
												],
												"src": "23933:168:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24280:224:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24297:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24308:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24290:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24290:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24290:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24331:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24342:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24327:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24327:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24347:2:19",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24320:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24320:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24320:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24370:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24381:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24366:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24366:18:19"
																	},
																	{
																		"hexValue": "5468652066656520697320746f6f206869676820666f72207468652073656c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24386:34:19",
																		"type": "",
																		"value": "The fee is too high for the sell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24359:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24359:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24359:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24441:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24452:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24437:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24437:18:19"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24457:4:19",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24430:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24430:32:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24430:32:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24471:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24483:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24494:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24479:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24479:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24471:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24257:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24271:4:19",
														"type": ""
													}
												],
												"src": "24106:398:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24590:170:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24636:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24645:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24648:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24638:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24638:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24638:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24611:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24620:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24607:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24607:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24632:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "24603:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24603:32:19"
															},
															"nodeType": "YulIf",
															"src": "24600:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24661:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24680:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24674:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24674:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "24665:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24724:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "24699:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24699:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24699:31:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24739:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "24749:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "24739:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24556:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "24567:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24579:6:19",
														"type": ""
													}
												],
												"src": "24509:251:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24939:178:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24956:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24967:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24949:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24949:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24949:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24990:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25001:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24986:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24986:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25006:2:19",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24979:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "24979:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24979:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25029:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25040:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25025:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25025:18:19"
																	},
																	{
																		"hexValue": "43616e277420666f756e74207472616e73666572206d616e61676572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25045:30:19",
																		"type": "",
																		"value": "Can't fount transfer manager"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25018:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25018:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25018:58:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25085:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25097:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25108:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25093:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25093:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25085:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24916:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24930:4:19",
														"type": ""
													}
												],
												"src": "24765:352:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25335:338:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25345:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25357:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25368:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25353:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25353:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25345:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25381:52:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25391:42:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "25385:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25449:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "25464:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "25472:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "25460:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25460:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25442:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25442:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25442:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25496:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25507:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25492:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25492:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "25516:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "25524:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "25512:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25512:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25485:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25485:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25485:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25548:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25559:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25544:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25544:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "25568:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "25576:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "25564:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25564:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25537:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25537:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25537:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25600:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25611:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25596:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25596:18:19"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "25616:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25589:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25589:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25589:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25643:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25654:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25639:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25639:19:19"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "25660:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25632:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25632:35:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25632:35:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25272:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "25283:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "25291:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25299:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25307:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25315:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25326:4:19",
														"type": ""
													}
												],
												"src": "25122:551:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25835:241:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25845:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25857:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25868:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25853:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25853:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25845:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25880:52:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25890:42:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "25884:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25948:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "25963:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "25971:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "25959:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25959:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25941:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25941:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25941:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25995:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26006:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25991:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25991:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "26015:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "26023:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "26011:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26011:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25984:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "25984:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25984:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26047:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26058:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26043:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26043:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26063:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26036:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26036:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26036:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25788:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25799:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25807:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25815:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25826:4:19",
														"type": ""
													}
												],
												"src": "25678:398:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26329:196:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26346:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26351:66:19",
																		"type": "",
																		"value": "0x1901000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26339:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26339:79:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26339:79:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26438:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26443:1:19",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26434:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26434:11:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26447:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26427:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26427:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26427:27:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26474:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26479:2:19",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26470:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26470:12:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26484:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26463:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26463:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26463:28:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26500:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26511:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26516:2:19",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26507:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26507:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26500:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26297:3:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26302:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26310:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26321:3:19",
														"type": ""
													}
												],
												"src": "26081:444:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26701:220:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26718:3:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26723:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26711:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26711:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26711:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26750:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26755:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26746:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26746:12:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26760:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26739:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26739:28:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26739:28:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26787:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26792:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26783:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26783:12:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "26805:3:19",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "26810:6:19"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "26801:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26801:16:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26819:66:19",
																				"type": "",
																				"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "26797:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26797:89:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26776:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26776:111:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26776:111:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26896:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26907:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26912:2:19",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26903:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "26903:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26896:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26661:3:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "26666:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26674:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26682:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26693:3:19",
														"type": ""
													}
												],
												"src": "26530:391:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26992:184:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27002:10:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "27011:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "27006:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27071:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "27096:3:19"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "27101:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "27092:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27092:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "27115:3:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "27120:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27111:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27111:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27105:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27105:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27085:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27085:39:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27085:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "27032:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27035:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27029:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27029:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27043:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27045:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "27054:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27057:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27050:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27050:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "27045:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "27025:3:19",
																"statements": []
															},
															"src": "27021:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "27154:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27159:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27150:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27150:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27168:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27143:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27143:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27143:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26970:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26975:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26980:6:19",
														"type": ""
													}
												],
												"src": "26926:250:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27230:280:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27240:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27260:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27254:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27254:12:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27244:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27282:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27287:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27275:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27275:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27275:19:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27342:5:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27349:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27338:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27338:16:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "27360:3:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27365:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27356:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27356:14:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27372:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "27303:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27303:76:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27303:76:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27388:116:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "27403:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "27416:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27424:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "27412:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "27412:15:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27429:66:19",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "27408:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27408:88:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27399:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27399:98:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27499:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27395:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27395:109:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27388:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27207:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27214:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27222:3:19",
														"type": ""
													}
												],
												"src": "27181:329:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27662:141:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27679:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27690:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27672:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27672:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27672:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27717:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27728:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27713:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27713:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27733:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27706:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27706:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27706:30:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27745:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27770:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27782:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27793:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27778:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27778:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "27753:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27753:44:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27745:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27623:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27634:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27642:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27653:4:19",
														"type": ""
													}
												],
												"src": "27515:288:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27888:256:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27934:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27943:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27946:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "27936:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27936:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27936:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27909:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27918:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27905:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27905:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27930:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27901:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27901:32:19"
															},
															"nodeType": "YulIf",
															"src": "27898:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27959:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27978:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27972:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "27972:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "27963:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28098:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28107:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28110:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28100:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28100:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28100:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "28010:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "28021:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28028:66:19",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "28017:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28017:78:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "28007:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28007:89:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28000:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28000:97:19"
															},
															"nodeType": "YulIf",
															"src": "27997:117:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28123:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "28133:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "28123:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27854:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27865:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27877:6:19",
														"type": ""
													}
												],
												"src": "27808:336:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28230:103:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28276:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28285:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28288:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28278:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28278:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28278:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28251:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28260:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28247:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28247:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28272:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "28243:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28243:32:19"
															},
															"nodeType": "YulIf",
															"src": "28240:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28301:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28317:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28311:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28311:16:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "28301:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28196:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "28207:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28219:6:19",
														"type": ""
													}
												],
												"src": "28149:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28384:228:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28415:168:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28436:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28439:77:19",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "28429:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28429:88:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28429:88:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28537:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28540:4:19",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "28530:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28530:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28530:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28565:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28568:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "28558:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28558:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28558:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28404:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28397:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28397:9:19"
															},
															"nodeType": "YulIf",
															"src": "28394:189:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28592:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28601:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28604:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "28597:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28597:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "28592:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28369:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28372:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "28378:1:19",
														"type": ""
													}
												],
												"src": "28338:274:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28791:232:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28808:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28819:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28801:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28801:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28801:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28842:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28853:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28838:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28838:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28858:2:19",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28831:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28831:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28831:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28881:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28892:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28877:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28877:18:19"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28897:34:19",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28870:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28870:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28870:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28952:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28963:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28948:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28948:18:19"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28968:12:19",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28941:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28941:40:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28941:40:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28990:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29002:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29013:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28998:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "28998:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28990:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28768:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28782:4:19",
														"type": ""
													}
												],
												"src": "28617:406:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29202:170:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29219:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29230:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29212:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29212:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29212:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29253:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29264:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29249:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29249:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29269:2:19",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29242:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29242:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29242:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29292:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29303:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29288:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29288:18:19"
																	},
																	{
																		"hexValue": "20496e76616c6964207320706172616d65746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29308:22:19",
																		"type": "",
																		"value": " Invalid s parameter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29281:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29281:50:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29281:50:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29340:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29352:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29363:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29348:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29348:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29340:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29179:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29193:4:19",
														"type": ""
													}
												],
												"src": "29028:344:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29551:169:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29568:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29579:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29561:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29561:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29561:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29602:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29613:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29598:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29598:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29618:2:19",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29591:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29591:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29591:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29641:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29652:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29637:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29637:18:19"
																	},
																	{
																		"hexValue": "496e76616c6964207620706172616d65746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29657:21:19",
																		"type": "",
																		"value": "Invalid v parameter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29630:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29630:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29630:49:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29688:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29700:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29711:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29696:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29696:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29688:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29528:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29542:4:19",
														"type": ""
													}
												],
												"src": "29377:343:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29906:217:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29916:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29928:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29939:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29924:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29924:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29916:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29959:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29970:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29952:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29952:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29952:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29997:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30008:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29993:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29993:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "30017:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30025:4:19",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "30013:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30013:17:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29986:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "29986:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29986:45:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30051:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30062:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30047:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30047:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "30067:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30040:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30040:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30040:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30094:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30105:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30090:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30090:18:19"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "30110:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30083:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30083:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30083:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29851:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "29862:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "29870:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29878:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29886:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29897:4:19",
														"type": ""
													}
												],
												"src": "29725:398:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30302:165:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30319:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30330:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30312:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30312:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30312:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30353:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30364:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30349:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30349:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30369:2:19",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30342:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30342:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30342:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30392:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30403:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30388:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30388:18:19"
																	},
																	{
																		"hexValue": "20496e76616c6964207369676e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30408:17:19",
																		"type": "",
																		"value": " Invalid signer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30381:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30381:45:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30381:45:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30435:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30447:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30458:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30443:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30443:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30435:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30279:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30293:4:19",
														"type": ""
													}
												],
												"src": "30128:339:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30646:228:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30663:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30674:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30656:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30656:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30656:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30697:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30708:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30693:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30693:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30713:2:19",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30686:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30686:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30686:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30736:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30747:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30732:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30732:18:19"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30752:34:19",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30725:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30725:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30725:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30807:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30818:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30803:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30803:18:19"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30823:8:19",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30796:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30796:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30796:36:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30841:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30853:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30864:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30849:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "30849:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30841:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30623:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30637:4:19",
														"type": ""
													}
												],
												"src": "30472:402:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31053:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31070:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31081:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31063:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31063:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31063:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31104:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31115:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31100:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31100:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31120:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31093:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31093:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31093:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31143:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31154:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31139:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31139:18:19"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31159:31:19",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31132:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31132:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31132:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31200:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31212:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31223:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31208:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31208:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31200:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31030:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31044:4:19",
														"type": ""
													}
												],
												"src": "30879:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31374:150:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31384:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31404:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31398:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31398:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "31388:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "31459:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31467:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31455:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31455:17:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31474:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31479:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "31420:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31420:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31420:66:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31495:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31506:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31511:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31502:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31502:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31495:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31350:3:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31355:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31366:3:19",
														"type": ""
													}
												],
												"src": "31237:287:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31650:98:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31667:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31678:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31660:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31660:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31660:21:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31690:52:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31715:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31727:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31738:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31723:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31723:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "31698:16:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "31698:44:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31690:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31619:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31630:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31641:4:19",
														"type": ""
													}
												],
												"src": "31529:219:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_TheCurrencyManager_$2257__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_TakerOrder_$2419_calldata_ptrt_struct$_MakerOrder_$2406_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 192) { revert(0, 0) }\n        value0 := _2\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if slt(sub(dataEnd, _3), 512) { revert(0, 0) }\n        value1 := _3\n    }\n    function abi_encode_tuple_t_contract$_TheExManager_$2294__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_TheTransferSelector_$2368__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_TheRoyaltyManager_$2310__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Error About Order Side\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Order must be the sender\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0200)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function convert_t_struct$_MakerOrder_$2406_calldata_ptr_to_t_struct$_MakerOrder_$2406_memory_ptr(value) -> converted\n    {\n        if slt(sub(calldatasize(), value), 0x0200) { revert(0, 0) }\n        let value_1 := allocate_memory()\n        mstore(value_1, abi_decode_bool(value))\n        mstore(add(value_1, 32), abi_decode_address(add(value, 32)))\n        mstore(add(value_1, 64), abi_decode_address(add(value, 64)))\n        mstore(add(value_1, 96), calldataload(add(value, 96)))\n        mstore(add(value_1, 128), calldataload(add(value, 128)))\n        mstore(add(value_1, 160), calldataload(add(value, 160)))\n        mstore(add(value_1, 192), abi_decode_address(add(value, 192)))\n        mstore(add(value_1, 224), abi_decode_address(add(value, 224)))\n        let _1 := 256\n        mstore(add(value_1, _1), calldataload(add(value, _1)))\n        let _2 := 288\n        mstore(add(value_1, _2), calldataload(add(value, _2)))\n        let _3 := 320\n        mstore(add(value_1, _3), calldataload(add(value, _3)))\n        let _4 := 352\n        mstore(add(value_1, _4), calldataload(add(value, _4)))\n        let _5 := 384\n        let offset := calldataload(add(value, _5))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        mstore(add(value_1, _5), abi_decode_bytes(add(value, offset), calldatasize()))\n        let _6 := 416\n        mstore(add(value_1, _6), abi_decode_uint8(add(value, _6)))\n        let _7 := 448\n        mstore(add(value_1, _7), calldataload(add(value, _7)))\n        let _8 := 480\n        mstore(add(value_1, _8), calldataload(add(value, _8)))\n        converted := value_1\n    }\n    function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n    {\n        let rel_offset_of_tail := calldataload(ptr)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let value_1 := add(rel_offset_of_tail, base_ref)\n        length := calldataload(value_1)\n        value := add(value_1, 0x20)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_struct$_TakerOrder_$2419_calldata_ptr_t_struct$_MakerOrder_$2406_calldata_ptr__to_t_struct$_TakerOrder_$2419_memory_ptr_t_struct$_MakerOrder_$2406_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let _1 := 256\n        let value := calldataload(value0)\n        validator_revert_bool(value)\n        mstore(add(headStart, 64), iszero(iszero(value)))\n        let value_1 := calldataload(add(value0, 0x20))\n        validator_revert_address(value_1)\n        mstore(add(headStart, 96), and(value_1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 128), calldataload(add(value0, 64)))\n        mstore(add(headStart, 160), calldataload(add(value0, 96)))\n        mstore(add(headStart, 0xc0), calldataload(add(value0, 128)))\n        let memberValue0, memberValue1 := calldata_access_bytes_calldata(value0, add(value0, 160))\n        mstore(add(headStart, 224), 0xc0)\n        let end := abi_encode_bytes_calldata(memberValue0, memberValue1, add(headStart, _1))\n        mstore(add(headStart, 0x20), sub(end, headStart))\n        let _2 := 0x0200\n        abi_encode_bool(abi_decode_bool(value1), end)\n        let memberValue0_1 := abi_decode_address(add(value1, 0x20))\n        abi_encode_address(memberValue0_1, add(end, 0x20))\n        let memberValue0_2 := abi_decode_address(add(value1, 64))\n        abi_encode_address(memberValue0_2, add(end, 64))\n        mstore(add(end, 96), calldataload(add(value1, 96)))\n        mstore(add(end, 128), calldataload(add(value1, 128)))\n        mstore(add(end, 160), calldataload(add(value1, 160)))\n        let memberValue0_3 := abi_decode_address(add(value1, 0xc0))\n        abi_encode_address(memberValue0_3, add(end, 0xc0))\n        let memberValue0_4 := abi_decode_address(add(value1, 224))\n        abi_encode_address(memberValue0_4, add(end, 224))\n        mstore(add(end, _1), calldataload(add(value1, _1)))\n        let _3 := 0x0120\n        mstore(add(end, _3), calldataload(add(value1, _3)))\n        let _4 := 0x0140\n        mstore(add(end, _4), calldataload(add(value1, _4)))\n        let _5 := 0x0160\n        mstore(add(end, _5), calldataload(add(value1, _5)))\n        let _6 := 0x0180\n        let memberValue0_5, memberValue1_1 := calldata_access_bytes_calldata(value1, add(value1, _6))\n        mstore(add(end, _6), _2)\n        let tail_1 := abi_encode_bytes_calldata(memberValue0_5, memberValue1_1, add(end, _2))\n        let _7 := 0x01a0\n        let memberValue0_6 := abi_decode_uint8(add(value1, _7))\n        abi_encode_uint8(memberValue0_6, add(end, _7))\n        let _8 := 0x01c0\n        mstore(add(end, _8), calldataload(add(value1, _8)))\n        let _9 := 0x01e0\n        mstore(add(end, _9), calldataload(add(value1, _9)))\n        tail := tail_1\n    }\n    function abi_decode_tuple_t_boolt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Strategy should be valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Currency must be WETH\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Msg.value is too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Cannot update to a null address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot be empty Cancel list\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Cancel Order nonce cannot lower \")\n        mstore(add(headStart, 96), \"than current\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        if gt(value1, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert(0, 0) }\n        let length := shl(5, value1)\n        calldatacopy(add(headStart, 64), value0, length)\n        tail := add(add(headStart, length), 64)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Cannot cancel too many orders\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_bytes32_t_bool_t_address_t_address_t_uint256_t_uint256_t_uint256_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value13, value12, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        abi_encode_address(value3, add(headStart, 96))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        abi_encode_address(value7, add(headStart, 224))\n        abi_encode_address(value8, add(headStart, 256))\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), value10)\n        mstore(add(headStart, 352), value11)\n        mstore(add(headStart, 384), value12)\n        mstore(add(headStart, 416), value13)\n    }\n    function abi_encode_tuple_t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Order: Matching order expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"The Order signer cannot be the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"The order amount should be great\")\n        mstore(add(headStart, 96), \"er than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1_t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1_t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Signature: Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not in Currency whitelist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \" Not in Strategy whitelist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"The fee is too high for the sell\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Can't fount transfer manager\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), and(shl(248, value2), 0xff00000000000000000000000000000000000000000000000000000000000000))\n        end := add(pos, 65)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \" Invalid s parameter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid v parameter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \" Invalid signer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"960": [
									{
										"length": 32,
										"start": 1004
									},
									{
										"length": 32,
										"start": 2898
									},
									{
										"length": 32,
										"start": 3290
									},
									{
										"length": 32,
										"start": 3446
									},
									{
										"length": 32,
										"start": 10484
									},
									{
										"length": 32,
										"start": 10775
									},
									{
										"length": 32,
										"start": 10908
									},
									{
										"length": 32,
										"start": 11186
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64DF049E GT PUSH2 0xCB JUMPI DUP1 PUSH4 0xAD5C4648 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xD4FF41DC GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD4FF41DC EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xF75FF53F EQ PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xC5498769 EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xCBD2EC65 EQ PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x87E4401F GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x87E4401F EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x9E53A69A EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x64DF049E EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483ABB9F GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x5CE052D7 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x5CE052D7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x5E14F68E EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x63521DEF EQ PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x483ABB9F EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x509A1A41 EQ PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31E27E27 GT PUSH2 0x153 JUMPI DUP1 PUSH4 0x31E27E27 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x4266581E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x45EA7231 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF747D74 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1DF47F80 EQ PUSH2 0x1C6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x3476 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0xFCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x34A2 JUMP JUMPDEST PUSH2 0x10BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1522 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x19C SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3516 JUMP JUMPDEST PUSH2 0x1536 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x429 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x358B JUMP JUMPDEST PUSH2 0x180B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x197D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x489 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1A71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x4A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x8CFFB07FAA2874440346743BDC0A86B06C3335CC47DC49B327D10E77B73CEB10 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x5E3 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x35BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F9 JUMPI POP PUSH2 0x5F7 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x35BD JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0x65F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722041626F7574204F72646572205369646500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x66F PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 PUSH2 0x711 DUP4 PUSH2 0x36EF JUMP JUMPDEST PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP PUSH2 0x722 DUP3 DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x736 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x770 SWAP3 SWAP2 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x78D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x3A9E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x834 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8EF PUSH2 0x8AC PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x8BC PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST DUP5 PUSH2 0x8CE PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST CALLER PUSH2 0x8DF PUSH1 0x40 DUP13 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x3459 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP13 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x232E JUMP JUMPDEST PUSH2 0x929 PUSH2 0x902 PUSH1 0x60 DUP8 ADD PUSH1 0x40 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x912 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x922 PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x25FE JUMP JUMPDEST PUSH2 0x939 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x95F PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x985 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95FB6205E23FF6BDA16A2D1DBA56B9AD7C783F67C96FA149785052F47696F2BE DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x9D2 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x9E2 PUSH1 0x60 DUP14 ADD PUSH1 0x40 DUP15 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND DUP5 DUP5 ADD MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP8 SWAP1 MSTORE DUP12 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0xABF PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x35BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI POP PUSH2 0xAD3 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x35BD JUMP JUMPDEST ISZERO JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722041626F7574204F72646572205369646500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH2 0xB83 PUSH2 0x100 DUP4 ADD PUSH1 0xE0 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43757272656E6379206D75737420626520574554480000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0xC10 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD GT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD02 CALLER ADDRESS PUSH2 0xCC3 CALLVALUE PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x3B04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP3 SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0xD74 JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x40 ADD CALLDATALOAD EQ PUSH2 0xD74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D73672E76616C756520697320746F6F20686967680000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH2 0xE04 DUP3 PUSH2 0x711 SWAP1 PUSH2 0x36EF JUMP JUMPDEST SWAP1 POP PUSH2 0xE10 DUP3 DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xE24 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD310677D DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x3A9E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0xF0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0xF22 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8EF PUSH2 0xF9A PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0xFAA PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST DUP5 PUSH2 0xFBB PUSH1 0x40 DUP11 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST DUP11 PUSH1 0x40 ADD CALLDATALOAD DUP11 PUSH2 0x160 ADD CALLDATALOAD PUSH2 0x289B JUMP JUMPDEST PUSH2 0xFD3 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB4F5DB40DF3ACED29E88A4BABBC3B46E305E07D34098525D18B1497056E63838 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x113D PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x35BD JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1152 JUMPI POP PUSH2 0x1152 PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x35BD JUMP JUMPDEST PUSH2 0x11B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572726F722041626F7574204F72646572205369646500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x40 DUP4 ADD PUSH1 0x20 DUP5 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F72646572206D757374206265207468652073656E6465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126A PUSH2 0x711 DUP4 PUSH2 0x36EF JUMP JUMPDEST SWAP1 POP PUSH2 0x1276 DUP3 DUP3 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x128A PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A75FFEE DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C4 SWAP3 SWAP2 SWAP1 PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1305 SWAP2 SWAP1 PUSH2 0x3A9E JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53747261746567792073686F756C642062652076616C69640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x1388 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP11 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x1415 SWAP1 PUSH2 0x1404 SWAP1 PUSH1 0x60 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST CALLER PUSH2 0x922 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1479 PUSH2 0x1428 PUSH1 0xE0 DUP8 ADD PUSH1 0xC0 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x3459 JUMP JUMPDEST DUP5 PUSH2 0x144A PUSH2 0x100 DUP11 ADD PUSH1 0xE0 DUP12 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x145A PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x146A PUSH1 0x40 DUP14 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x3459 JUMP JUMPDEST DUP13 PUSH1 0x40 ADD CALLDATALOAD DUP14 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x232E JUMP JUMPDEST PUSH2 0x1489 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14AF PUSH1 0x40 DUP8 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14D5 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68CD251D4D267C6E2034FF0088B990352B97B2002C0476587D0C4DA889C11330 DUP8 PUSH2 0x100 DUP11 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x9D2 SWAP1 PUSH1 0xE0 DUP14 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x152A PUSH2 0x1C1C JUMP JUMPDEST PUSH2 0x1534 PUSH1 0x0 PUSH2 0x2BD9 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH2 0x159D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420626520656D7074792043616E63656C206C6973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x15CA JUMPI PUSH2 0x15CA PUSH2 0x3B17 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E2063757272656E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1683 JUMPI PUSH2 0x1683 PUSH2 0x3B17 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x16BA SWAP1 PUSH2 0x3B46 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15A0 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA0AE5D80FE3763C880A3839FAB0294171A6F730D1F82C4CD5392C6F67B41732 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x170B SWAP3 SWAP2 SWAP1 PUSH2 0x3B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x171F PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x179C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x80E3874461EBBD918AC3E81DA0A92E5E51387D70F337237C9123E48D20E5A508 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT PUSH2 0x18A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E2063757272656E740000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18C6 SWAP1 PUSH3 0x7A120 PUSH2 0x3BD0 JUMP JUMPDEST DUP2 LT PUSH2 0x192E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20746F6F206D616E79206F7264657273000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x1E7178D84F0B0825C65795CD62E7972809AD3AAC6917843AAEC596161B2C0A97 SWAP1 PUSH2 0x1972 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1985 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1A02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x36E2A376EABC3BC60CB88F29C288F53E36874A95A7F407330AB4F166B0905698 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1A79 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x1B25 DUP2 PUSH2 0x2BD9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B30 PUSH2 0x1C1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1BAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742075706461746520746F2061206E756C6C206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x205D78AB41AFE80BD6B6AAA5D7599D5300FF8690DA3AB1302C1B552F7BAF7D8C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH2 0x100 DUP12 ADD MLOAD PUSH2 0x120 DUP13 ADD MLOAD PUSH2 0x140 DUP14 ADD MLOAD PUSH2 0x160 DUP15 ADD MLOAD PUSH2 0x180 DUP16 ADD MLOAD DUP1 MLOAD SWAP1 DUP15 ADD KECCAK256 SWAP11 MLOAD PUSH1 0x0 SWAP15 PUSH2 0x1D27 SWAP15 PUSH32 0x40261ADE532FA1D2C7293DF30AAADB9B3C616FAE525A0B56D3D411C841A85028 SWAP15 SWAP2 SWAP14 SWAP2 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 ADD PUSH2 0x3BE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x1D58 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH2 0x100 DUP7 ADD CALLDATALOAD DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1DF4 JUMPI POP PUSH1 0x7 PUSH1 0x0 PUSH2 0x1DB0 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x100 ADD CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x1E5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F726465723A204D61746368696E67206F726465722065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6C PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204F72646572207369676E65722063616E6E6F7420626520746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xA0 ADD CALLDATALOAD GT PUSH2 0x1FA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206F7264657220616D6F756E742073686F756C64206265206772656174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572207468616E20300000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x2E3445393F211D11D7F88D325BC26CE78976B4DECD39029FEB202D9B409FC3C5 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2080 DUP3 DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x205C SWAP2 SWAP1 PUSH2 0x3459 JUMP JUMPDEST PUSH2 0x206E PUSH2 0x1C0 DUP8 ADD PUSH2 0x1A0 DUP9 ADD PUSH2 0x3C9D JUMP JUMPDEST DUP7 PUSH2 0x1C0 ADD CALLDATALOAD DUP8 PUSH2 0x1E0 ADD CALLDATALOAD DUP7 PUSH2 0x2C50 JUMP JUMPDEST PUSH2 0x20E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5369676E61747572653A20496E76616C69640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43B938C5 PUSH2 0x2115 PUSH2 0x100 DUP7 ADD PUSH1 0xE0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x217E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21A2 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH2 0x2208 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2043757272656E63792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x999BA27C PUSH2 0x2236 PUSH1 0xE0 DUP7 ADD PUSH1 0xC0 DUP8 ADD PUSH2 0x3459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x229F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22C3 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH2 0x2329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x204E6F7420696E2053747261746567792077686974656C697374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x233B DUP11 DUP4 PUSH2 0x2E24 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2364 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x239F JUMPI PUSH1 0x2 SLOAD PUSH2 0x2392 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND SWAP2 DUP10 SWAP2 AND DUP5 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x239C DUP2 DUP4 PUSH2 0x3B04 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF4F635FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2420 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2444 SWAP2 SWAP1 PUSH2 0x3CD5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x246D JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x252A JUMPI PUSH2 0x2494 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP10 DUP5 DUP5 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x249E DUP2 DUP6 PUSH2 0x3B04 JUMP JUMPDEST SWAP4 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D DUP13 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2521 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x2534 DUP7 DUP7 PUSH2 0x3D03 JUMP JUMPDEST PUSH2 0x2540 DUP6 PUSH2 0x2710 PUSH2 0x3D03 JUMP JUMPDEST LT ISZERO PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652066656520697320746F6F206869676820666F72207468652073656C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x25F0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND DUP10 DUP10 DUP8 PUSH2 0x27B9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0xCC15949300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xCC159493 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x266F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2693 SWAP2 SWAP1 PUSH2 0x3D1A JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420666F756E74207472616E73666572206D616E6167657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x33F2FA9F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND SWAP1 PUSH4 0x33F2FA9F SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2895 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2EB7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0x28A8 DUP9 DUP4 PUSH2 0x2E24 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x28D1 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x292A JUMPI PUSH1 0x2 SLOAD PUSH2 0x291D SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 DUP2 AND SWAP2 AND DUP4 PUSH2 0x2FC3 JUMP JUMPDEST PUSH2 0x2927 DUP2 DUP4 PUSH2 0x3B04 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF4F635FA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xF4F635FA SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29CF SWAP2 SWAP1 PUSH2 0x3CD5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x29F8 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2AF4 JUMPI PUSH2 0x2A3E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP4 DUP4 PUSH2 0x2FC3 JUMP JUMPDEST PUSH2 0x2A48 DUP2 DUP6 PUSH2 0x3B04 JUMP JUMPDEST SWAP4 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D PUSH32 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2AEB SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST PUSH2 0x2AFE DUP7 DUP7 PUSH2 0x3D03 JUMP JUMPDEST PUSH2 0x2B0A DUP6 PUSH2 0x2710 PUSH2 0x3D03 JUMP JUMPDEST LT ISZERO PUSH2 0x2B98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652066656520697320746F6F206869676820666F72207468652073656C6C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH2 0x27AD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP9 DUP7 PUSH2 0x2FC3 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x2CC7 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2DDC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0xF8 DUP9 SWAP1 SHL PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND PUSH1 0x60 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x41 DUP2 DUP4 SUB ADD DUP2 MSTORE PUSH1 0x61 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP2 PUSH4 0x1626BA7E SWAP2 PUSH2 0x2D6B SWAP2 DUP6 SWAP2 PUSH1 0x65 ADD PUSH2 0x3DA5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D88 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DAC SWAP2 SWAP1 PUSH2 0x3DBE JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL EQ SWAP2 POP POP PUSH2 0x2E1A JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DFF DUP3 DUP9 DUP9 DUP9 PUSH2 0x3019 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DD1CDA6 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E96 SWAP2 SWAP1 PUSH2 0x3E00 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH2 0x2EA5 DUP5 DUP4 PUSH2 0x3D03 JUMP JUMPDEST PUSH2 0x2EAF SWAP2 SWAP1 PUSH2 0x3E19 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F19 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3225 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2329 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2F37 SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH2 0x2329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2329 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0x2813 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x30A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20496E76616C6964207320706172616D65746572000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B EQ DUP1 PUSH2 0x30BA JUMPI POP DUP4 PUSH1 0xFF AND PUSH1 0x1C EQ JUMPDEST PUSH2 0x3120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207620706172616D6574657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3174 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD MLOAD SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x321C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x20496E76616C6964207369676E65720000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3234 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x323E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x32D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x334E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3377 SWAP2 SWAP1 PUSH2 0x3E54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x33B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x33B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x33C9 DUP3 DUP3 DUP7 PUSH2 0x33D4 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x33E3 JUMPI POP DUP2 PUSH2 0x3237 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x33F3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0x3E70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3454 DUP2 PUSH2 0x3427 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x346B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3237 DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3494 DUP2 PUSH2 0x3427 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x34CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0xC0 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x34E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x34F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP4 ADD PUSH2 0x200 DUP2 DUP7 SUB SLT ISZERO PUSH2 0x350B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3454 DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3237 DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x362D JUMPI PUSH2 0x362D PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x365F JUMPI PUSH2 0x365F PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x36A5 JUMPI PUSH2 0x36A5 PUSH2 0x35DA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x36BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x3702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x370A PUSH2 0x3609 JUMP JUMPDEST PUSH2 0x3713 DUP4 PUSH2 0x35B2 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x3721 PUSH1 0x20 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3732 PUSH1 0x40 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP4 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x3761 PUSH1 0xC0 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x3772 PUSH1 0xE0 DUP5 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP5 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37CB CALLDATASIZE DUP3 DUP8 ADD PUSH2 0x3633 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE POP POP PUSH2 0x1A0 PUSH2 0x37DF DUP2 DUP6 ADD PUSH2 0x36DE JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP3 DUP4 ADD CALLDATALOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x3864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x100 DUP5 CALLDATALOAD PUSH2 0x38C8 DUP2 PUSH2 0x35A4 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x38DD DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x60 DUP6 ADD MSTORE POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x3925 PUSH1 0xA0 DUP7 ADD DUP7 PUSH2 0x3800 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x3939 DUP4 DUP7 ADD DUP3 DUP5 PUSH2 0x386B JUMP JUMPDEST SWAP2 POP POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x200 PUSH2 0x395A DUP3 PUSH2 0x3954 DUP9 PUSH2 0x35B2 JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x3966 PUSH1 0x20 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x398D PUSH1 0x40 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP7 ADD CALLDATALOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x39D4 PUSH1 0xC0 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x39FB PUSH1 0xE0 DUP8 ADD PUSH2 0x3449 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xE0 DUP4 ADD MSTORE DUP3 DUP7 ADD CALLDATALOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x120 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x140 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x160 DUP1 DUP7 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x180 SWAP2 PUSH2 0x3A52 DUP4 DUP8 ADD DUP8 PUSH2 0x3800 JUMP JUMPDEST DUP3 DUP6 DUP6 ADD MSTORE PUSH2 0x3A64 DUP4 DUP6 ADD DUP3 DUP5 PUSH2 0x386B JUMP JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1A0 PUSH2 0x3A77 DUP2 DUP8 ADD PUSH2 0x36DE JUMP JUMPDEST PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH2 0x1C0 DUP6 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x1E0 SWAP5 DUP6 ADD CALLDATALOAD SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3AB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x3ABE DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 SWAP1 SWAP6 ADD MLOAD SWAP1 SWAP7 SWAP5 SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x3AD5 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3B77 JUMPI PUSH2 0x3B77 PUSH2 0x3AD5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x3BB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x3AD5 JUMP JUMPDEST DUP15 DUP2 MSTORE DUP14 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE DUP13 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3C4B PUSH1 0xE0 DUP4 ADD DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x140 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH2 0x160 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 SWAP1 SWAP2 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3237 DUP3 PUSH2 0x36DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3237 DUP2 PUSH2 0x35A4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x3CF3 DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x55A JUMPI PUSH2 0x55A PUSH2 0x3AD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x3237 DUP2 PUSH2 0x3427 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D52 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3D3A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3D73 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3D37 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3234 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3D5B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x3237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3E4F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3E66 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3D37 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3237 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D5B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY EXTCODEHASH MOD SWAP9 DUP9 0xD1 SWAP11 MSTORE8 CALLCODE 0x23 PUSH17 0x805C756B9A209E773DD85833C0BDE3D962 0xAE SWAP6 0xED CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "995:22312:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2105:41;;;;;;;;;;-1:-1:-1;2105:41:8;;;;;;;;;;;217:42:19;205:55;;;187:74;;175:2;160:18;2105:41:8;;;;;;;;22177:208;;;;;;;;;;-1:-1:-1;22177:208:8;;;;;:::i;:::-;;:::i;:::-;;12455:226;;;;;;;;;;-1:-1:-1;12455:226:8;;;;;:::i;:::-;;:::i;:::-;;;1403:14:19;;1396:22;1378:41;;1366:2;1351:18;12455:226:8;1238:187:19;2328:52:8;;;;;;;;;;-1:-1:-1;2328:52:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1576:25:19;;;1564:2;1549:18;2328:52:8;1430:177:19;7032:1776:8;;;;;;;;;;-1:-1:-1;7032:1776:8;;;;;:::i;:::-;;:::i;2152:36::-;;;;;;;;;;-1:-1:-1;2152:36:8;;;;;;;;4711:2126;;;;;;:::i;:::-;;:::i;21280:282::-;;;;;;;;;;-1:-1:-1;21280:282:8;;;;;:::i;:::-;;:::i;2242:46::-;;;;;;;;;;-1:-1:-1;2242:46:8;;;;;;;;9001:1891;;;;;;;;;;-1:-1:-1;9001:1891:8;;;;;:::i;:::-;;:::i;2062:35::-;;;;;;;;;;-1:-1:-1;2062:35:8;;;;;;;;1831:101:0;;;;;;;;;;;;;:::i;2194:42:8:-;;;;;;;;;;-1:-1:-1;2194:42:8;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1273:6:0;;;;1201:85;;11688:473:8;;;;;;;;;;-1:-1:-1;11688:473:8;;;;;:::i;:::-;;:::i;1993:29::-;;;;;;;;;;;;;;;22542:295;;;;;;;;;;-1:-1:-1;22542:295:8;;;;;:::i;:::-;;:::i;11044:475::-;;;;;;;;;;-1:-1:-1;11044:475:8;;;;;:::i;:::-;;:::i;21719:283::-;;;;;;;;;;-1:-1:-1;21719:283:8;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;22993:311:8:-;;;;;;;;;;-1:-1:-1;22993:311:8;;;;;:::i;:::-;;:::i;22177:208::-;1094:13:0;:11;:13::i;:::-;22273:20:8::1;:44:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;22332:46:::1;::::0;::::1;::::0;-1:-1:-1;;22332:46:8::1;22177:208:::0;:::o;12455:226::-;12624:38;;;12557:4;12624:38;;;:32;:38;;;;;;;;:50;;;;;;;;;;;12455:226;;;;;:::o;7032:1776::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;4434:2:19;2317:63:2;;;4416:21:19;4473:2;4453:18;;;4446:30;4512:33;4492:18;;;4485:61;4563:18;;2317:63:2;;;;;;;;;1744:1;2455:7;:18;7266:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;7265:47;;;;-1:-1:-1::0;7292:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;7291:20;7265:47;7257:82;;;::::0;::::1;::::0;;5296:2:19;7257:82:8::1;::::0;::::1;5278:21:19::0;5335:2;5315:18;;;5308:30;5374:24;5354:18;;;5347:52;5416:18;;7257:82:8::1;5094:346:19::0;7257:82:8::1;7412:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;7398:28;;:10;:28;;;7390:65;;;::::0;::::1;::::0;;5647:2:19;7390:65:8::1;::::0;::::1;5629:21:19::0;5686:2;5666:18;;;5659:30;5725:26;5705:18;;;5698:54;5769:18;;7390:65:8::1;5445:348:19::0;7390:65:8::1;7497:15;7515;:13;:8:::0;:13:::1;:::i;:::-;;:15::i;:::-;7497:33;;7540;7555:8;7565:7;7540:14;:33::i;:::-;7596:21;::::0;;7668:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;7654:56;;;7711:8;7721;7654:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7595:135;;;;;;7784:16;7776:53;;;::::0;::::1;::::0;;13146:2:19;7776:53:8::1;::::0;::::1;13128:21:19::0;13185:2;13165:18;;;13158:30;13224:26;13204:18;;;13197:54;13268:18;;7776:53:8::1;12944:348:19::0;7776:53:8::1;7997:4;7929:32;:49;7962:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;7929:49;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;7929:49:8;;;7979:14:::1;::::0;::::1;;7929:65:::0;;;;;;;:72;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;8037:269:::1;8072:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;8103:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;8136:7:::0;8157:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;8188:10;8212:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;8241:8;:14;;;8269:8;:27;;;8037:21;:269::i;:::-;8340:157;8379:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;8412:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;8441:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;8469:7;8490:6;8340:25;:157::i;:::-;8641:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;8513:288;;8612:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;8513:288;;8584:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;8513:288;;;8535:7:::0;8556:14:::1;::::0;::::1;::::0;::::1;::::0;8672:17:::1;::::0;::::1;::::0;::::1;;:::i;:::-;8703:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;8777:14;8513:288:::0;;13612:25:19;;;13668:2;13653:18;;13646:34;;;;13699:42;13777:15;;;13757:18;;;13750:43;13829:15;13824:2;13809:18;;13802:43;13876:3;13861:19;;13854:35;;;13920:3;13905:19;;13898:35;;;8777:14:8;::::1;;13964:3:19::0;13949:19;;13942:35;13599:3;13584:19;8513:288:8::1;;;;;;;-1:-1:-1::0;;1701:1:2;2628:7;:22;-1:-1:-1;;;;7032:1776:8:o;4711:2126::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;4434:2:19;2317:63:2;;;4416:21:19;4473:2;4453:18;;;4446:30;4512:33;4492:18;;;4485:61;4563:18;;2317:63:2;4232:355:19;2317:63:2;1744:1;2455:7;:18;4904:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;4903:47;;;;-1:-1:-1::0;4930:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;4929:20;4903:47;4895:82;;;::::0;::::1;::::0;;5296:2:19;4895:82:8::1;::::0;::::1;5278:21:19::0;5335:2;5315:18;;;5308:30;5374:24;5354:18;;;5347:52;5416:18;;4895:82:8::1;5094:346:19::0;4895:82:8::1;5025:25;5046:4;5025:25;:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;:25;;;5017:59;;;::::0;::::1;::::0;;14190:2:19;5017:59:8::1;::::0;::::1;14172:21:19::0;14229:2;14209:18;;;14202:30;14268:23;14248:18;;;14241:51;14309:18;;5017:59:8::1;13988:345:19::0;5017:59:8::1;5108:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;5094:28;;:10;:28;;;5086:65;;;::::0;::::1;::::0;;5647:2:19;5086:65:8::1;::::0;::::1;5629:21:19::0;5686:2;5666:18;;;5659:30;5725:26;5705:18;;;5698:54;5769:18;;5086:65:8::1;5445:348:19::0;5086:65:8::1;5237:9;5220:8;:14;;;:26;5216:235;;;5262:86;5292:10;5312:4;5320:26;5337:9;5320:14;::::0;::::1;;:26;:::i;:::-;5262:29;5269:4;5262:29;::::0;:86;;:29:::1;:86::i;:::-;5216:235;;;5405:9;5387:8;:14;;;:27;5379:61;;;::::0;::::1;::::0;;14862:2:19;5379:61:8::1;::::0;::::1;14844:21:19::0;14901:2;14881:18;;;14874:30;14940:23;14920:18;;;14913:51;14981:18;;5379:61:8::1;14660:345:19::0;5379:61:8::1;5490:4;5484:19;;;5512:9;5484:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;5578:15;5596;:8;:13;;;:::i;:15::-;5578:33;;5621;5636:8;5646:7;5621:14;:33::i;:::-;5706:21;::::0;;5778:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;5764:56;;;5821:8;5831;5764:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5705:135;;;;;;5859:16;5851:53;;;::::0;::::1;::::0;;13146:2:19;5851:53:8::1;::::0;::::1;13128:21:19::0;13185:2;13165:18;;;13158:30;13224:26;13204:18;;;13197:54;13268:18;;5851:53:8::1;12944:348:19::0;5851:53:8::1;6072:4;6004:32;:49;6037:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;6004:49;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;6004:49:8;;;6054:14:::1;::::0;::::1;;6004:65:::0;;;;;;;:72;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;6112:222:::1;6155:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;6186:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;6219:7:::0;6240:15:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;6269:8;:14;;;6297:8;:27;;;6112:29;:222::i;21280:282::-:0;1094:13:0;:11;:13::i;:::-;21374:30:8::1;::::0;::::1;21366:74;;;::::0;::::1;::::0;;15212:2:19;21366:74:8::1;::::0;::::1;15194:21:19::0;15251:2;15231:18;;;15224:30;15290:33;15270:18;;;15263:61;15341:18;;21366:74:8::1;15010:355:19::0;21366:74:8::1;21450:15;:54:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;21519:36:::1;::::0;::::1;::::0;-1:-1:-1;;21519:36:8::1;21280:282:::0;:::o;9001:1891::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;4434:2:19;2317:63:2;;;4416:21:19;4473:2;4453:18;;;4446:30;4512:33;4492:18;;;4485:61;4563:18;;2317:63:2;4232:355:19;2317:63:2;1744:1;2455:7;:18;9289:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;9288:20;9287:47;;;;-1:-1:-1::0;9314:19:8::1;;::::0;::::1;:8:::0;:19:::1;:::i;:::-;9279:82;;;::::0;::::1;::::0;;5296:2:19;9279:82:8::1;::::0;::::1;5278:21:19::0;5335:2;5315:18;;;5308:30;5374:24;5354:18;;;5347:52;5416:18;;9279:82:8::1;5094:346:19::0;9279:82:8::1;9434:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;9420:28;;:10;:28;;;9412:65;;;::::0;::::1;::::0;;5647:2:19;9412:65:8::1;::::0;::::1;5629:21:19::0;5686:2;5666:18;;;5659:30;5725:26;5705:18;;;5698:54;5769:18;;9412:65:8::1;5445:348:19::0;9412:65:8::1;9521:15;9539;:13;:8:::0;:13:::1;:::i;:15::-;9521:33;;9606;9621:8;9631:7;9606:14;:33::i;:::-;9715:21;::::0;;9787:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;9773:55;;;9829:8;9839;9773:75;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9714:134;;;;;;9867:16;9859:53;;;::::0;::::1;::::0;;13146:2:19;9859:53:8::1;::::0;::::1;13128:21:19::0;13185:2;13165:18;;;13158:30;13224:26;13204:18;;;13197:54;13268:18;;9859:53:8::1;12944:348:19::0;9859:53:8::1;10080:4;10012:32;:49;10045:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;10012:49;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;10012:49:8;;;10062:14:::1;::::0;::::1;;10012:65:::0;;;;;;;;;:72;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;;10119:153:::1;::::0;10158:19:::1;::::0;;;;;;::::1;;:::i;:::-;10191:10;10215:15;::::0;;;::::1;::::0;::::1;;:::i;10119:153::-;10308:273;10343:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;10374:19;::::0;;;::::1;::::0;::::1;;:::i;:::-;10407:7:::0;10428:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;10459:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;10488:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;10516:8;:14;;;10544:8;:27;;;10308:21;:273::i;:::-;10725:17;::::0;;;::::1;::::0;::::1;;:::i;:::-;10597:288;;10696:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;10597:288;;10668:14;::::0;;;::::1;::::0;::::1;;:::i;:::-;10597:288;;;10619:7:::0;10640:14:::1;::::0;::::1;::::0;::::1;::::0;10756:17:::1;::::0;::::1;::::0;::::1;;:::i;1831:101:0:-:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;11688:473:8:-;11780:20;11772:60;;;;;;;15572:2:19;11772:60:8;;;15554:21:19;15611:2;15591:18;;;15584:30;15650:29;15630:18;;;15623:57;15697:18;;11772:60:8;15370:351:19;11772:60:8;11848:9;11843:253;11863:20;;;11843:253;;;11946:10;11928:29;;;;:17;:29;;;;;;11912:9;;11922:1;11912:12;;;;;;;:::i;:::-;;;;;;;:45;;11904:102;;;;;;;16117:2:19;11904:102:8;;;16099:21:19;16156:2;16136:18;;;16129:30;16195:34;16175:18;;;16168:62;16266:14;16246:18;;;16239:42;16298:19;;11904:102:8;15915:408:19;11904:102:8;12053:10;12020:44;;;;:32;:44;;;;;12081:4;;12065:9;;12075:1;12065:12;;;;;;;:::i;:::-;;;;;;;12020:58;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;11885:3;;;;;:::i;:::-;;;;11843:253;;;;12132:10;12111:43;;;12144:9;;12111:43;;;;;;;:::i;:::-;;;;;;;;11688:473;;:::o;22542:295::-;1094:13:0;:11;:13::i;:::-;22640:32:8::1;::::0;::::1;22632:76;;;::::0;::::1;::::0;;15212:2:19;22632:76:8::1;::::0;::::1;15194:21:19::0;15251:2;15231:18;;;15224:30;15290:33;15270:18;;;15263:61;15341:18;;22632:76:8::1;15010:355:19::0;22632:76:8::1;22718:17;:57:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;22790:40:::1;::::0;::::1;::::0;-1:-1:-1;;22790:40:8::1;22542:295:::0;:::o;11044:475::-;11152:10;11134:29;;;;:17;:29;;;;;;11123:40;;11115:97;;;;;;;16117:2:19;11115:97:8;;;16099:21:19;16156:2;16136:18;;;16129:30;16195:34;16175:18;;;16168:62;16266:14;16246:18;;;16239:42;16298:19;;11115:97:8;15915:408:19;11115:97:8;11259:10;11241:29;;;;:17;:29;;;;;;:38;;11273:6;11241:38;:::i;:::-;11230:8;:49;11222:91;;;;;;;17355:2:19;11222:91:8;;;17337:21:19;17394:2;17374:18;;;17367:30;17433:31;17413:18;;;17406:59;17482:18;;11222:91:8;17153:353:19;11222:91:8;11437:10;11419:29;;;;:17;:29;;;;;;;:40;;;11475:37;;;;;11451:8;1576:25:19;;1564:2;1549:18;;1430:177;11475:37:8;;;;;;;;11044:475;:::o;21719:283::-;1094:13:0;:11;:13::i;:::-;21815:31:8::1;::::0;::::1;21807:75;;;::::0;::::1;::::0;;15212:2:19;21807:75:8::1;::::0;::::1;15194:21:19::0;15251:2;15231:18;;;15224:30;15290:33;15270:18;;;15263:61;15341:18;;21807:75:8::1;15010:355:19::0;21807:75:8::1;21892:16;:50:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;21957:38:::1;::::0;::::1;::::0;-1:-1:-1;;21957:38:8::1;21719:283:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;17713:2:19;2161:73:0::1;::::0;::::1;17695:21:19::0;17752:2;17732:18;;;17725:30;17791:34;17771:18;;;17764:62;17862:8;17842:18;;;17835:36;17888:19;;2161:73:0::1;17511:402:19::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;22993:311:8:-;1094:13:0;:11;:13::i;:::-;23095:34:8::1;::::0;::::1;23087:78;;;::::0;::::1;::::0;;15212:2:19;23087:78:8::1;::::0;::::1;15194:21:19::0;15251:2;15231:18;;;15224:30;15290:33;15270:18;;;15263:61;15341:18;;23087:78:8::1;15010:355:19::0;23087:78:8::1;23175:19;:63:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;23253:44:::1;::::0;::::1;::::0;-1:-1:-1;;23253:44:8::1;22993:311:::0;:::o;1359:130:0:-;1273:6;;1422:23;1273:6;719:10:7;1422:23:0;1414:68;;;;;;;18120:2:19;1414:68:0;;;18102:21:19;;;18139:18;;;18132:30;18198:34;18178:18;;;18171:62;18250:18;;1414:68:0;17918:356:19;2084:692:17;2270:21;;2309:17;;;;;2344:21;;;;;2383:16;;;;2417:18;;;;2453:17;;;;2488:19;;;;2525;;;;2562:16;;;;2596:20;;;;2634:18;;;;2670:29;;;;2727:17;;;;2717:28;;;;;;2208:551;;2151:7;;2208:551;;592:66;;2270:21;;2309:17;;2344:21;2383:16;2417:18;2453:17;2488:19;2525;2562:16;2596:20;2634:18;2670:29;2208:551;;:::i;:::-;;;;;;;;;;;;;2185:584;;;;;;2170:599;;2084:692;;;:::o;19013:2111:8:-;19239:32;:45;19272:11;;;;;;;;:::i;:::-;19239:45;;;;;;;;;;;;;;;;-1:-1:-1;19239:45:8;;;19285:10;;;;19239:57;;;;;;;;;;19238:58;19237:122;;;;-1:-1:-1;19328:17:8;:30;19346:11;;;;;;;;:::i;:::-;19328:30;;;;;;;;;;;;;;;;19314:4;:10;;;:44;;19237:122;19162:252;;;;;;;19700:2:19;19162:252:8;;;19682:21:19;19739:2;19719:18;;;19712:30;19778:31;19758:18;;;19751:59;19827:18;;19162:252:8;19498:353:19;19162:252:8;19497:1;19474:11;;;;;;;;:::i;:::-;:25;;;19466:81;;;;;;;20058:2:19;19466:81:8;;;20040:21:19;20097:2;20077:18;;;20070:30;20136:34;20116:18;;;20109:62;20207:13;20187:18;;;20180:41;20238:19;;19466:81:8;19856:407:19;19466:81:8;19625:1;19611:4;:11;;;:15;19603:69;;;;;;;20470:2:19;19603:69:8;;;20452:21:19;20509:2;20489:18;;;20482:30;20548:34;20528:18;;;20521:62;20619:11;20599:18;;;20592:39;20648:19;;19603:69:8;20268:405:19;19603:69:8;19721:546;;;19749:66;19721:546;;;21189:25:19;19944:66:8;21230:18:19;;;21223:34;;;;20070:66:8;21273:18:19;;;21266:34;20209:13:8;21316:18:19;;;21309:34;20248:4:8;21359:19:19;;;21352:84;19683:14:8;;21161:19:19;;19721:546:8;;;;;;;;;;;;19698:579;;;;;;19683:594;;20482:266;20536:4;20565;:11;;;;;;;;;;:::i;:::-;20612:6;;;;;;;;:::i;:::-;20680:4;:6;;;20704:4;:6;;;20728;20482:36;:266::i;:::-;20461:331;;;;;;;21836:2:19;20461:331:8;;;21818:21:19;21875:2;21855:18;;;21848:30;21914:20;21894:18;;;21887:48;21952:18;;20461:331:8;21634:342:19;20461:331:8;20854:15;;;;:37;20892:13;20854:15;20892:13;;;;;;:::i;:::-;20854:52;;;;;;;;;;217:42:19;205:55;;;20854:52:8;;;187:74:19;160:18;;20854:52:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20846:91;;;;;;;22433:2:19;20846:91:8;;;22415:21:19;22472:2;22452:18;;;22445:30;22511:28;22491:18;;;22484:56;22557:18;;20846:91:8;22231:350:19;20846:91:8;21033:16;;;;:38;21072:13;;;;;;;;:::i;:::-;21033:53;;;;;;;;;;217:42:19;205:55;;;21033:53:8;;;187:74:19;160:18;;21033:53:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21025:92;;;;;;;22788:2:19;21025:92:8;;;22770:21:19;22827:2;22807:18;;;22800:30;22866:28;22846:18;;;22839:56;22912:18;;21025:92:8;22586:350:19;21025:92:8;19102:2022;19013:2111;;:::o;13294:1871::-;13619:6;13591:25;13714:39;13736:8;13619:6;13714:21;:39::i;:::-;14022:20;;13686:67;;-1:-1:-1;14022:34:8;:20;:34;;;;14021:64;;-1:-1:-1;14062:22:8;;;14021:64;14017:227;;;14141:20;;14101:80;;14141:20;14101:33;;;;14135:4;;14141:20;14163:17;14101:33;:80::i;:::-;14195:38;14216:17;14195:38;;:::i;:::-;;;14017:227;14351:17;;:90;;;;;:17;23161:55:19;;;14351:90:8;;;23143:74:19;23233:18;;;23226:34;;;23276:18;;;23269:34;;;14294:27:8;;;;14351:17;;;:61;;23116:18:19;;14351:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14293:148;;-1:-1:-1;14293:148:8;-1:-1:-1;14537:33:8;;;;;;;14536:62;;-1:-1:-1;14576:21:8;;;14536:62;14532:326;;;14614:78;:33;;;14648:4;14654:19;14675:16;14614:33;:78::i;:::-;14706:37;14727:16;14706:37;;:::i;:::-;;;14799:19;14763:84;;14790:7;14778:10;14763:84;;;14820:8;14830:16;14763:84;;;;;;23835:42:19;23823:55;;;;23805:74;;23910:2;23895:18;;23888:34;23793:2;23778:18;;23631:297;14763:84:8;;;;;;;;14532:326;14981:27;15002:6;14981:18;:27;:::i;:::-;14950:25;:17;14970:5;14950:25;:::i;:::-;14949:60;;14941:107;;;;;;;24308:2:19;14941:107:8;;;24290:21:19;24347:2;24327:18;;;24320:30;24386:34;24366:18;;;24359:62;24457:4;24437:18;;;24430:32;24479:19;;14941:107:8;24106:398:19;14941:107:8;15095:62;:33;;;15129:4;15135:2;15139:17;15095:33;:62::i;:::-;13547:1618;;;;13294:1871;;;;;;;;:::o;17717:581::-;17967:19;;:60;;;;;:19;205:55:19;;;17967:60:8;;;187:74:19;17949:15:8;;17967:19;;:48;;160:18:19;;17967:60:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17949:78;-1:-1:-1;18088:21:8;;;18080:62;;;;;;;24967:2:19;18080:62:8;;;24949:21:19;25006:2;24986:18;;;24979:30;25045;25025:18;;;25018:58;25093:18;;18080:62:8;24765:352:19;18080:62:8;18200:91;;;;;:52;25460:15:19;;;18200:91:8;;;25442:34:19;25512:15;;;25492:18;;;25485:43;25564:15;;;25544:18;;;25537:43;25596:18;;;25589:34;;;25639:19;;;25632:35;;;18200:52:8;;;;;25353:19:19;;18200:91:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17886:412;17717:581;;;;;:::o;974:241:5:-;1139:68;;25890:42:19;25959:15;;;1139:68:5;;;25941:34:19;26011:15;;25991:18;;;25984:43;26043:18;;;26036:34;;;1112:96:5;;1132:5;;1162:27;;25853:18:19;;1139:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;15615:1795:8:-;15903:6;15875:25;15998:39;16020:8;15903:6;15998:21;:39::i;:::-;16307:20;;15970:67;;-1:-1:-1;16307:34:8;:20;:34;;;;16306:64;;-1:-1:-1;16347:22:8;;;16306:64;16302:213;;;16412:20;;16386:66;;16412:20;16393:4;16386:25;;;16412:20;16434:17;16386:25;:66::i;:::-;16466:38;16487:17;16466:38;;:::i;:::-;;;16302:213;16619:17;;:90;;;;;:17;23161:55:19;;;16619:90:8;;;23143:74:19;23233:18;;;23226:34;;;23276:18;;;23269:34;;;16562:27:8;;;;16619:17;;;:61;;23116:18:19;;16619:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16561:148;;-1:-1:-1;16561:148:8;-1:-1:-1;16805:33:8;;;;;;;16804:62;;-1:-1:-1;16844:21:8;;;16804:62;16800:317;;;16882:64;:25;16889:4;16882:25;16908:19;16929:16;16882:25;:64::i;:::-;16960:37;16981:16;16960:37;;:::i;:::-;;;17053:19;17017:89;;17044:7;17032:10;17017:89;;;17082:4;17089:16;17017:89;;;;;;23835:42:19;23823:55;;;;23805:74;;23910:2;23895:18;;23888:34;23793:2;23778:18;;23631:297;17017:89:8;;;;;;;;16800:317;17241:27;17262:6;17241:18;:27;:::i;:::-;17210:25;:17;17230:5;17210:25;:::i;:::-;17209:60;;17201:107;;;;;;;24308:2:19;17201:107:8;;;24290:21:19;24347:2;24327:18;;;24320:30;24386:34;24366:18;;;24359:62;24457:4;24437:18;;;24430:32;24479:19;;17201:107:8;24106:398:19;17201:107:8;17354:48;:25;17361:4;17354:25;17380:2;17384:17;17354:25;:48::i;2433:187:0:-;2525:6;;;;2541:17;;;;;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1743:906:18:-;2124:51;;26351:66:19;2124:51:18;;;26339:79:19;26434:11;;;26427:27;;;26470:12;;;26463:28;;;1922:4:18;;;;26507:12:19;;2124:51:18;;;;;;;;;;;;2114:62;;;;;;2097:79;;2250:26;2269:6;1465:19:6;;;:23;;;1175:320;2250:26:18;2246:397;;;2453:25;;;;;;26711:19:19;;;26746:12;;;26739:28;;;26805:3;26801:16;;;26819:66;26797:89;26783:12;;;26776:111;2453:25:18;;;;;;;;;26903:12:19;;;2453:25:18;;;;2411:68;;;;:33;;;;;;:68;;2445:6;;2411:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:82;;;2483:10;2411:82;;;2404:89;;;;;2246:397;2626:6;2598:34;;:24;2606:6;2614:1;2617;2620;2598:7;:24::i;:::-;:34;;;2591:41;;;1743:906;;;;;;;;;:::o;18551:230:8:-;18642:7;18661:19;18697:11;18683:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18661:66;-1:-1:-1;18769:5:8;18745:20;18759:6;18661:66;18745:20;:::i;:::-;18744:30;;;;:::i;:::-;18737:37;18551:230;-1:-1:-1;;;;18551:230:8:o;3747:706:5:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:5;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;28819:2:19;4351:85:5;;;28801:21:19;28858:2;28838:18;;;28831:30;28897:34;28877:18;;;28870:62;28968:12;28948:18;;;28941:40;28998:19;;4351:85:5;28617:406:19;763:205:5;902:58;;23835:42:19;23823:55;;902:58:5;;;23805:74:19;23895:18;;;23888:34;;;875:86:5;;895:5;;925:23;;23778:18:19;;902:58:5;23631:297:19;688:771:18;811:7;1083:66;1069:80;;;1048:147;;;;;;;29230:2:19;1048:147:18;;;29212:21:19;29269:2;29249:18;;;29242:30;29308:22;29288:18;;;29281:50;29348:18;;1048:147:18;29028:344:19;1048:147:18;1214:1;:7;;1219:2;1214:7;:18;;;;1225:1;:7;;1230:2;1225:7;1214:18;1206:50;;;;;;;29579:2:19;1206:50:18;;;29561:21:19;29618:2;29598:18;;;29591:30;29657:21;29637:18;;;29630:49;29696:18;;1206:50:18;29377:343:19;1206:50:18;1346:24;;;1329:14;1346:24;;;;;;;;;29952:25:19;;;30025:4;30013:17;;29993:18;;;29986:45;;;;30047:18;;;30040:34;;;30090:18;;;30083:34;;;1346:24:18;;29924:19:19;;1346:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1346:24:18;;;;;;-1:-1:-1;;1388:20:18;;;1380:48;;;;;;;30330:2:19;1380:48:18;;;30312:21:19;30369:2;30349:18;;;30342:30;30408:17;30388:18;;;30381:45;30443:18;;1380:48:18;30128:339:19;1380:48:18;1446:6;688:771;-1:-1:-1;;;;;688:771:18:o;3861:223:6:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;30674:2:19;5137:81:6;;;30656:21:19;30713:2;30693:18;;;30686:30;30752:34;30732:18;;;30725:62;30823:8;30803:18;;;30796:36;30849:19;;5137:81:6;30472:402:19;5137:81:6;1465:19;;;;5228:60;;;;;;;31081:2:19;5228:60:6;;;31063:21:19;31120:2;31100:18;;;31093:30;31159:31;31139:18;;;31132:59;31208:18;;5228:60:6;30879:353:19;5228:60:6;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:6:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:6;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;272:154:19:-;358:42;351:5;347:54;340:5;337:65;327:93;;416:1;413;406:12;431:134;499:20;;528:31;499:20;528:31;:::i;:::-;431:134;;;:::o;570:247::-;629:6;682:2;670:9;661:7;657:23;653:32;650:52;;;698:1;695;688:12;650:52;737:9;724:23;756:31;781:5;756:31;:::i;822:315::-;890:6;898;951:2;939:9;930:7;926:23;922:32;919:52;;;967:1;964;957:12;919:52;1006:9;993:23;1025:31;1050:5;1025:31;:::i;:::-;1075:5;1127:2;1112:18;;;;1099:32;;-1:-1:-1;;;822:315:19:o;1612:679::-;1740:6;1748;1801:2;1789:9;1780:7;1776:23;1772:32;1769:52;;;1817:1;1814;1807:12;1769:52;1857:9;1844:23;1886:18;1927:2;1919:6;1916:14;1913:34;;;1943:1;1940;1933:12;1913:34;1966:22;;;;2022:3;2004:16;;;2000:26;1997:46;;;2039:1;2036;2029:12;1997:46;2062:2;;-1:-1:-1;2117:2:19;2102:18;;2089:32;;2133:16;;;2130:36;;;2162:1;2159;2152:12;2130:36;-1:-1:-1;2185:24:19;;2243:3;2225:16;;;2221:26;2218:46;;;2260:1;2257;2250:12;2218:46;2283:2;2273:12;;;1612:679;;;;;:::o;3427:615::-;3513:6;3521;3574:2;3562:9;3553:7;3549:23;3545:32;3542:52;;;3590:1;3587;3580:12;3542:52;3630:9;3617:23;3659:18;3700:2;3692:6;3689:14;3686:34;;;3716:1;3713;3706:12;3686:34;3754:6;3743:9;3739:22;3729:32;;3799:7;3792:4;3788:2;3784:13;3780:27;3770:55;;3821:1;3818;3811:12;3770:55;3861:2;3848:16;3887:2;3879:6;3876:14;3873:34;;;3903:1;3900;3893:12;3873:34;3956:7;3951:2;3941:6;3938:1;3934:14;3930:2;3926:23;3922:32;3919:45;3916:65;;;3977:1;3974;3967:12;3916:65;4008:2;4000:11;;;;;4030:6;;-1:-1:-1;3427:615:19;;-1:-1:-1;;;;3427:615:19:o;4047:180::-;4106:6;4159:2;4147:9;4138:7;4134:23;4130:32;4127:52;;;4175:1;4172;4165:12;4127:52;-1:-1:-1;4198:23:19;;4047:180;-1:-1:-1;4047:180:19:o;4592:118::-;4678:5;4671:13;4664:21;4657:5;4654:32;4644:60;;4700:1;4697;4690:12;4715:128;4780:20;;4809:28;4780:20;4809:28;:::i;4848:241::-;4904:6;4957:2;4945:9;4936:7;4932:23;4928:32;4925:52;;;4973:1;4970;4963:12;4925:52;5012:9;4999:23;5031:28;5053:5;5031:28;:::i;5798:184::-;5850:77;5847:1;5840:88;5947:4;5944:1;5937:15;5971:4;5968:1;5961:15;5987:250;6054:2;6048:9;6096:6;6084:19;;6133:18;6118:34;;6154:22;;;6115:62;6112:88;;;6180:18;;:::i;:::-;6216:2;6209:22;5987:250;:::o;6242:777::-;6284:5;6337:3;6330:4;6322:6;6318:17;6314:27;6304:55;;6355:1;6352;6345:12;6304:55;6391:6;6378:20;6417:18;6454:2;6450;6447:10;6444:36;;;6460:18;;:::i;:::-;6594:2;6588:9;6656:4;6648:13;;6499:66;6644:22;;;6668:2;6640:31;6636:40;6624:53;;;6692:18;;;6712:22;;;6689:46;6686:72;;;6738:18;;:::i;:::-;6778:10;6774:2;6767:22;6813:2;6805:6;6798:18;6859:3;6852:4;6847:2;6839:6;6835:15;6831:26;6828:35;6825:55;;;6876:1;6873;6866:12;6825:55;6940:2;6933:4;6925:6;6921:17;6914:4;6906:6;6902:17;6889:54;6987:1;6980:4;6975:2;6967:6;6963:15;6959:26;6952:37;7007:6;6998:15;;;;;;6242:777;;;;:::o;7024:156::-;7090:20;;7150:4;7139:16;;7129:27;;7119:55;;7170:1;7167;7160:12;7185:1606;7293:9;7352:6;7344:5;7328:14;7324:26;7320:39;7317:59;;;7372:1;7369;7362:12;7317:59;7400:17;;:::i;:::-;7442:22;7458:5;7442:22;:::i;:::-;7433:7;7426:39;7499:34;7529:2;7522:5;7518:14;7499:34;:::i;:::-;7494:2;7485:7;7481:16;7474:60;7568:34;7598:2;7591:5;7587:14;7568:34;:::i;:::-;7563:2;7554:7;7550:16;7543:60;7661:2;7654:5;7650:14;7637:28;7632:2;7623:7;7619:16;7612:54;7725:3;7718:5;7714:15;7701:29;7695:3;7686:7;7682:17;7675:56;7790:3;7783:5;7779:15;7766:29;7760:3;7751:7;7747:17;7740:56;7831:35;7861:3;7854:5;7850:15;7831:35;:::i;:::-;7825:3;7816:7;7812:17;7805:62;7902:35;7932:3;7925:5;7921:15;7902:35;:::i;:::-;7896:3;7883:17;;7876:62;7957:3;8007:14;;;7994:28;7976:16;;;7969:54;8042:3;8092:14;;;8079:28;8061:16;;;8054:54;8127:3;8177:14;;;8164:28;8146:16;;;8139:54;8212:3;8262:14;;;8249:28;8231:16;;;8224:54;8297:3;8336:14;;;8323:28;8374:18;8363:30;;8360:50;;;8406:1;8403;8396:12;8360:50;8444:52;8481:14;8472:6;8465:5;8461:18;8444:52;:::i;:::-;8439:2;8430:7;8426:16;8419:78;;;8516:3;8553:32;8581:2;8574:5;8570:14;8553:32;:::i;:::-;8535:16;;;8528:58;8605:3;8655:14;;;8642:28;8624:16;;;8617:54;8690:3;8740:14;;;8727:28;8709:16;;;8702:54;;;;-1:-1:-1;8539:7:19;7185:1606::o;8796:559::-;8854:5;8861:6;8921:3;8908:17;9003:66;8992:8;8976:14;8972:29;8968:102;8948:18;8944:127;8934:155;;9085:1;9082;9075:12;8934:155;9113:33;;9217:4;9204:18;;;-1:-1:-1;9165:21:19;;-1:-1:-1;9245:18:19;9234:30;;9231:50;;;9277:1;9274;9267:12;9231:50;9324:6;9308:14;9304:27;9297:5;9293:39;9290:59;;;9345:1;9342;9335:12;9290:59;8796:559;;;;;:::o;9360:325::-;9448:6;9443:3;9436:19;9500:6;9493:5;9486:4;9481:3;9477:14;9464:43;;9552:1;9545:4;9536:6;9531:3;9527:16;9523:27;9516:38;9418:3;9674:4;9604:66;9599:2;9591:6;9587:15;9583:88;9578:3;9574:98;9570:109;9563:116;;9360:325;;;;:::o;9770:2797::-;10043:2;10032:9;10025:21;10006:4;10065:3;10103:6;10090:20;10119:28;10141:5;10119:28;:::i;:::-;10190:13;10183:21;10178:2;10163:18;;10156:49;10254:4;10242:17;;10229:31;10269:33;10229:31;10269:33;:::i;:::-;10351:42;10342:7;10338:56;10333:2;10322:9;10318:18;10311:84;;10457:2;10449:6;10445:15;10432:29;10426:3;10415:9;10411:19;10404:58;10524:2;10516:6;10512:15;10499:29;10493:3;10482:9;10478:19;10471:58;10592:3;10584:6;10580:16;10567:30;10560:4;10549:9;10545:20;10538:60;10641:56;10692:3;10684:6;10680:16;10672:6;10641:56;:::i;:::-;10734:4;10728:3;10717:9;10713:19;10706:33;10759:73;10828:2;10817:9;10813:18;10799:12;10785;10759:73;:::i;:::-;10748:84;;;10879:9;10874:3;10870:19;10863:4;10852:9;10848:20;10841:49;10909:6;10924:45;10965:3;10940:23;10956:6;10940:23;:::i;:::-;1212:13;1205:21;1193:34;;1142:91;10924:45;11000:37;11031:4;11023:6;11019:17;11000:37;:::i;:::-;2884:42;2873:54;11090:4;11081:14;;2861:67;11127:35;11158:2;11146:15;;11127:35;:::i;:::-;2884:42;2873:54;;11215:2;11206:12;;2861:67;11171:48;11274:2;11266:6;11262:15;11249:29;11244:2;11239:3;11235:12;11228:51;11335:3;11327:6;11323:16;11310:30;11304:3;11299;11295:13;11288:53;11397:3;11389:6;11385:16;11372:30;11366:3;11361;11357:13;11350:53;11434:37;11465:4;11457:6;11453:17;11434:37;:::i;:::-;2884:42;2873:54;11524:4;11515:14;;2861:67;11561:36;11592:3;11580:16;;11561:36;:::i;:::-;2884:42;2873:54;11650:3;11641:13;;2861:67;11698:15;;;11685:29;11671:12;;;11664:51;;;;11734:6;11783:15;;;11770:29;11756:12;;;11749:51;11819:6;11868:15;;;11855:29;11841:12;;;11834:51;11904:6;11953:15;;;11940:29;11926:12;;;11919:51;11989:6;;12042:55;12081:15;;;11698;12042:55;:::i;:::-;12127:2;12122;12117:3;12113:12;12106:24;12153:71;12220:2;12215:3;12211:12;12195:14;12179;12153:71;:::i;:::-;12139:85;;;;;12243:6;12280:33;12309:2;12301:6;12297:15;12280:33;:::i;:::-;9757:4;9746:16;12355:12;;;9734:29;12387:6;12436:15;;;12423:29;12409:12;;;12402:51;12472:6;12521:15;;;12508:29;12494:12;;12487:51;;;;-1:-1:-1;12487:51:19;;12555:6;-1:-1:-1;;9770:2797:19:o;12572:367::-;12657:6;12665;12673;12726:2;12714:9;12705:7;12701:23;12697:32;12694:52;;;12742:1;12739;12732:12;12694:52;12774:9;12768:16;12793:28;12815:5;12793:28;:::i;:::-;12885:2;12870:18;;12864:25;12929:2;12914:18;;;12908:25;12840:5;;12864:25;;-1:-1:-1;12908:25:19;12572:367;-1:-1:-1;;;12572:367:19:o;14338:184::-;14390:77;14387:1;14380:88;14487:4;14484:1;14477:15;14511:4;14508:1;14501:15;14527:128;14594:9;;;14615:11;;;14612:37;;;14629:18;;:::i;15726:184::-;15778:77;15775:1;15768:88;15875:4;15872:1;15865:15;15899:4;15896:1;15889:15;16328:195;16367:3;16398:66;16391:5;16388:77;16385:103;;16468:18;;:::i;:::-;-1:-1:-1;16515:1:19;16504:13;;16328:195::o;16528:490::-;16717:2;16706:9;16699:21;16756:6;16751:2;16740:9;16736:18;16729:34;16680:4;16786:66;16778:6;16775:78;16772:98;;;16866:1;16863;16856:12;16772:98;16900:6;16897:1;16893:14;16957:6;16949;16944:2;16933:9;16929:18;16916:48;16985:22;;;;17009:2;16981:31;;16528:490;-1:-1:-1;;;16528:490:19:o;17023:125::-;17088:9;;;17109:10;;;17106:36;;;17122:18;;:::i;18279:1214::-;18788:25;;;18856:14;;18849:22;18844:2;18829:18;;18822:50;18920:42;18908:55;;;18903:2;18888:18;;18881:83;2873:54;;19015:2;19000:18;;2861:67;18775:3;18760:19;;19056:6;19050:3;19039:9;19035:19;19028:35;19100:6;19094:3;19083:9;19079:19;19072:35;19144:6;19138:3;19127:9;19123:19;19116:35;19160:47;19202:3;19191:9;19187:19;19179:6;2884:42;2873:54;2861:67;;2807:127;19160:47;2884:42;2873:54;;19258:3;19243:19;;2861:67;19294:3;19279:19;;19272:35;;;;19338:3;19323:19;;19316:36;;;;19383:3;19368:19;;19361:36;;;;19428:3;19413:19;;19406:36;19473:3;19458:19;;;19451:36;18279:1214;;-1:-1:-1;;;;;;;;;18279:1214:19:o;21447:182::-;21504:6;21557:2;21545:9;21536:7;21532:23;21528:32;21525:52;;;21573:1;21570;21563:12;21525:52;21596:27;21613:9;21596:27;:::i;21981:245::-;22048:6;22101:2;22089:9;22080:7;22076:23;22072:32;22069:52;;;22117:1;22114;22107:12;22069:52;22149:9;22143:16;22168:28;22190:5;22168:28;:::i;23314:312::-;23393:6;23401;23454:2;23442:9;23433:7;23429:23;23425:32;23422:52;;;23470:1;23467;23460:12;23422:52;23502:9;23496:16;23521:31;23546:5;23521:31;:::i;:::-;23616:2;23601:18;;;;23595:25;23571:5;;23595:25;;-1:-1:-1;;;23314:312:19:o;23933:168::-;24006:9;;;24037;;24054:15;;;24048:22;;24034:37;24024:71;;24075:18;;:::i;24509:251::-;24579:6;24632:2;24620:9;24611:7;24607:23;24603:32;24600:52;;;24648:1;24645;24638:12;24600:52;24680:9;24674:16;24699:31;24724:5;24699:31;:::i;26926:250::-;27011:1;27021:113;27035:6;27032:1;27029:13;27021:113;;;27111:11;;;27105:18;27092:11;;;27085:39;27057:2;27050:10;27021:113;;;-1:-1:-1;;27168:1:19;27150:16;;27143:27;26926:250::o;27181:329::-;27222:3;27260:5;27254:12;27287:6;27282:3;27275:19;27303:76;27372:6;27365:4;27360:3;27356:14;27349:4;27342:5;27338:16;27303:76;:::i;:::-;27424:2;27412:15;27429:66;27408:88;27399:98;;;;27499:4;27395:109;;27181:329;-1:-1:-1;;27181:329:19:o;27515:288::-;27690:6;27679:9;27672:25;27733:2;27728;27717:9;27713:18;27706:30;27653:4;27753:44;27793:2;27782:9;27778:18;27770:6;27753:44;:::i;27808:336::-;27877:6;27930:2;27918:9;27909:7;27905:23;27901:32;27898:52;;;27946:1;27943;27936:12;27898:52;27978:9;27972:16;28028:66;28021:5;28017:78;28010:5;28007:89;27997:117;;28110:1;28107;28100:12;28149:184;28219:6;28272:2;28260:9;28251:7;28247:23;28243:32;28240:52;;;28288:1;28285;28278:12;28240:52;-1:-1:-1;28311:16:19;;28149:184;-1:-1:-1;28149:184:19:o;28338:274::-;28378:1;28404;28394:189;;28439:77;28436:1;28429:88;28540:4;28537:1;28530:15;28568:4;28565:1;28558:15;28394:189;-1:-1:-1;28597:9:19;;28338:274::o;31237:287::-;31366:3;31404:6;31398:13;31420:66;31479:6;31474:3;31467:4;31459:6;31455:17;31420:66;:::i;:::-;31502:16;;;;;31237:287;-1:-1:-1;;31237:287:19:o;31529:219::-;31678:2;31667:9;31660:21;31641:4;31698:44;31738:2;31727:9;31723:18;31715:6;31698:44;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3211400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "infinite",
								"cancelAllOrdersForSender(uint256)": "28399",
								"cancelMultipleMakerOrders(uint256[])": "infinite",
								"currencyManager()": "2349",
								"executionManager()": "2348",
								"isUserOrderNonceExecutedOrCancelled(address,uint256)": "2681",
								"matchSellerOrders((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "infinite",
								"matchSellerOrdersWETH((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "infinite",
								"matchesBuyerOrder((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "infinite",
								"owner()": "2363",
								"protocolFeeRecipient()": "2348",
								"renounceOwnership()": "infinite",
								"royaltyFeeManager()": "2347",
								"transferOwnership(address)": "infinite",
								"transferSelectorNFT()": "2369",
								"updateCurrencyManager(address)": "27885",
								"updateExecutionManager(address)": "27884",
								"updateProtocolFeeRecipient(address)": "27886",
								"updateRoyaltyFeeManager(address)": "27907",
								"updateTransferSelectorNFT(address)": "27928",
								"userMinOrderNonce(address)": "2569"
							},
							"internal": {
								"_calculateProtocolFee(address,uint256)": "infinite",
								"_transferFeesAndFunds(address,address,uint256,address,address,address,uint256,uint256)": "infinite",
								"_transferFeesAndFundsWithWETH(address,address,uint256,address,uint256,uint256)": "infinite",
								"_transferNonFungibleToken(address,address,address,uint256,uint256)": "infinite",
								"_validateOrder(struct OrderTypes.MakerOrder calldata,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3921,
									"end": 4493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3921,
									"end": 4493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4229,
									"end": 4244,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4229,
									"end": 4283,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4309,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 4293,
									"end": 4343,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4370,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4410,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 4420,
									"end": 4432,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4462,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4442,
									"end": 4486,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 19,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 355,
									"end": 408,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 355,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 404,
									"end": 405,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 402,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 394,
									"end": 406,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 355,
									"end": 408,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 355,
									"end": 408,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 457,
									"end": 466,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 427,
									"end": 467,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 427,
									"end": 467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 427,
									"end": 467,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 427,
									"end": 467,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 417,
									"end": 467,
									"name": "SWAP5",
									"source": 19
								},
								{
									"begin": 417,
									"end": 467,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 486,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 486,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 486,
									"end": 535,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 486,
									"end": 535,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 476,
									"end": 535,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 476,
									"end": 535,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 599,
									"end": 601,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 588,
									"end": 597,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 584,
									"end": 602,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 554,
									"end": 603,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 554,
									"end": 603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 554,
									"end": 603,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 554,
									"end": 603,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 544,
									"end": 603,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 544,
									"end": 603,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 667,
									"end": 669,
									"name": "PUSH",
									"source": 19,
									"value": "60"
								},
								{
									"begin": 656,
									"end": 665,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 652,
									"end": 670,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 622,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 622,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 622,
									"end": 671,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 622,
									"end": 671,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 612,
									"end": 671,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 612,
									"end": 671,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 735,
									"end": 738,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 724,
									"end": 733,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 720,
									"end": 739,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 690,
									"end": 740,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "17"
								},
								{
									"begin": 690,
									"end": 740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 690,
									"end": 740,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 690,
									"end": 740,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 680,
									"end": 740,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 680,
									"end": 740,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 196,
									"end": 746,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 196,
									"end": 746,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "960"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 995,
									"end": 23307,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e3f069888d19a53f22370805c756b9a209e773dd85833c0bde3d962ae95ed3564736f6c63430008110033",
									".code": [
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "64DF049E"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "AD5C4648"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "D4FF41DC"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "D4FF41DC"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "F75FF53F"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "AD5C4648"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "C5498769"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "CBD2EC65"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "87E4401F"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "87E4401F"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "9E53A69A"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "64DF049E"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "483ABB9F"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "5CE052D7"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "5CE052D7"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "5E14F68E"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "63521DEF"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "483ABB9F"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "509A1A41"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "31E27E27"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "31E27E27"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "4266581E"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "45EA7231"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "F747D74"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "1DF47F80"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 23307,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 260,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 187,
											"end": 261,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 187,
											"end": 261,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 175,
											"end": 177,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2146,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 22177,
											"end": 22385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 22177,
											"end": 22385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 12455,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12455,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1378,
											"end": 1419,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1378,
											"end": 1419,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1366,
											"end": 1368,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1369,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1238,
											"end": 1425,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2328,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1576,
											"end": 1601,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1576,
											"end": 1601,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1576,
											"end": 1601,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2328,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1430,
											"end": 1607,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 7032,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 7032,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2188,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4711,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4711,
											"end": 6837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 21280,
											"end": 21562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 21280,
											"end": 21562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2288,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 9001,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 9001,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2097,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2236,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 11688,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11688,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 22542,
											"end": 22837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 22542,
											"end": 22837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 11044,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 11044,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 21719,
											"end": 22002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 21719,
											"end": 22002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 22993,
											"end": 23304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 22993,
											"end": 23304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22273,
											"end": 22293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 22273,
											"end": 22317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22273,
											"end": 22317,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 22332,
											"end": 22378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22332,
											"end": 22378,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22332,
											"end": 22378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8CFFB07FAA2874440346743BDC0A86B06C3335CC47DC49B327D10E77B73CEB10"
										},
										{
											"begin": 22332,
											"end": 22378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22332,
											"end": 22378,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22177,
											"end": 22385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12557,
											"end": 12561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12656,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12624,
											"end": 12674,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12455,
											"end": 12681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 7032,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4446,
											"end": 4476,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4512,
											"end": 4545,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4485,
											"end": 4546,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7266,
											"end": 7285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 7266,
											"end": 7285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 7266,
											"end": 7285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7292,
											"end": 7311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7300,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 7292,
											"end": 7311,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7292,
											"end": 7311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7291,
											"end": 7311,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 7265,
											"end": 7312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7339,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7257,
											"end": 7339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5308,
											"end": 5338,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "PUSH",
											"source": 19,
											"value": "4572726F722041626F7574204F72646572205369646500000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5094,
											"end": 5440,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 7257,
											"end": 7339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7412,
											"end": 7426,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7412,
											"end": 7426,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7412,
											"end": 7426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7408,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7426,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7455,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7390,
											"end": 7455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7390,
											"end": 7455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5650,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5686,
											"end": 5688,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5659,
											"end": 5689,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5725,
											"end": 5751,
											"name": "PUSH",
											"source": 19,
											"value": "4F72646572206D757374206265207468652073656E6465720000000000000000"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5698,
											"end": 5752,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5445,
											"end": 5793,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 7390,
											"end": 7455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 7515,
											"end": 7523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7515,
											"end": 7528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 7515,
											"end": 7530,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 7515,
											"end": 7530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7530,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7555,
											"end": 7563,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7565,
											"end": 7572,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 7540,
											"end": 7573,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7540,
											"end": 7573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7596,
											"end": 7617,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7668,
											"end": 7685,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7668,
											"end": 7685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7654,
											"end": 7710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D310677D"
										},
										{
											"begin": 7711,
											"end": 7719,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7729,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 7654,
											"end": 7730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 7654,
											"end": 7730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 7654,
											"end": 7730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7784,
											"end": 7800,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7829,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7776,
											"end": 7829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13146,
											"end": 13148,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7776,
											"end": 7829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13149,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13185,
											"end": 13187,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13158,
											"end": 13188,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13224,
											"end": 13250,
											"name": "PUSH",
											"source": 19,
											"value": "53747261746567792073686F756C642062652076616C69640000000000000000"
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13197,
											"end": 13251,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 12944,
											"end": 13292,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 7776,
											"end": 7829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7997,
											"end": 8001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7929,
											"end": 7961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7962,
											"end": 7977,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7962,
											"end": 7977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 7962,
											"end": 7977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7978,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7979,
											"end": 7993,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7993,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7994,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 8001,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 8072,
											"end": 8089,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8072,
											"end": 8089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 8072,
											"end": 8089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8122,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8103,
											"end": 8122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 8103,
											"end": 8122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8136,
											"end": 8143,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8157,
											"end": 8174,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8157,
											"end": 8174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 8157,
											"end": 8174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8198,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8212,
											"end": 8227,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8212,
											"end": 8227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8212,
											"end": 8227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8241,
											"end": 8249,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8241,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8241,
											"end": 8255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8241,
											"end": 8255,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8277,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8269,
											"end": 8296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8269,
											"end": 8296,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8037,
											"end": 8306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8037,
											"end": 8306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 8037,
											"end": 8306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8379,
											"end": 8398,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8379,
											"end": 8398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 8379,
											"end": 8398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8412,
											"end": 8427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 8412,
											"end": 8427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8441,
											"end": 8455,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8441,
											"end": 8455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 8441,
											"end": 8455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8469,
											"end": 8476,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8496,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 8340,
											"end": 8497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8340,
											"end": 8497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 8340,
											"end": 8497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 8641,
											"end": 8658,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8641,
											"end": 8658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 8641,
											"end": 8658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8612,
											"end": 8627,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8612,
											"end": 8627,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 8612,
											"end": 8627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8584,
											"end": 8598,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8584,
											"end": 8598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 8584,
											"end": 8598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "95FB6205E23FF6BDA16A2D1DBA56B9AD7C783F67C96FA149785052F47696F2BE"
										},
										{
											"begin": 8535,
											"end": 8542,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8556,
											"end": 8570,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 8672,
											"end": 8689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8672,
											"end": 8689,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8672,
											"end": 8689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 8672,
											"end": 8689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8703,
											"end": 8722,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 8703,
											"end": 8722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 8703,
											"end": 8722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8801,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13612,
											"end": 13637,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 13612,
											"end": 13637,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13612,
											"end": 13637,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13668,
											"end": 13670,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13653,
											"end": 13671,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13653,
											"end": 13671,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13646,
											"end": 13680,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13646,
											"end": 13680,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13646,
											"end": 13680,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13646,
											"end": 13680,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13699,
											"end": 13741,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13777,
											"end": 13792,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13777,
											"end": 13792,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13777,
											"end": 13792,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13757,
											"end": 13775,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13750,
											"end": 13793,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13829,
											"end": 13844,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 13824,
											"end": 13826,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 13809,
											"end": 13827,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13809,
											"end": 13827,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13802,
											"end": 13845,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13876,
											"end": 13879,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 13861,
											"end": 13880,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13861,
											"end": 13880,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13854,
											"end": 13889,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 13854,
											"end": 13889,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13854,
											"end": 13889,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13920,
											"end": 13923,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 13905,
											"end": 13924,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13905,
											"end": 13924,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13898,
											"end": 13933,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 13898,
											"end": 13933,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13898,
											"end": 13933,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8777,
											"end": 8791,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8791,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 13964,
											"end": 13967,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 13949,
											"end": 13968,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13949,
											"end": 13968,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13942,
											"end": 13977,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13599,
											"end": 13602,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 13584,
											"end": 13603,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8801,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7032,
											"end": 8808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 4711,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4446,
											"end": 4476,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4512,
											"end": 4545,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4485,
											"end": 4546,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4232,
											"end": 4587,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4904,
											"end": 4923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4904,
											"end": 4923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4938,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 4930,
											"end": 4949,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4930,
											"end": 4949,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4949,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 4903,
											"end": 4950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4977,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4895,
											"end": 4977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4895,
											"end": 4977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5308,
											"end": 5338,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "PUSH",
											"source": 19,
											"value": "4572726F722041626F7574204F72646572205369646500000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5094,
											"end": 5440,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4895,
											"end": 4977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5046,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5025,
											"end": 5042,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5050,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14190,
											"end": 14192,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5017,
											"end": 5076,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14172,
											"end": 14193,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14229,
											"end": 14231,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14202,
											"end": 14232,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14268,
											"end": 14291,
											"name": "PUSH",
											"source": 19,
											"value": "43757272656E6379206D75737420626520574554480000000000000000000000"
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14248,
											"end": 14266,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14241,
											"end": 14292,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14309,
											"end": 14327,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 14309,
											"end": 14327,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 13988,
											"end": 14333,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 5017,
											"end": 5076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5108,
											"end": 5122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5108,
											"end": 5122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5104,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5122,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5086,
											"end": 5151,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5086,
											"end": 5151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5086,
											"end": 5151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5650,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5686,
											"end": 5688,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5659,
											"end": 5689,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5725,
											"end": 5751,
											"name": "PUSH",
											"source": 19,
											"value": "4F72646572206D757374206265207468652073656E6465720000000000000000"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5698,
											"end": 5752,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5445,
											"end": 5793,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 5086,
											"end": 5151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5237,
											"end": 5246,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5228,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5220,
											"end": 5234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5234,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5246,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 5292,
											"end": 5302,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5316,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 5337,
											"end": 5346,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5334,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5334,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 5320,
											"end": 5346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 5320,
											"end": 5346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5269,
											"end": 5273,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 5262,
											"end": 5291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 5262,
											"end": 5348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 5262,
											"end": 5348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5216,
											"end": 5451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5414,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5387,
											"end": 5401,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5401,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5414,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14862,
											"end": 14864,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5379,
											"end": 5440,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14844,
											"end": 14865,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14901,
											"end": 14903,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 14881,
											"end": 14899,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14881,
											"end": 14899,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14881,
											"end": 14899,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14874,
											"end": 14904,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14940,
											"end": 14963,
											"name": "PUSH",
											"source": 19,
											"value": "4D73672E76616C756520697320746F6F20686967680000000000000000000000"
										},
										{
											"begin": 14920,
											"end": 14938,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 14920,
											"end": 14938,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14920,
											"end": 14938,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14913,
											"end": 14964,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14981,
											"end": 14999,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 14981,
											"end": 14999,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 14660,
											"end": 15005,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5379,
											"end": 5440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5490,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 5484,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D0E30DB0"
										},
										{
											"begin": 5512,
											"end": 5521,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 5596,
											"end": 5604,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 5596,
											"end": 5609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 5596,
											"end": 5609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5596,
											"end": 5611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 5596,
											"end": 5611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5611,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5636,
											"end": 5644,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5646,
											"end": 5653,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5621,
											"end": 5654,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 5621,
											"end": 5654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5706,
											"end": 5727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 5778,
											"end": 5795,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5778,
											"end": 5795,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 5778,
											"end": 5795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D310677D"
										},
										{
											"begin": 5821,
											"end": 5829,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5831,
											"end": 5839,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5764,
											"end": 5840,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5764,
											"end": 5840,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5764,
											"end": 5840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5840,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13146,
											"end": 13148,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5851,
											"end": 5904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13149,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13185,
											"end": 13187,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13158,
											"end": 13188,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13224,
											"end": 13250,
											"name": "PUSH",
											"source": 19,
											"value": "53747261746567792073686F756C642062652076616C69640000000000000000"
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13197,
											"end": 13251,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 12944,
											"end": 13292,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5851,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6004,
											"end": 6036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6037,
											"end": 6052,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6037,
											"end": 6052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6037,
											"end": 6052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6053,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6054,
											"end": 6068,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6068,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6069,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6004,
											"end": 6076,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 6155,
											"end": 6172,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6155,
											"end": 6172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 6155,
											"end": 6172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6186,
											"end": 6205,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6186,
											"end": 6205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6186,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6255,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6240,
											"end": 6255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6240,
											"end": 6255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6277,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6269,
											"end": 6283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6283,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6305,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 6297,
											"end": 6324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6297,
											"end": 6324,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6112,
											"end": 6334,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21374,
											"end": 21404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21374,
											"end": 21404,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21374,
											"end": 21404,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21366,
											"end": 21440,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21366,
											"end": 21440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21366,
											"end": 21440,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15212,
											"end": 15214,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21366,
											"end": 21440,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15194,
											"end": 15215,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15224,
											"end": 15254,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F742075706461746520746F2061206E756C6C206164647265737300"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15263,
											"end": 15324,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 15010,
											"end": 15365,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 21366,
											"end": 21440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 21450,
											"end": 21504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21450,
											"end": 21504,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21519,
											"end": 21555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21519,
											"end": 21555,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21519,
											"end": 21555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B4F5DB40DF3ACED29E88A4BABBC3B46E305E07D34098525D18B1497056E63838"
										},
										{
											"begin": 21519,
											"end": 21555,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21519,
											"end": 21555,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21280,
											"end": 21562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 9001,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4437,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4453,
											"end": 4471,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4446,
											"end": 4476,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4512,
											"end": 4545,
											"name": "PUSH",
											"source": 19,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4485,
											"end": 4546,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4232,
											"end": 4587,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9289,
											"end": 9308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9297,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 9289,
											"end": 9308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 9289,
											"end": 9308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9288,
											"end": 9308,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 9287,
											"end": 9334,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9314,
											"end": 9333,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9322,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 9314,
											"end": 9333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 9314,
											"end": 9333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9279,
											"end": 9361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9279,
											"end": 9361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9279,
											"end": 9361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5335,
											"end": 5337,
											"name": "PUSH",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5315,
											"end": 5333,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5308,
											"end": 5338,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5374,
											"end": 5398,
											"name": "PUSH",
											"source": 19,
											"value": "4572726F722041626F7574204F72646572205369646500000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5347,
											"end": 5399,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5094,
											"end": 5440,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9279,
											"end": 9361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9434,
											"end": 9448,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 9434,
											"end": 9448,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9434,
											"end": 9448,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9430,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9420,
											"end": 9448,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9412,
											"end": 9477,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9412,
											"end": 9477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9412,
											"end": 9477,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5650,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5686,
											"end": 5688,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5659,
											"end": 5689,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5725,
											"end": 5751,
											"name": "PUSH",
											"source": 19,
											"value": "4F72646572206D757374206265207468652073656E6465720000000000000000"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5698,
											"end": 5752,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 5445,
											"end": 5793,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9412,
											"end": 9477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9521,
											"end": 9536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 9539,
											"end": 9552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 9539,
											"end": 9547,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9539,
											"end": 9552,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9554,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 9539,
											"end": 9554,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9521,
											"end": 9554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9521,
											"end": 9554,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9606,
											"end": 9639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9621,
											"end": 9629,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9631,
											"end": 9638,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9606,
											"end": 9620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 9606,
											"end": 9639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9606,
											"end": 9639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9606,
											"end": 9639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9736,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 9787,
											"end": 9804,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 9787,
											"end": 9804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9787,
											"end": 9804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9773,
											"end": 9828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2A75FFEE"
										},
										{
											"begin": 9829,
											"end": 9837,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9839,
											"end": 9847,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 9773,
											"end": 9848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9848,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 9773,
											"end": 9848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 9773,
											"end": 9848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9714,
											"end": 9848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9867,
											"end": 9883,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9912,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13146,
											"end": 13148,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13128,
											"end": 13149,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13185,
											"end": 13187,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13158,
											"end": 13188,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13224,
											"end": 13250,
											"name": "PUSH",
											"source": 19,
											"value": "53747261746567792073686F756C642062652076616C69640000000000000000"
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13204,
											"end": 13222,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13197,
											"end": 13251,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 13268,
											"end": 13286,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 12944,
											"end": 13292,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 9859,
											"end": 9912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10080,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10012,
											"end": 10044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10045,
											"end": 10060,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10045,
											"end": 10060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10061,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10062,
											"end": 10076,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10062,
											"end": 10076,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10077,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10119,
											"end": 10272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10158,
											"end": 10177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 10158,
											"end": 10177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10191,
											"end": 10201,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10215,
											"end": 10230,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10215,
											"end": 10230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10119,
											"end": 10272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 10119,
											"end": 10272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 10343,
											"end": 10360,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10343,
											"end": 10360,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10343,
											"end": 10360,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10374,
											"end": 10393,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10374,
											"end": 10393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10374,
											"end": 10393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10414,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10428,
											"end": 10445,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10428,
											"end": 10445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 10428,
											"end": 10445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10459,
											"end": 10474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10459,
											"end": 10474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10488,
											"end": 10502,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10488,
											"end": 10502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 10488,
											"end": 10502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10516,
											"end": 10524,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 10516,
											"end": 10530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10516,
											"end": 10530,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10516,
											"end": 10530,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10552,
											"modifierDepth": 1,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10544,
											"end": 10571,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10571,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 10308,
											"end": 10581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10308,
											"end": 10581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 10308,
											"end": 10581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10725,
											"end": 10742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10725,
											"end": 10742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10696,
											"end": 10711,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10696,
											"end": 10711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10696,
											"end": 10711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10668,
											"end": 10682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 10668,
											"end": 10682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10597,
											"end": 10885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "68CD251D4D267C6E2034FF0088B990352B97B2002C0476587D0C4DA889C11330"
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 10640,
											"end": 10654,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 10756,
											"end": 10773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 10756,
											"end": 10773,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10756,
											"end": 10773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 10756,
											"end": 10773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11780,
											"end": 11800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15572,
											"end": 15574,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15554,
											"end": 15575,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15611,
											"end": 15613,
											"name": "PUSH",
											"source": 19,
											"value": "1B"
										},
										{
											"begin": 15591,
											"end": 15609,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15591,
											"end": 15609,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15591,
											"end": 15609,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15584,
											"end": 15614,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15650,
											"end": 15679,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F7420626520656D7074792043616E63656C206C6973740000000000"
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15623,
											"end": 15680,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 15370,
											"end": 15721,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 11772,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11848,
											"end": 11857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11883,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11946,
											"end": 11956,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11945,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11928,
											"end": 11957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11922,
											"end": 11923,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 11912,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11924,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11957,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11957,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16117,
											"end": 16119,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16099,
											"end": 16120,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16156,
											"end": 16158,
											"name": "PUSH",
											"source": 19,
											"value": "2C"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16129,
											"end": 16159,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16195,
											"end": 16229,
											"name": "PUSH",
											"source": 19,
											"value": "43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220"
										},
										{
											"begin": 16175,
											"end": 16193,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 16175,
											"end": 16193,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16175,
											"end": 16193,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16168,
											"end": 16230,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16266,
											"end": 16280,
											"name": "PUSH",
											"source": 19,
											"value": "7468616E2063757272656E740000000000000000000000000000000000000000"
										},
										{
											"begin": 16246,
											"end": 16264,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 16246,
											"end": 16264,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16246,
											"end": 16264,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16239,
											"end": 16281,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16298,
											"end": 16317,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 16298,
											"end": 16317,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 15915,
											"end": 16323,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 11904,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12053,
											"end": 12063,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12052,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12064,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12081,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12081,
											"end": 12085,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12074,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12074,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12065,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12065,
											"end": 12077,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12020,
											"end": 12085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 11885,
											"end": 11888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11885,
											"end": 11888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11843,
											"end": 12096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12132,
											"end": 12142,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "FA0AE5D80FE3763C880A3839FAB0294171A6F730D1F82C4CD5392C6F67B41732"
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12144,
											"end": 12153,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 12111,
											"end": 12154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12111,
											"end": 12154,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 12161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22640,
											"end": 22672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22640,
											"end": 22672,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22632,
											"end": 22708,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22632,
											"end": 22708,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15212,
											"end": 15214,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22632,
											"end": 22708,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15194,
											"end": 15215,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15224,
											"end": 15254,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F742075706461746520746F2061206E756C6C206164647265737300"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15263,
											"end": 15324,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 15010,
											"end": 15365,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 22632,
											"end": 22708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 22718,
											"end": 22775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22718,
											"end": 22775,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 22790,
											"end": 22830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22790,
											"end": 22830,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22790,
											"end": 22830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "80E3874461EBBD918AC3E81DA0A92E5E51387D70F337237C9123E48D20E5A508"
										},
										{
											"begin": 22790,
											"end": 22830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 22790,
											"end": 22830,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22542,
											"end": 22837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11152,
											"end": 11162,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11151,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11134,
											"end": 11163,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11123,
											"end": 11163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11123,
											"end": 11163,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16117,
											"end": 16119,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16099,
											"end": 16120,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16156,
											"end": 16158,
											"name": "PUSH",
											"source": 19,
											"value": "2C"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16136,
											"end": 16154,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16129,
											"end": 16159,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16195,
											"end": 16229,
											"name": "PUSH",
											"source": 19,
											"value": "43616E63656C204F72646572206E6F6E63652063616E6E6F74206C6F77657220"
										},
										{
											"begin": 16175,
											"end": 16193,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 16175,
											"end": 16193,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16175,
											"end": 16193,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16168,
											"end": 16230,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16266,
											"end": 16280,
											"name": "PUSH",
											"source": 19,
											"value": "7468616E2063757272656E740000000000000000000000000000000000000000"
										},
										{
											"begin": 16246,
											"end": 16264,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 16246,
											"end": 16264,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16246,
											"end": 16264,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16239,
											"end": 16281,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16298,
											"end": 16317,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 16298,
											"end": 16317,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 15915,
											"end": 16323,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 11115,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11259,
											"end": 11269,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11258,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11270,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11279,
											"name": "PUSH",
											"source": 8,
											"value": "7A120"
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 11241,
											"end": 11279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 11241,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11279,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17355,
											"end": 17357,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17358,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17394,
											"end": 17396,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17374,
											"end": 17392,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17367,
											"end": 17397,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17433,
											"end": 17464,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F742063616E63656C20746F6F206D616E79206F7264657273000000"
										},
										{
											"begin": 17413,
											"end": 17431,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 17413,
											"end": 17431,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17413,
											"end": 17431,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17406,
											"end": 17465,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17482,
											"end": 17500,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 17482,
											"end": 17500,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 17153,
											"end": 17506,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 11222,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11437,
											"end": 11447,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11436,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11448,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11419,
											"end": 11459,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "1E7178D84F0B0825C65795CD62E7972809AD3AAC6917843AAEC596161B2C0A97"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11451,
											"end": 11459,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1576,
											"end": 1601,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1576,
											"end": 1601,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1549,
											"end": 1567,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1430,
											"end": 1607,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11512,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11044,
											"end": 11519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21815,
											"end": 21846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21815,
											"end": 21846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21815,
											"end": 21846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21807,
											"end": 21882,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21807,
											"end": 21882,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21807,
											"end": 21882,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15212,
											"end": 15214,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21807,
											"end": 21882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15194,
											"end": 15215,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15224,
											"end": 15254,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F742075706461746520746F2061206E756C6C206164647265737300"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15263,
											"end": 15324,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 15010,
											"end": 15365,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 21807,
											"end": 21882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 21892,
											"end": 21942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21892,
											"end": 21942,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 21957,
											"end": 21995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21957,
											"end": 21995,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21957,
											"end": 21995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "36E2A376EABC3BC60CB88F29C288F53E36874A95A7F407330AB4F166B0905698"
										},
										{
											"begin": 21957,
											"end": 21995,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 21957,
											"end": 21995,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21719,
											"end": 22002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17713,
											"end": 17715,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17695,
											"end": 17716,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17752,
											"end": 17754,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17725,
											"end": 17755,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17791,
											"end": 17825,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17771,
											"end": 17789,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 17771,
											"end": 17789,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17771,
											"end": 17789,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17764,
											"end": 17826,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17862,
											"end": 17870,
											"name": "PUSH",
											"source": 19,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17835,
											"end": 17871,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17888,
											"end": 17907,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 17888,
											"end": 17907,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17511,
											"end": 17913,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23095,
											"end": 23129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23095,
											"end": 23129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23095,
											"end": 23129,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23087,
											"end": 23165,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23087,
											"end": 23165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23087,
											"end": 23165,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15212,
											"end": 15214,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 23087,
											"end": 23165,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15194,
											"end": 15215,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15231,
											"end": 15249,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15224,
											"end": 15254,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15290,
											"end": 15323,
											"name": "PUSH",
											"source": 19,
											"value": "43616E6E6F742075706461746520746F2061206E756C6C206164647265737300"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15270,
											"end": 15288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15263,
											"end": 15324,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 15341,
											"end": 15359,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 15010,
											"end": 15365,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 23087,
											"end": 23165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 23175,
											"end": 23238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23175,
											"end": 23238,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 23253,
											"end": 23297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 23253,
											"end": 23297,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23253,
											"end": 23297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "205D78AB41AFE80BD6B6AAA5D7599D5300FF8690DA3AB1302C1B552F7BAF7D8C"
										},
										{
											"begin": 23253,
											"end": 23297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 23253,
											"end": 23297,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22993,
											"end": 23304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18120,
											"end": 18122,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18102,
											"end": 18123,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18102,
											"end": 18123,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18102,
											"end": 18123,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18139,
											"end": 18157,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 18139,
											"end": 18157,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18139,
											"end": 18157,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18132,
											"end": 18162,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18198,
											"end": 18232,
											"name": "PUSH",
											"source": 19,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18178,
											"end": 18196,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 18178,
											"end": 18196,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18178,
											"end": 18196,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18171,
											"end": 18233,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18250,
											"end": 18268,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 18250,
											"end": 18268,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17918,
											"end": 18274,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "PUSH",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "PUSH",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "PUSH",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "DUP15",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "PUSH",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "DUP16",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2744,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "DUP15",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2745,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SWAP11",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "SWAP15",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SWAP15",
											"source": 17
										},
										{
											"begin": 592,
											"end": 658,
											"name": "PUSH",
											"source": 17,
											"value": "40261ADE532FA1D2C7293DF30AAADB9B3C616FAE525A0B56D3D411C841A85028"
										},
										{
											"begin": 592,
											"end": 658,
											"name": "SWAP15",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2270,
											"end": 2291,
											"name": "SWAP14",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "SWAP13",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "SWAP12",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2399,
											"name": "SWAP11",
											"source": 17
										},
										{
											"begin": 2417,
											"end": 2435,
											"name": "SWAP10",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2470,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2507,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2562,
											"end": 2578,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 2596,
											"end": 2616,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2670,
											"end": 2699,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 2208,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2759,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2769,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2170,
											"end": 2769,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2170,
											"end": 2769,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19013,
											"end": 21124,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 19013,
											"end": 21124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19271,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 19272,
											"end": 19283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 19272,
											"end": 19283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19284,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19285,
											"end": 19295,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 19239,
											"end": 19296,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19238,
											"end": 19296,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19328,
											"end": 19345,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 19346,
											"end": 19357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 19346,
											"end": 19357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19358,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19318,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19324,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 19314,
											"end": 19324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19324,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19358,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19314,
											"end": 19358,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 19237,
											"end": 19359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19700,
											"end": 19702,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19682,
											"end": 19703,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19739,
											"end": 19741,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 19719,
											"end": 19737,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 19719,
											"end": 19737,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19719,
											"end": 19737,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19712,
											"end": 19742,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19778,
											"end": 19809,
											"name": "PUSH",
											"source": 19,
											"value": "4F726465723A204D61746368696E67206F726465722065787069726564000000"
										},
										{
											"begin": 19758,
											"end": 19776,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 19758,
											"end": 19776,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19758,
											"end": 19776,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19751,
											"end": 19810,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19827,
											"end": 19845,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 19827,
											"end": 19845,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 19498,
											"end": 19851,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 19162,
											"end": 19414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19497,
											"end": 19498,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 19474,
											"end": 19485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 19474,
											"end": 19485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19499,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19474,
											"end": 19499,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19474,
											"end": 19499,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20058,
											"end": 20060,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20040,
											"end": 20061,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20097,
											"end": 20099,
											"name": "PUSH",
											"source": 19,
											"value": "2B"
										},
										{
											"begin": 20077,
											"end": 20095,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 20077,
											"end": 20095,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20077,
											"end": 20095,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20070,
											"end": 20100,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20136,
											"end": 20170,
											"name": "PUSH",
											"source": 19,
											"value": "546865204F72646572207369676E65722063616E6E6F7420626520746865207A"
										},
										{
											"begin": 20116,
											"end": 20134,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 20116,
											"end": 20134,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20116,
											"end": 20134,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20109,
											"end": 20171,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20207,
											"end": 20220,
											"name": "PUSH",
											"source": 19,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 20187,
											"end": 20205,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 20187,
											"end": 20205,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20187,
											"end": 20205,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20180,
											"end": 20221,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20238,
											"end": 20257,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 20238,
											"end": 20257,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 19856,
											"end": 20263,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 19466,
											"end": 19547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19611,
											"end": 19615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19611,
											"end": 19622,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 19611,
											"end": 19622,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19611,
											"end": 19622,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 19611,
											"end": 19626,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20470,
											"end": 20472,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20452,
											"end": 20473,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20509,
											"end": 20511,
											"name": "PUSH",
											"source": 19,
											"value": "29"
										},
										{
											"begin": 20489,
											"end": 20507,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 20489,
											"end": 20507,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20489,
											"end": 20507,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20482,
											"end": 20512,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20548,
											"end": 20582,
											"name": "PUSH",
											"source": 19,
											"value": "546865206F7264657220616D6F756E742073686F756C64206265206772656174"
										},
										{
											"begin": 20528,
											"end": 20546,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 20528,
											"end": 20546,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20528,
											"end": 20546,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20521,
											"end": 20583,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20619,
											"end": 20630,
											"name": "PUSH",
											"source": 19,
											"value": "6572207468616E20300000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20599,
											"end": 20617,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 20599,
											"end": 20617,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20599,
											"end": 20617,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20592,
											"end": 20631,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20648,
											"end": 20667,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 20648,
											"end": 20667,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 20268,
											"end": 20673,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 19603,
											"end": 19672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19749,
											"end": 19815,
											"name": "PUSH",
											"source": 8,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21189,
											"end": 21214,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19944,
											"end": 20010,
											"name": "PUSH",
											"source": 8,
											"value": "2E3445393F211D11D7F88D325BC26CE78976B4DECD39029FEB202D9B409FC3C5"
										},
										{
											"begin": 21230,
											"end": 21248,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21230,
											"end": 21248,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21230,
											"end": 21248,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21223,
											"end": 21257,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21223,
											"end": 21257,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21223,
											"end": 21257,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21223,
											"end": 21257,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20070,
											"end": 20136,
											"name": "PUSH",
											"source": 8,
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 21273,
											"end": 21291,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 21273,
											"end": 21291,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21273,
											"end": 21291,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21266,
											"end": 21300,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20209,
											"end": 20222,
											"name": "CHAINID",
											"source": 8
										},
										{
											"begin": 21316,
											"end": 21334,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 21316,
											"end": 21334,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21316,
											"end": 21334,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21309,
											"end": 21343,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20248,
											"end": 20252,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 21359,
											"end": 21378,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 21359,
											"end": 21378,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21359,
											"end": 21378,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21352,
											"end": 21436,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19683,
											"end": 19697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19683,
											"end": 19697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21161,
											"end": 21180,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 21161,
											"end": 21180,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19721,
											"end": 20267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 20277,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 20277,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 20277,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 20277,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19698,
											"end": 20277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19698,
											"end": 20277,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 19683,
											"end": 20277,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19683,
											"end": 20277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20482,
											"end": 20748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 20536,
											"end": 20540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20569,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 20565,
											"end": 20576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 20565,
											"end": 20576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "PUSH",
											"source": 8,
											"value": "1C0"
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "PUSH",
											"source": 8,
											"value": "1A0"
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 20612,
											"end": 20618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 20612,
											"end": 20618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20680,
											"end": 20684,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20680,
											"end": 20686,
											"name": "PUSH",
											"source": 8,
											"value": "1C0"
										},
										{
											"begin": 20680,
											"end": 20686,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20680,
											"end": 20686,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 20704,
											"end": 20708,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20704,
											"end": 20710,
											"name": "PUSH",
											"source": 8,
											"value": "1E0"
										},
										{
											"begin": 20704,
											"end": 20710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20704,
											"end": 20710,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 20728,
											"end": 20734,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20482,
											"end": 20518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 20482,
											"end": 20748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20482,
											"end": 20748,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 20482,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21836,
											"end": 21838,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21818,
											"end": 21839,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21875,
											"end": 21877,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 21855,
											"end": 21873,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 21855,
											"end": 21873,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21855,
											"end": 21873,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21848,
											"end": 21878,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21914,
											"end": 21934,
											"name": "PUSH",
											"source": 19,
											"value": "5369676E61747572653A20496E76616C69640000000000000000000000000000"
										},
										{
											"begin": 21894,
											"end": 21912,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 21894,
											"end": 21912,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21894,
											"end": 21912,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21887,
											"end": 21935,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21952,
											"end": 21970,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 21952,
											"end": 21970,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 21634,
											"end": 21976,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 20461,
											"end": 20792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20869,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 20854,
											"end": 20869,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20869,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20854,
											"end": 20869,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20891,
											"name": "PUSH",
											"source": 8,
											"value": "43B938C5"
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 20854,
											"end": 20869,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 20892,
											"end": 20905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 20892,
											"end": 20905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 260,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 187,
											"end": 261,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 160,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 20854,
											"end": 20906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 20854,
											"end": 20906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22433,
											"end": 22435,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22415,
											"end": 22436,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22472,
											"end": 22474,
											"name": "PUSH",
											"source": 19,
											"value": "1A"
										},
										{
											"begin": 22452,
											"end": 22470,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 22452,
											"end": 22470,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22452,
											"end": 22470,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22445,
											"end": 22475,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22511,
											"end": 22539,
											"name": "PUSH",
											"source": 19,
											"value": "204E6F7420696E2043757272656E63792077686974656C697374000000000000"
										},
										{
											"begin": 22491,
											"end": 22509,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 22491,
											"end": 22509,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22491,
											"end": 22509,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22484,
											"end": 22540,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22557,
											"end": 22575,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 22557,
											"end": 22575,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 22231,
											"end": 22581,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 20846,
											"end": 20937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21049,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21033,
											"end": 21049,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21049,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21033,
											"end": 21049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21071,
											"name": "PUSH",
											"source": 8,
											"value": "999BA27C"
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 21072,
											"end": 21085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 21072,
											"end": 21085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 217,
											"end": 259,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 260,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 187,
											"end": 261,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 160,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 21033,
											"end": 21086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 21033,
											"end": 21086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22788,
											"end": 22790,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22770,
											"end": 22791,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22827,
											"end": 22829,
											"name": "PUSH",
											"source": 19,
											"value": "1A"
										},
										{
											"begin": 22807,
											"end": 22825,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 22807,
											"end": 22825,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22807,
											"end": 22825,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22800,
											"end": 22830,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22866,
											"end": 22894,
											"name": "PUSH",
											"source": 19,
											"value": "204E6F7420696E2053747261746567792077686974656C697374000000000000"
										},
										{
											"begin": 22846,
											"end": 22864,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 22846,
											"end": 22864,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22846,
											"end": 22864,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22839,
											"end": 22895,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22912,
											"end": 22930,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 22912,
											"end": 22930,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 22586,
											"end": 22936,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 21025,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19102,
											"end": 21124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 21124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 21124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19013,
											"end": 21124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13591,
											"end": 13616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 13736,
											"end": 13744,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13714,
											"end": 13735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 13714,
											"end": 13753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13714,
											"end": 13753,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 13714,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14042,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 14022,
											"end": 14042,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14022,
											"end": 14042,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14022,
											"end": 14056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14062,
											"end": 14084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14062,
											"end": 14084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14062,
											"end": 14084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 14021,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14161,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 14141,
											"end": 14161,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14161,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14135,
											"end": 14139,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14135,
											"end": 14139,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14161,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14163,
											"end": 14180,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14101,
											"end": 14181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 14101,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 14216,
											"end": 14233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 14195,
											"end": 14233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14195,
											"end": 14233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14017,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "F4F635FA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23161,
											"end": 23216,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 23161,
											"end": 23216,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23161,
											"end": 23216,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23143,
											"end": 23217,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23233,
											"end": 23251,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 23233,
											"end": 23251,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23233,
											"end": 23251,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23226,
											"end": 23260,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 23226,
											"end": 23260,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23226,
											"end": 23260,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23276,
											"end": 23294,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 23276,
											"end": 23294,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23276,
											"end": 23294,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23269,
											"end": 23303,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 23269,
											"end": 23303,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23269,
											"end": 23303,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14294,
											"end": 14321,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14368,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14412,
											"name": "PUSH",
											"source": 8,
											"value": "F4F635FA"
										},
										{
											"begin": 14351,
											"end": 14412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23116,
											"end": 23134,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 23116,
											"end": 23134,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 14351,
											"end": 14441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 14351,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14293,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14293,
											"end": 14441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14293,
											"end": 14441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14537,
											"end": 14570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14576,
											"end": 14597,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14576,
											"end": 14597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14576,
											"end": 14597,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 14536,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14648,
											"end": 14652,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14654,
											"end": 14673,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14675,
											"end": 14691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14614,
											"end": 14692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14614,
											"end": 14692,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 14614,
											"end": 14692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 14727,
											"end": 14743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 14706,
											"end": 14743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14706,
											"end": 14743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14799,
											"end": 14818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14797,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14788,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D"
										},
										{
											"begin": 14820,
											"end": 14828,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 14830,
											"end": 14846,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23835,
											"end": 23877,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 23879,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 23879,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23910,
											"end": 23912,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23888,
											"end": 23922,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23793,
											"end": 23795,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23631,
											"end": 23928,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14763,
											"end": 14847,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 14532,
											"end": 14858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 15002,
											"end": 15008,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 14999,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 14981,
											"end": 15008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 14981,
											"end": 15008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 14950,
											"end": 14967,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14970,
											"end": 14975,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 14950,
											"end": 14975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 14950,
											"end": 14975,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 15009,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 15009,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24308,
											"end": 24310,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24290,
											"end": 24311,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24347,
											"end": 24349,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 24327,
											"end": 24345,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 24327,
											"end": 24345,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24327,
											"end": 24345,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24320,
											"end": 24350,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24386,
											"end": 24420,
											"name": "PUSH",
											"source": 19,
											"value": "5468652066656520697320746F6F206869676820666F72207468652073656C6C"
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24359,
											"end": 24421,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24457,
											"end": 24461,
											"name": "PUSH",
											"source": 19,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24437,
											"end": 24455,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 24437,
											"end": 24455,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24437,
											"end": 24455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24430,
											"end": 24462,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24479,
											"end": 24498,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 24479,
											"end": 24498,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 24106,
											"end": 24504,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14941,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 15095,
											"end": 15128,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15095,
											"end": 15128,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15128,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15129,
											"end": 15133,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15135,
											"end": 15137,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15139,
											"end": 15156,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 15095,
											"end": 15157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15095,
											"end": 15157,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 15095,
											"end": 15157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13547,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13294,
											"end": 15165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "CC15949300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 205,
											"end": 260,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 205,
											"end": 260,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 187,
											"end": 261,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17949,
											"end": 17964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17949,
											"end": 17964,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 17986,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18015,
											"name": "PUSH",
											"source": 8,
											"value": "CC159493"
										},
										{
											"begin": 17967,
											"end": 18015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 160,
											"end": 178,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 160,
											"end": 178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 17967,
											"end": 18027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 17967,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17949,
											"end": 18027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18088,
											"end": 18109,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18088,
											"end": 18109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18088,
											"end": 18109,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24967,
											"end": 24969,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24949,
											"end": 24970,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25006,
											"end": 25008,
											"name": "PUSH",
											"source": 19,
											"value": "1C"
										},
										{
											"begin": 24986,
											"end": 25004,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 24986,
											"end": 25004,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24986,
											"end": 25004,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24979,
											"end": 25009,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25045,
											"end": 25075,
											"name": "PUSH",
											"source": 19,
											"value": "43616E277420666F756E74207472616E73666572206D616E6167657200000000"
										},
										{
											"begin": 25025,
											"end": 25043,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 25025,
											"end": 25043,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25025,
											"end": 25043,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25018,
											"end": 25076,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25093,
											"end": 25111,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 25093,
											"end": 25111,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 24765,
											"end": 25117,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 18080,
											"end": 18142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "33F2FA9F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25460,
											"end": 25475,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 25460,
											"end": 25475,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25460,
											"end": 25475,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25442,
											"end": 25476,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25512,
											"end": 25527,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25512,
											"end": 25527,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25512,
											"end": 25527,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25492,
											"end": 25510,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 25492,
											"end": 25510,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25492,
											"end": 25510,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25485,
											"end": 25528,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25564,
											"end": 25579,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25564,
											"end": 25579,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 25564,
											"end": 25579,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25544,
											"end": 25562,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 25544,
											"end": 25562,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25544,
											"end": 25562,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25537,
											"end": 25580,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25596,
											"end": 25614,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 25596,
											"end": 25614,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25596,
											"end": 25614,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25589,
											"end": 25623,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25589,
											"end": 25623,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25589,
											"end": 25623,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 25639,
											"end": 25658,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 25639,
											"end": 25658,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25639,
											"end": 25658,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25632,
											"end": 25667,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25632,
											"end": 25667,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 25632,
											"end": 25667,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "PUSH",
											"source": 8,
											"value": "33F2FA9F"
										},
										{
											"begin": 18200,
											"end": 18252,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25353,
											"end": 25372,
											"name": "PUSH",
											"source": 19,
											"value": "A4"
										},
										{
											"begin": 25353,
											"end": 25372,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18200,
											"end": 18291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17886,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17717,
											"end": 18298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 25890,
											"end": 25932,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25959,
											"end": 25974,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 25959,
											"end": 25974,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25959,
											"end": 25974,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 25941,
											"end": 25975,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26011,
											"end": 26026,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 26011,
											"end": 26026,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 25991,
											"end": 26009,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 25991,
											"end": 26009,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 25991,
											"end": 26009,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25984,
											"end": 26027,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26043,
											"end": 26061,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 26043,
											"end": 26061,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26043,
											"end": 26061,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26036,
											"end": 26070,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26036,
											"end": 26070,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26036,
											"end": 26070,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 25853,
											"end": 25871,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 25853,
											"end": 25871,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15615,
											"end": 17410,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 15615,
											"end": 17410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 15909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15875,
											"end": 15900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 16020,
											"end": 16028,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15903,
											"end": 15909,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 15998,
											"end": 16037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15998,
											"end": 16037,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 15998,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 15970,
											"end": 16037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15970,
											"end": 16037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16307,
											"end": 16341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16347,
											"end": 16369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16347,
											"end": 16369,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16347,
											"end": 16369,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16306,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16412,
											"end": 16432,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 16412,
											"end": 16432,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16412,
											"end": 16432,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16393,
											"end": 16397,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16412,
											"end": 16432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16434,
											"end": 16451,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 16386,
											"end": 16452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 16386,
											"end": 16452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16487,
											"end": 16504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 16466,
											"end": 16504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16466,
											"end": 16504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16302,
											"end": 16515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "F4F635FA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23161,
											"end": 23216,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 23161,
											"end": 23216,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23161,
											"end": 23216,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23143,
											"end": 23217,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23233,
											"end": 23251,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 23233,
											"end": 23251,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23233,
											"end": 23251,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23226,
											"end": 23260,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 23226,
											"end": 23260,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23226,
											"end": 23260,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23276,
											"end": 23294,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 23276,
											"end": 23294,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23276,
											"end": 23294,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23269,
											"end": 23303,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 23269,
											"end": 23303,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23269,
											"end": 23303,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16562,
											"end": 16589,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16680,
											"name": "PUSH",
											"source": 8,
											"value": "F4F635FA"
										},
										{
											"begin": 16619,
											"end": 16680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23116,
											"end": 23134,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 23116,
											"end": 23134,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 16619,
											"end": 16709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 16619,
											"end": 16709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16561,
											"end": 16709,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16561,
											"end": 16709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16805,
											"end": 16838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16844,
											"end": 16865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16844,
											"end": 16865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16844,
											"end": 16865,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 16804,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16882,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 16882,
											"end": 16907,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 16882,
											"end": 16907,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16908,
											"end": 16927,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16929,
											"end": 16945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16882,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 16882,
											"end": 16946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16882,
											"end": 16946,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 16882,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 16981,
											"end": 16997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 16960,
											"end": 16997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16960,
											"end": 16997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17053,
											"end": 17072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17044,
											"end": 17051,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 17032,
											"end": 17042,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "27C4F0403323142B599832F26ACD21C74A9E5B809F2215726E244A4AC588CD7D"
										},
										{
											"begin": 17082,
											"end": 17086,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 17089,
											"end": 17105,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23835,
											"end": 23877,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 23879,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23805,
											"end": 23879,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23910,
											"end": 23912,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23888,
											"end": 23922,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23793,
											"end": 23795,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23631,
											"end": 23928,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17017,
											"end": 17106,
											"name": "LOG4",
											"source": 8
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 16800,
											"end": 17117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 17262,
											"end": 17268,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17259,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 17241,
											"end": 17268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 17241,
											"end": 17268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 17210,
											"end": 17227,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17230,
											"end": 17235,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 17210,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 17210,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17209,
											"end": 17269,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 17209,
											"end": 17269,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24308,
											"end": 24310,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24290,
											"end": 24311,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24347,
											"end": 24349,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 24327,
											"end": 24345,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 24327,
											"end": 24345,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24327,
											"end": 24345,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24320,
											"end": 24350,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24386,
											"end": 24420,
											"name": "PUSH",
											"source": 19,
											"value": "5468652066656520697320746F6F206869676820666F72207468652073656C6C"
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24359,
											"end": 24421,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24457,
											"end": 24461,
											"name": "PUSH",
											"source": 19,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24437,
											"end": 24455,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 24437,
											"end": 24455,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24437,
											"end": 24455,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24430,
											"end": 24462,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24479,
											"end": 24498,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 24479,
											"end": 24498,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 24106,
											"end": 24504,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 17201,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17354,
											"end": 17402,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 17354,
											"end": 17379,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17361,
											"end": 17365,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "960"
										},
										{
											"begin": 17354,
											"end": 17379,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17380,
											"end": 17382,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 17384,
											"end": 17401,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17354,
											"end": 17379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 17354,
											"end": 17402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "tag",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 26351,
											"end": 26417,
											"name": "PUSH",
											"source": 19,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26339,
											"end": 26418,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26434,
											"end": 26445,
											"name": "PUSH",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 26434,
											"end": 26445,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26434,
											"end": 26445,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26427,
											"end": 26454,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26427,
											"end": 26454,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26427,
											"end": 26454,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26470,
											"end": 26482,
											"name": "PUSH",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 26470,
											"end": 26482,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 26470,
											"end": 26482,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26463,
											"end": 26491,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 26463,
											"end": 26491,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26463,
											"end": 26491,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1922,
											"end": 1926,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26507,
											"end": 26519,
											"name": "PUSH",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 26507,
											"end": 26519,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2175,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2176,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2097,
											"end": 2176,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "tag",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26711,
											"end": 26730,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 26711,
											"end": 26730,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26711,
											"end": 26730,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26746,
											"end": 26758,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 26746,
											"end": 26758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26746,
											"end": 26758,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26739,
											"end": 26767,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 26739,
											"end": 26767,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26739,
											"end": 26767,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26805,
											"end": 26808,
											"name": "PUSH",
											"source": 19,
											"value": "F8"
										},
										{
											"begin": 26801,
											"end": 26817,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 26801,
											"end": 26817,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 26801,
											"end": 26817,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 26819,
											"end": 26885,
											"name": "PUSH",
											"source": 19,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26797,
											"end": 26886,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 26783,
											"end": 26795,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 26783,
											"end": 26795,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26783,
											"end": 26795,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 26776,
											"end": 26887,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 26903,
											"end": 26915,
											"name": "PUSH",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 26903,
											"end": 26915,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 26903,
											"end": 26915,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "1626BA7E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "PUSH",
											"source": 18,
											"value": "1626BA7E"
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 2411,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "tag",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "tag",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 2411,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 2411,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2493,
											"name": "PUSH",
											"source": 18,
											"value": "1626BA7E"
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2411,
											"end": 2493,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 2404,
											"end": 2493,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "tag",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 2246,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 2598,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2591,
											"end": 2632,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2591,
											"end": 2632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2591,
											"end": 2632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1743,
											"end": 2649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18551,
											"end": 18781,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 18551,
											"end": 18781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18642,
											"end": 18649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18661,
											"end": 18680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18697,
											"end": 18708,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18725,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18725,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18725,
											"name": "PUSH",
											"source": 8,
											"value": "9DD1CDA6"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 18683,
											"end": 18727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 18683,
											"end": 18727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18661,
											"end": 18727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18769,
											"end": 18774,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 18759,
											"end": 18765,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18661,
											"end": 18727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 18745,
											"end": 18765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 18745,
											"end": 18765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 18744,
											"end": 18774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 18744,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18737,
											"end": 18774,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 18551,
											"end": 18781,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18551,
											"end": 18781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "482"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28819,
											"end": 28821,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 28801,
											"end": 28822,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28858,
											"end": 28860,
											"name": "PUSH",
											"source": 19,
											"value": "2A"
										},
										{
											"begin": 28838,
											"end": 28856,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 28838,
											"end": 28856,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28838,
											"end": 28856,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28831,
											"end": 28861,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28897,
											"end": 28931,
											"name": "PUSH",
											"source": 19,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 28877,
											"end": 28895,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 28877,
											"end": 28895,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28877,
											"end": 28895,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28870,
											"end": 28932,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28968,
											"end": 28980,
											"name": "PUSH",
											"source": 19,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 28948,
											"end": 28966,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 28948,
											"end": 28966,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28948,
											"end": 28966,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 28941,
											"end": 28981,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28998,
											"end": 29017,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 28998,
											"end": 29017,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 28617,
											"end": 29023,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23835,
											"end": 23877,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23823,
											"end": 23878,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23805,
											"end": 23879,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23895,
											"end": 23913,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23888,
											"end": 23922,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23888,
											"end": 23922,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23888,
											"end": 23922,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 895,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 23778,
											"end": 23796,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 23631,
											"end": 23928,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 688,
											"end": 1459,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 688,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 811,
											"end": 818,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH",
											"source": 18,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 1069,
											"end": 1149,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1069,
											"end": 1149,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1069,
											"end": 1149,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29230,
											"end": 29232,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 29212,
											"end": 29233,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29269,
											"end": 29271,
											"name": "PUSH",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 29249,
											"end": 29267,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 29249,
											"end": 29267,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29249,
											"end": 29267,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29242,
											"end": 29272,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29308,
											"end": 29330,
											"name": "PUSH",
											"source": 19,
											"value": "20496E76616C6964207320706172616D65746572000000000000000000000000"
										},
										{
											"begin": 29288,
											"end": 29306,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 29288,
											"end": 29306,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29288,
											"end": 29306,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29281,
											"end": 29331,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29348,
											"end": 29366,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 29348,
											"end": 29366,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 29028,
											"end": 29372,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "tag",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 1048,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "1B"
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 18,
											"value": "1C"
										},
										{
											"begin": 1225,
											"end": 1232,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29579,
											"end": 29581,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 29561,
											"end": 29582,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29618,
											"end": 29620,
											"name": "PUSH",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 29598,
											"end": 29616,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 29598,
											"end": 29616,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29598,
											"end": 29616,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29591,
											"end": 29621,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29657,
											"end": 29678,
											"name": "PUSH",
											"source": 19,
											"value": "496E76616C6964207620706172616D6574657200000000000000000000000000"
										},
										{
											"begin": 29637,
											"end": 29655,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 29637,
											"end": 29655,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29637,
											"end": 29655,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29630,
											"end": 29679,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 29696,
											"end": 29714,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 29696,
											"end": 29714,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 29377,
											"end": 29720,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "tag",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 1206,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1329,
											"end": 1343,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 29952,
											"end": 29977,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 29952,
											"end": 29977,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 29952,
											"end": 29977,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30025,
											"end": 30029,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 30013,
											"end": 30030,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 30013,
											"end": 30030,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 29993,
											"end": 30011,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 29993,
											"end": 30011,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 29993,
											"end": 30011,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 29986,
											"end": 30031,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 29986,
											"end": 30031,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 29986,
											"end": 30031,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 29986,
											"end": 30031,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30047,
											"end": 30065,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 30047,
											"end": 30065,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 30047,
											"end": 30065,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30040,
											"end": 30074,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 30040,
											"end": 30074,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 30040,
											"end": 30074,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30090,
											"end": 30108,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 30090,
											"end": 30108,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 30090,
											"end": 30108,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30083,
											"end": 30117,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 30083,
											"end": 30117,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 30083,
											"end": 30117,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29924,
											"end": 29943,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 29924,
											"end": 29943,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1388,
											"end": 1408,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 30330,
											"end": 30332,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30312,
											"end": 30333,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30369,
											"end": 30371,
											"name": "PUSH",
											"source": 19,
											"value": "F"
										},
										{
											"begin": 30349,
											"end": 30367,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 30349,
											"end": 30367,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30349,
											"end": 30367,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30342,
											"end": 30372,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30408,
											"end": 30425,
											"name": "PUSH",
											"source": 19,
											"value": "20496E76616C6964207369676E65720000000000000000000000000000000000"
										},
										{
											"begin": 30388,
											"end": 30406,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 30388,
											"end": 30406,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30388,
											"end": 30406,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30381,
											"end": 30426,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30443,
											"end": 30461,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 30443,
											"end": 30461,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 30128,
											"end": 30467,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "tag",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1446,
											"end": 1452,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 688,
											"end": 1459,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 688,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 4025,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3861,
											"end": 4084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 30674,
											"end": 30676,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 30656,
											"end": 30677,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30713,
											"end": 30715,
											"name": "PUSH",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 30693,
											"end": 30711,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 30693,
											"end": 30711,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30693,
											"end": 30711,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30686,
											"end": 30716,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30752,
											"end": 30786,
											"name": "PUSH",
											"source": 19,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 30732,
											"end": 30750,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 30732,
											"end": 30750,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30732,
											"end": 30750,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30725,
											"end": 30787,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30823,
											"end": 30831,
											"name": "PUSH",
											"source": 19,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30803,
											"end": 30821,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 30803,
											"end": 30821,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 30803,
											"end": 30821,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 30796,
											"end": 30832,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 30849,
											"end": 30868,
											"name": "PUSH",
											"source": 19,
											"value": "84"
										},
										{
											"begin": 30849,
											"end": 30868,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 30472,
											"end": 30874,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 31081,
											"end": 31083,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 31063,
											"end": 31084,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 31120,
											"end": 31122,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 31100,
											"end": 31118,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 31100,
											"end": 31118,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 31100,
											"end": 31118,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 31093,
											"end": 31123,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 31159,
											"end": 31190,
											"name": "PUSH",
											"source": 19,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 31139,
											"end": 31157,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 31139,
											"end": 31157,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 31139,
											"end": 31157,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 31132,
											"end": 31191,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 31208,
											"end": 31226,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 31208,
											"end": 31226,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 30879,
											"end": 31232,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 5341,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 5389,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 5447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 8252,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 272,
											"end": 426,
											"name": "tag",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 272,
											"end": 426,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 358,
											"end": 400,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 356,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 347,
											"end": 401,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 340,
											"end": 345,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 337,
											"end": 402,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 327,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 327,
											"end": 420,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 416,
											"end": 417,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 414,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 406,
											"end": 418,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 431,
											"end": 565,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 431,
											"end": 565,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 499,
											"end": 519,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 499,
											"end": 519,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 528,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 499,
											"end": 519,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 528,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 528,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 528,
											"end": 559,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 528,
											"end": 559,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 431,
											"end": 565,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 431,
											"end": 565,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 431,
											"end": 565,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 431,
											"end": 565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 570,
											"end": 817,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 570,
											"end": 817,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 629,
											"end": 635,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 684,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 670,
											"end": 679,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 661,
											"end": 668,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 657,
											"end": 680,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 653,
											"end": 685,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 650,
											"end": 702,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 650,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 650,
											"end": 702,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 698,
											"end": 699,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 696,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 688,
											"end": 700,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 650,
											"end": 702,
											"name": "tag",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 650,
											"end": 702,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 737,
											"end": 746,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 724,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 756,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 756,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 756,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 822,
											"end": 1137,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 822,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 890,
											"end": 896,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 904,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 951,
											"end": 953,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 930,
											"end": 937,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 926,
											"end": 949,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 922,
											"end": 954,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 919,
											"end": 971,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 919,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 919,
											"end": 971,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 967,
											"end": 968,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 965,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 957,
											"end": 969,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 919,
											"end": 971,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 919,
											"end": 971,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1006,
											"end": 1015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 993,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1025,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 1050,
											"end": 1055,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1025,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 1025,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1025,
											"end": 1056,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 1025,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1080,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1130,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1099,
											"end": 1131,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 822,
											"end": 1137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1612,
											"end": 2291,
											"name": "tag",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 1612,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1754,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1804,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1817,
											"end": 1818,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1815,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1807,
											"end": 1819,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "tag",
											"source": 19,
											"value": "564"
										},
										{
											"begin": 1769,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1886,
											"end": 1904,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1916,
											"end": 1930,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1947,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "565"
										},
										{
											"begin": 1913,
											"end": 1947,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1933,
											"end": 1945,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1913,
											"end": 1947,
											"name": "tag",
											"source": 19,
											"value": "565"
										},
										{
											"begin": 1913,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1966,
											"end": 1988,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2020,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2000,
											"end": 2026,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1997,
											"end": 2043,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1997,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 1997,
											"end": 2043,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2039,
											"end": 2040,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2029,
											"end": 2041,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1997,
											"end": 2043,
											"name": "tag",
											"source": 19,
											"value": "566"
										},
										{
											"begin": 1997,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2062,
											"end": 2064,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2062,
											"end": 2064,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2089,
											"end": 2121,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2089,
											"end": 2121,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2133,
											"end": 2149,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 2130,
											"end": 2166,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2130,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 2130,
											"end": 2166,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2160,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2152,
											"end": 2164,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2130,
											"end": 2166,
											"name": "tag",
											"source": 19,
											"value": "567"
										},
										{
											"begin": 2130,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2185,
											"end": 2209,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 2225,
											"end": 2241,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2225,
											"end": 2241,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2225,
											"end": 2241,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2221,
											"end": 2247,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2218,
											"end": 2264,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2218,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 2218,
											"end": 2264,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2258,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2250,
											"end": 2262,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2218,
											"end": 2264,
											"name": "tag",
											"source": 19,
											"value": "568"
										},
										{
											"begin": 2218,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2273,
											"end": 2285,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2273,
											"end": 2285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2273,
											"end": 2285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1612,
											"end": 2291,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1612,
											"end": 2291,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1612,
											"end": 2291,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1612,
											"end": 2291,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1612,
											"end": 2291,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1612,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3427,
											"end": 4042,
											"name": "tag",
											"source": 19,
											"value": "99"
										},
										{
											"begin": 3427,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3574,
											"end": 3576,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3571,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3553,
											"end": 3560,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3549,
											"end": 3572,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3545,
											"end": 3577,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3542,
											"end": 3594,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3542,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 3542,
											"end": 3594,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3587,
											"end": 3588,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3580,
											"end": 3592,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3542,
											"end": 3594,
											"name": "tag",
											"source": 19,
											"value": "575"
										},
										{
											"begin": 3542,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3630,
											"end": 3639,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3617,
											"end": 3640,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3659,
											"end": 3677,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3686,
											"end": 3720,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3686,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 3686,
											"end": 3720,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3706,
											"end": 3718,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3686,
											"end": 3720,
											"name": "tag",
											"source": 19,
											"value": "576"
										},
										{
											"begin": 3686,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3754,
											"end": 3760,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3743,
											"end": 3752,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3739,
											"end": 3761,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3729,
											"end": 3761,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3729,
											"end": 3761,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3799,
											"end": 3806,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3792,
											"end": 3796,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 3788,
											"end": 3790,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3784,
											"end": 3797,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3780,
											"end": 3807,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 3770,
											"end": 3825,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3811,
											"end": 3823,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3825,
											"name": "tag",
											"source": 19,
											"value": "577"
										},
										{
											"begin": 3770,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3848,
											"end": 3864,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3887,
											"end": 3889,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3879,
											"end": 3885,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3876,
											"end": 3890,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3873,
											"end": 3907,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3873,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 3873,
											"end": 3907,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3873,
											"end": 3907,
											"name": "tag",
											"source": 19,
											"value": "578"
										},
										{
											"begin": 3873,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3956,
											"end": 3963,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 3951,
											"end": 3953,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 3934,
											"end": 3948,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 3930,
											"end": 3932,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3926,
											"end": 3949,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3922,
											"end": 3954,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3919,
											"end": 3964,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 3916,
											"end": 3981,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3916,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 3916,
											"end": 3981,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3916,
											"end": 3981,
											"name": "tag",
											"source": 19,
											"value": "579"
										},
										{
											"begin": 3916,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4011,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4000,
											"end": 4011,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4000,
											"end": 4011,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4000,
											"end": 4011,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4000,
											"end": 4011,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4036,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4030,
											"end": 4036,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 4042,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3427,
											"end": 4042,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 4042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4047,
											"end": 4227,
											"name": "tag",
											"source": 19,
											"value": "112"
										},
										{
											"begin": 4047,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4106,
											"end": 4112,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4134,
											"end": 4157,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4127,
											"end": 4179,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4127,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 4127,
											"end": 4179,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4175,
											"end": 4176,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4173,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4165,
											"end": 4177,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4127,
											"end": 4179,
											"name": "tag",
											"source": 19,
											"value": "581"
										},
										{
											"begin": 4127,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4221,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4198,
											"end": 4221,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4047,
											"end": 4227,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4047,
											"end": 4227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4592,
											"end": 4710,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 4592,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4678,
											"end": 4683,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4671,
											"end": 4684,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4664,
											"end": 4685,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4657,
											"end": 4662,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 4644,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 4644,
											"end": 4704,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4715,
											"end": 4843,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 4715,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 4809,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 4780,
											"end": 4800,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4809,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 4809,
											"end": 4837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4848,
											"end": 5089,
											"name": "tag",
											"source": 19,
											"value": "137"
										},
										{
											"begin": 4848,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4945,
											"end": 4954,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4936,
											"end": 4943,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4932,
											"end": 4955,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4928,
											"end": 4960,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4925,
											"end": 4977,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4925,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 4925,
											"end": 4977,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4973,
											"end": 4974,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4925,
											"end": 4977,
											"name": "tag",
											"source": 19,
											"value": "588"
										},
										{
											"begin": 4925,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4999,
											"end": 5022,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5031,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 5053,
											"end": 5058,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5031,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 5031,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5798,
											"end": 5982,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 5798,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5850,
											"end": 5927,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5947,
											"end": 5951,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 5944,
											"end": 5945,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5937,
											"end": 5952,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5971,
											"end": 5975,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5976,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5987,
											"end": 6237,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 5987,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6096,
											"end": 6102,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 6084,
											"end": 6103,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6084,
											"end": 6103,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6133,
											"end": 6151,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6118,
											"end": 6152,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6118,
											"end": 6152,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6154,
											"end": 6176,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6154,
											"end": 6176,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6154,
											"end": 6176,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6115,
											"end": 6177,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 6112,
											"end": 6200,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6112,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 6112,
											"end": 6200,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 6180,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "tag",
											"source": 19,
											"value": "595"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6216,
											"end": 6218,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6209,
											"end": 6231,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5987,
											"end": 6237,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5987,
											"end": 6237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 7019,
											"name": "tag",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 6242,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6340,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6318,
											"end": 6335,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6314,
											"end": 6341,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6304,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 6304,
											"end": 6359,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6355,
											"end": 6356,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6345,
											"end": 6357,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6304,
											"end": 6359,
											"name": "tag",
											"source": 19,
											"value": "597"
										},
										{
											"begin": 6304,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6391,
											"end": 6397,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6378,
											"end": 6398,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6454,
											"end": 6456,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6450,
											"end": 6452,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6447,
											"end": 6457,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6444,
											"end": 6480,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6444,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 6444,
											"end": 6480,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 6460,
											"end": 6478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "tag",
											"source": 19,
											"value": "599"
										},
										{
											"begin": 6460,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6594,
											"end": 6596,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6588,
											"end": 6597,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6499,
											"end": 6565,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 6644,
											"end": 6666,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6644,
											"end": 6666,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6644,
											"end": 6666,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6668,
											"end": 6670,
											"name": "PUSH",
											"source": 19,
											"value": "3F"
										},
										{
											"begin": 6640,
											"end": 6671,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6636,
											"end": 6676,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6624,
											"end": 6677,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6624,
											"end": 6677,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6624,
											"end": 6677,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6692,
											"end": 6710,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6692,
											"end": 6710,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6692,
											"end": 6710,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6712,
											"end": 6734,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6712,
											"end": 6734,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6712,
											"end": 6734,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 6689,
											"end": 6735,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 6738,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "tag",
											"source": 19,
											"value": "601"
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6778,
											"end": 6788,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6767,
											"end": 6789,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6805,
											"end": 6811,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6859,
											"end": 6862,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 6856,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6849,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6839,
											"end": 6845,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6835,
											"end": 6850,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6831,
											"end": 6857,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6828,
											"end": 6863,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6825,
											"end": 6880,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6825,
											"end": 6880,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 6825,
											"end": 6880,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6825,
											"end": 6880,
											"name": "tag",
											"source": 19,
											"value": "602"
										},
										{
											"begin": 6825,
											"end": 6880,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6940,
											"end": 6942,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6933,
											"end": 6937,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 6921,
											"end": 6938,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6906,
											"end": 6912,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6902,
											"end": 6919,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6889,
											"end": 6943,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6967,
											"end": 6973,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6963,
											"end": 6978,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6959,
											"end": 6985,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6952,
											"end": 6989,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7007,
											"end": 7013,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 7019,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 7019,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 7019,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 7019,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6242,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7024,
											"end": 7180,
											"name": "tag",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 7024,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7090,
											"end": 7110,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7090,
											"end": 7110,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7150,
											"end": 7154,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 7129,
											"end": 7156,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7129,
											"end": 7156,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 7119,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 7119,
											"end": 7174,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7168,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7160,
											"end": 7172,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7185,
											"end": 8791,
											"name": "tag",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 7185,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7293,
											"end": 7302,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7358,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 7344,
											"end": 7349,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7328,
											"end": 7342,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 7324,
											"end": 7350,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7320,
											"end": 7359,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7317,
											"end": 7376,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7317,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 7317,
											"end": 7376,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7372,
											"end": 7373,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7362,
											"end": 7374,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7317,
											"end": 7376,
											"name": "tag",
											"source": 19,
											"value": "606"
										},
										{
											"begin": 7317,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 7400,
											"end": 7417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "tag",
											"source": 19,
											"value": "607"
										},
										{
											"begin": 7400,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7442,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 7458,
											"end": 7463,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7442,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 7442,
											"end": 7464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7442,
											"end": 7464,
											"name": "tag",
											"source": 19,
											"value": "608"
										},
										{
											"begin": 7442,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7433,
											"end": 7440,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7426,
											"end": 7465,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7499,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7527,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7518,
											"end": 7532,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7499,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 7499,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7499,
											"end": 7533,
											"name": "tag",
											"source": 19,
											"value": "609"
										},
										{
											"begin": 7499,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7494,
											"end": 7496,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7485,
											"end": 7492,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7481,
											"end": 7497,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7474,
											"end": 7534,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7568,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 7598,
											"end": 7600,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7596,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7587,
											"end": 7601,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7568,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 7568,
											"end": 7602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7568,
											"end": 7602,
											"name": "tag",
											"source": 19,
											"value": "610"
										},
										{
											"begin": 7568,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7563,
											"end": 7565,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7554,
											"end": 7561,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7550,
											"end": 7566,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7543,
											"end": 7603,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7661,
											"end": 7663,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 7654,
											"end": 7659,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7650,
											"end": 7664,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7637,
											"end": 7665,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7632,
											"end": 7634,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 7623,
											"end": 7630,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7619,
											"end": 7635,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7612,
											"end": 7666,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7725,
											"end": 7728,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7718,
											"end": 7723,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7714,
											"end": 7729,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7701,
											"end": 7730,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7695,
											"end": 7698,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 7686,
											"end": 7693,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7682,
											"end": 7699,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7675,
											"end": 7731,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7790,
											"end": 7793,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 7783,
											"end": 7788,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7779,
											"end": 7794,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7766,
											"end": 7795,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7760,
											"end": 7763,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 7751,
											"end": 7758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7747,
											"end": 7764,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 7796,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7831,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 7861,
											"end": 7864,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 7854,
											"end": 7859,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7850,
											"end": 7865,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7831,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 7831,
											"end": 7866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7831,
											"end": 7866,
											"name": "tag",
											"source": 19,
											"value": "611"
										},
										{
											"begin": 7831,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7825,
											"end": 7828,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 7816,
											"end": 7823,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7812,
											"end": 7829,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7805,
											"end": 7867,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7902,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 7932,
											"end": 7935,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 7925,
											"end": 7930,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7921,
											"end": 7936,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7902,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 7902,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7902,
											"end": 7937,
											"name": "tag",
											"source": 19,
											"value": "612"
										},
										{
											"begin": 7902,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 7883,
											"end": 7900,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7883,
											"end": 7900,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7876,
											"end": 7938,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7957,
											"end": 7960,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 8007,
											"end": 8021,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8007,
											"end": 8021,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8007,
											"end": 8021,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7994,
											"end": 8022,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7976,
											"end": 7992,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7976,
											"end": 7992,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7976,
											"end": 7992,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7969,
											"end": 8023,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8042,
											"end": 8045,
											"name": "PUSH",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8079,
											"end": 8107,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8061,
											"end": 8077,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8061,
											"end": 8077,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8061,
											"end": 8077,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8054,
											"end": 8108,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8127,
											"end": 8130,
											"name": "PUSH",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 8177,
											"end": 8191,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8177,
											"end": 8191,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8177,
											"end": 8191,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8164,
											"end": 8192,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8146,
											"end": 8162,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8146,
											"end": 8162,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8146,
											"end": 8162,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8139,
											"end": 8193,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8212,
											"end": 8215,
											"name": "PUSH",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 8262,
											"end": 8276,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8262,
											"end": 8276,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8262,
											"end": 8276,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8249,
											"end": 8277,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8231,
											"end": 8247,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8231,
											"end": 8247,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8231,
											"end": 8247,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8224,
											"end": 8278,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8297,
											"end": 8300,
											"name": "PUSH",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 8336,
											"end": 8350,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8336,
											"end": 8350,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8336,
											"end": 8350,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8323,
											"end": 8351,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8374,
											"end": 8392,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8363,
											"end": 8393,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8363,
											"end": 8393,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8404,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8408,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "tag",
											"source": 19,
											"value": "613"
										},
										{
											"begin": 8360,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8444,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8465,
											"end": 8470,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8461,
											"end": 8479,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8444,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "540"
										},
										{
											"begin": 8444,
											"end": 8496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8444,
											"end": 8496,
											"name": "tag",
											"source": 19,
											"value": "614"
										},
										{
											"begin": 8444,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8439,
											"end": 8441,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8430,
											"end": 8437,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8426,
											"end": 8442,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8419,
											"end": 8497,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8419,
											"end": 8497,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8419,
											"end": 8497,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8516,
											"end": 8519,
											"name": "PUSH",
											"source": 19,
											"value": "1A0"
										},
										{
											"begin": 8553,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 8581,
											"end": 8583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8574,
											"end": 8579,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8570,
											"end": 8584,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8553,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 8553,
											"end": 8585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8553,
											"end": 8585,
											"name": "tag",
											"source": 19,
											"value": "615"
										},
										{
											"begin": 8553,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8535,
											"end": 8551,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8535,
											"end": 8551,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8535,
											"end": 8551,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8528,
											"end": 8586,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8605,
											"end": 8608,
											"name": "PUSH",
											"source": 19,
											"value": "1C0"
										},
										{
											"begin": 8655,
											"end": 8669,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8655,
											"end": 8669,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8655,
											"end": 8669,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8642,
											"end": 8670,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8617,
											"end": 8671,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8690,
											"end": 8693,
											"name": "PUSH",
											"source": 19,
											"value": "1E0"
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8727,
											"end": 8755,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 8709,
											"end": 8725,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8709,
											"end": 8725,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8709,
											"end": 8725,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8702,
											"end": 8756,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8702,
											"end": 8756,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8702,
											"end": 8756,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8702,
											"end": 8756,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8539,
											"end": 8546,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7185,
											"end": 8791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8796,
											"end": 9355,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 8796,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8854,
											"end": 8859,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8867,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8908,
											"end": 8925,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9003,
											"end": 9069,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1"
										},
										{
											"begin": 8992,
											"end": 9000,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8976,
											"end": 8990,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 8972,
											"end": 9001,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8968,
											"end": 9070,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8948,
											"end": 8966,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8944,
											"end": 9071,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8934,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 8934,
											"end": 9089,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9082,
											"end": 9083,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9075,
											"end": 9087,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8934,
											"end": 9089,
											"name": "tag",
											"source": 19,
											"value": "617"
										},
										{
											"begin": 8934,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9113,
											"end": 9146,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9113,
											"end": 9146,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9165,
											"end": 9186,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9165,
											"end": 9186,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9234,
											"end": 9264,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9234,
											"end": 9264,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 9231,
											"end": 9281,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9231,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 9231,
											"end": 9281,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 9275,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9267,
											"end": 9279,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9231,
											"end": 9281,
											"name": "tag",
											"source": 19,
											"value": "618"
										},
										{
											"begin": 9231,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9308,
											"end": 9322,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 9304,
											"end": 9331,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9297,
											"end": 9302,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9293,
											"end": 9332,
											"name": "SGT",
											"source": 19
										},
										{
											"begin": 9290,
											"end": 9349,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9290,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 9290,
											"end": 9349,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9345,
											"end": 9346,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9342,
											"end": 9343,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9335,
											"end": 9347,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9290,
											"end": 9349,
											"name": "tag",
											"source": 19,
											"value": "619"
										},
										{
											"begin": 9290,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8796,
											"end": 9355,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8796,
											"end": 9355,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8796,
											"end": 9355,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8796,
											"end": 9355,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8796,
											"end": 9355,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8796,
											"end": 9355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9360,
											"end": 9685,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 9360,
											"end": 9685,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9436,
											"end": 9455,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9500,
											"end": 9506,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9493,
											"end": 9498,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9486,
											"end": 9490,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9481,
											"end": 9484,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9477,
											"end": 9491,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9464,
											"end": 9507,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 9464,
											"end": 9507,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9552,
											"end": 9553,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9545,
											"end": 9549,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9536,
											"end": 9542,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9531,
											"end": 9534,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9527,
											"end": 9543,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9523,
											"end": 9550,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9516,
											"end": 9554,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9418,
											"end": 9421,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9674,
											"end": 9678,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9604,
											"end": 9670,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 9599,
											"end": 9601,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 9591,
											"end": 9597,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9587,
											"end": 9602,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9583,
											"end": 9671,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9578,
											"end": 9581,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9574,
											"end": 9672,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9570,
											"end": 9679,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9563,
											"end": 9679,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9563,
											"end": 9679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9360,
											"end": 9685,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9360,
											"end": 9685,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9360,
											"end": 9685,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9360,
											"end": 9685,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9360,
											"end": 9685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9770,
											"end": 12567,
											"name": "tag",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 9770,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10043,
											"end": 10045,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10025,
											"end": 10046,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10006,
											"end": 10010,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10065,
											"end": 10068,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10090,
											"end": 10110,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10119,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 10141,
											"end": 10146,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10119,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 10119,
											"end": 10147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10119,
											"end": 10147,
											"name": "tag",
											"source": 19,
											"value": "623"
										},
										{
											"begin": 10119,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10190,
											"end": 10203,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10183,
											"end": 10204,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10178,
											"end": 10180,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10163,
											"end": 10181,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10163,
											"end": 10181,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10156,
											"end": 10205,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10254,
											"end": 10258,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10259,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10242,
											"end": 10259,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10229,
											"end": 10260,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10269,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 10229,
											"end": 10260,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10269,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 10269,
											"end": 10302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10269,
											"end": 10302,
											"name": "tag",
											"source": 19,
											"value": "624"
										},
										{
											"begin": 10269,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10351,
											"end": 10393,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10342,
											"end": 10349,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10338,
											"end": 10394,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 10333,
											"end": 10335,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10322,
											"end": 10331,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10318,
											"end": 10336,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10311,
											"end": 10395,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10311,
											"end": 10395,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10449,
											"end": 10455,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10445,
											"end": 10460,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10432,
											"end": 10461,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10426,
											"end": 10429,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10415,
											"end": 10424,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10404,
											"end": 10462,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10524,
											"end": 10526,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10516,
											"end": 10522,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10512,
											"end": 10527,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10499,
											"end": 10528,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10493,
											"end": 10496,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 10482,
											"end": 10491,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10478,
											"end": 10497,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10471,
											"end": 10529,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10592,
											"end": 10595,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10584,
											"end": 10590,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10567,
											"end": 10597,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 10560,
											"end": 10564,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10538,
											"end": 10598,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10641,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 10692,
											"end": 10695,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 10684,
											"end": 10690,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 10696,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10672,
											"end": 10678,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10641,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 10641,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10641,
											"end": 10697,
											"name": "tag",
											"source": 19,
											"value": "625"
										},
										{
											"begin": 10641,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10734,
											"end": 10738,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 10728,
											"end": 10731,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 10717,
											"end": 10726,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10706,
											"end": 10739,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10832,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 10828,
											"end": 10830,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10817,
											"end": 10826,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10799,
											"end": 10811,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10785,
											"end": 10797,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10832,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 10759,
											"end": 10832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10832,
											"name": "tag",
											"source": 19,
											"value": "626"
										},
										{
											"begin": 10759,
											"end": 10832,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10748,
											"end": 10832,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10748,
											"end": 10832,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10748,
											"end": 10832,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10879,
											"end": 10888,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10874,
											"end": 10877,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10870,
											"end": 10889,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 10863,
											"end": 10867,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10852,
											"end": 10861,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10848,
											"end": 10868,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10841,
											"end": 10890,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10909,
											"end": 10915,
											"name": "PUSH",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 10924,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 10965,
											"end": 10968,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10940,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 10940,
											"end": 10963,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 10940,
											"end": 10963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10940,
											"end": 10963,
											"name": "tag",
											"source": 19,
											"value": "628"
										},
										{
											"begin": 10940,
											"end": 10963,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1212,
											"end": 1225,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1227,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1227,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1142,
											"end": 1233,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10924,
											"end": 10969,
											"name": "tag",
											"source": 19,
											"value": "627"
										},
										{
											"begin": 10924,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11000,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 11031,
											"end": 11035,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11023,
											"end": 11029,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11019,
											"end": 11036,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11000,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 11000,
											"end": 11037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11000,
											"end": 11037,
											"name": "tag",
											"source": 19,
											"value": "629"
										},
										{
											"begin": 11000,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 2926,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 11090,
											"end": 11094,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11081,
											"end": 11095,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11081,
											"end": 11095,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11127,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 11158,
											"end": 11160,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11146,
											"end": 11161,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11146,
											"end": 11161,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11127,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 11127,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11127,
											"end": 11162,
											"name": "tag",
											"source": 19,
											"value": "631"
										},
										{
											"begin": 11127,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 2926,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 11215,
											"end": 11217,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11206,
											"end": 11218,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11171,
											"end": 11219,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11274,
											"end": 11276,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 11266,
											"end": 11272,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11262,
											"end": 11277,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11249,
											"end": 11278,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11244,
											"end": 11246,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 11239,
											"end": 11242,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11235,
											"end": 11247,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11228,
											"end": 11279,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11335,
											"end": 11338,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 11327,
											"end": 11333,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11323,
											"end": 11339,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11310,
											"end": 11340,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11304,
											"end": 11307,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 11299,
											"end": 11302,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11295,
											"end": 11308,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11288,
											"end": 11341,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 11389,
											"end": 11395,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11385,
											"end": 11401,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11372,
											"end": 11402,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 11361,
											"end": 11364,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11370,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11350,
											"end": 11403,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11434,
											"end": 11471,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 11465,
											"end": 11469,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 11457,
											"end": 11463,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11453,
											"end": 11470,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11434,
											"end": 11471,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 11434,
											"end": 11471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11434,
											"end": 11471,
											"name": "tag",
											"source": 19,
											"value": "633"
										},
										{
											"begin": 11434,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 2926,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 11524,
											"end": 11528,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 11515,
											"end": 11529,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11515,
											"end": 11529,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11561,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 11592,
											"end": 11595,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 11580,
											"end": 11596,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 11580,
											"end": 11596,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11561,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 11561,
											"end": 11597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11561,
											"end": 11597,
											"name": "tag",
											"source": 19,
											"value": "635"
										},
										{
											"begin": 11561,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 2926,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 11650,
											"end": 11653,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 11641,
											"end": 11654,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11641,
											"end": 11654,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11685,
											"end": 11714,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11683,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11683,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11683,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11664,
											"end": 11715,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11664,
											"end": 11715,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11664,
											"end": 11715,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11664,
											"end": 11715,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11734,
											"end": 11740,
											"name": "PUSH",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 11783,
											"end": 11798,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11783,
											"end": 11798,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11783,
											"end": 11798,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11770,
											"end": 11799,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 11768,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 11768,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 11768,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11749,
											"end": 11800,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11819,
											"end": 11825,
											"name": "PUSH",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 11868,
											"end": 11883,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11868,
											"end": 11883,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11868,
											"end": 11883,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11855,
											"end": 11884,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11841,
											"end": 11853,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11841,
											"end": 11853,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11841,
											"end": 11853,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11834,
											"end": 11885,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "PUSH",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 11953,
											"end": 11968,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11953,
											"end": 11968,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 11953,
											"end": 11968,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11940,
											"end": 11969,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 11926,
											"end": 11938,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11926,
											"end": 11938,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11926,
											"end": 11938,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11919,
											"end": 11970,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "PUSH",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12042,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 12081,
											"end": 12096,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12096,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12096,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11698,
											"end": 11713,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12042,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 12042,
											"end": 12097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12042,
											"end": 12097,
											"name": "tag",
											"source": 19,
											"value": "637"
										},
										{
											"begin": 12042,
											"end": 12097,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12127,
											"end": 12129,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12122,
											"end": 12124,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12117,
											"end": 12120,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12113,
											"end": 12125,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12106,
											"end": 12130,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12153,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 12220,
											"end": 12222,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12215,
											"end": 12218,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12211,
											"end": 12223,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12195,
											"end": 12209,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12179,
											"end": 12193,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12153,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 12153,
											"end": 12224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12153,
											"end": 12224,
											"name": "tag",
											"source": 19,
											"value": "638"
										},
										{
											"begin": 12153,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12139,
											"end": 12224,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12243,
											"end": 12249,
											"name": "PUSH",
											"source": 19,
											"value": "1A0"
										},
										{
											"begin": 12280,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 12309,
											"end": 12311,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12301,
											"end": 12307,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12297,
											"end": 12312,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12280,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 12280,
											"end": 12313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12280,
											"end": 12313,
											"name": "tag",
											"source": 19,
											"value": "639"
										},
										{
											"begin": 12280,
											"end": 12313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9757,
											"end": 9761,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 9746,
											"end": 9762,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 12355,
											"end": 12367,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12355,
											"end": 12367,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12355,
											"end": 12367,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9734,
											"end": 9763,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12387,
											"end": 12393,
											"name": "PUSH",
											"source": 19,
											"value": "1C0"
										},
										{
											"begin": 12436,
											"end": 12451,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12436,
											"end": 12451,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12436,
											"end": 12451,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12423,
											"end": 12452,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 12409,
											"end": 12421,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12409,
											"end": 12421,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12409,
											"end": 12421,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12402,
											"end": 12453,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "PUSH",
											"source": 19,
											"value": "1E0"
										},
										{
											"begin": 12521,
											"end": 12536,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12521,
											"end": 12536,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12521,
											"end": 12536,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12508,
											"end": 12537,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 12494,
											"end": 12506,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12494,
											"end": 12506,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12487,
											"end": 12538,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12487,
											"end": 12538,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12487,
											"end": 12538,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12487,
											"end": 12538,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12487,
											"end": 12538,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12487,
											"end": 12538,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12555,
											"end": 12561,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9770,
											"end": 12567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12572,
											"end": 12939,
											"name": "tag",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 12572,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12657,
											"end": 12663,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12671,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12673,
											"end": 12679,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12726,
											"end": 12728,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12705,
											"end": 12712,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12701,
											"end": 12724,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12697,
											"end": 12729,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12694,
											"end": 12746,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12694,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 12694,
											"end": 12746,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12742,
											"end": 12743,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12739,
											"end": 12740,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 12732,
											"end": 12744,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 12694,
											"end": 12746,
											"name": "tag",
											"source": 19,
											"value": "642"
										},
										{
											"begin": 12694,
											"end": 12746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12774,
											"end": 12783,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12768,
											"end": 12784,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12793,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 12815,
											"end": 12820,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12793,
											"end": 12821,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 12793,
											"end": 12821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12793,
											"end": 12821,
											"name": "tag",
											"source": 19,
											"value": "643"
										},
										{
											"begin": 12793,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12885,
											"end": 12887,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12888,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12870,
											"end": 12888,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12864,
											"end": 12889,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12929,
											"end": 12931,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12840,
											"end": 12845,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12840,
											"end": 12845,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 12864,
											"end": 12889,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12864,
											"end": 12889,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12908,
											"end": 12933,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12572,
											"end": 12939,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12572,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14338,
											"end": 14522,
											"name": "tag",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 14338,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14390,
											"end": 14467,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14387,
											"end": 14388,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14380,
											"end": 14468,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14487,
											"end": 14491,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 14484,
											"end": 14485,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 14477,
											"end": 14492,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14511,
											"end": 14515,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14508,
											"end": 14509,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14501,
											"end": 14516,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14527,
											"end": 14655,
											"name": "tag",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 14527,
											"end": 14655,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14594,
											"end": 14603,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14594,
											"end": 14603,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14594,
											"end": 14603,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14615,
											"end": 14626,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14615,
											"end": 14626,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14615,
											"end": 14626,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 14612,
											"end": 14649,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14612,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 14612,
											"end": 14649,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 14629,
											"end": 14647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15726,
											"end": 15910,
											"name": "tag",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 15726,
											"end": 15910,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15778,
											"end": 15855,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15775,
											"end": 15776,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15768,
											"end": 15856,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15875,
											"end": 15879,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 15872,
											"end": 15873,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 15865,
											"end": 15880,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15899,
											"end": 15903,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15896,
											"end": 15897,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15889,
											"end": 15904,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 16328,
											"end": 16523,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 16328,
											"end": 16523,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16367,
											"end": 16370,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16398,
											"end": 16464,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16391,
											"end": 16396,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16388,
											"end": 16465,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16385,
											"end": 16488,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 16385,
											"end": 16488,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 16468,
											"end": 16486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "tag",
											"source": 19,
											"value": "658"
										},
										{
											"begin": 16468,
											"end": 16486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16515,
											"end": 16516,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 16504,
											"end": 16517,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16504,
											"end": 16517,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16328,
											"end": 16523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16528,
											"end": 17018,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 16528,
											"end": 17018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16717,
											"end": 16719,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16715,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16699,
											"end": 16720,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16756,
											"end": 16762,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16751,
											"end": 16753,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16740,
											"end": 16749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16736,
											"end": 16754,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16729,
											"end": 16763,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16680,
											"end": 16684,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16786,
											"end": 16852,
											"name": "PUSH",
											"source": 19,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16778,
											"end": 16784,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16775,
											"end": 16853,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16772,
											"end": 16870,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16772,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 16772,
											"end": 16870,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16866,
											"end": 16867,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16863,
											"end": 16864,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16856,
											"end": 16868,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 16772,
											"end": 16870,
											"name": "tag",
											"source": 19,
											"value": "660"
										},
										{
											"begin": 16772,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16900,
											"end": 16906,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16897,
											"end": 16898,
											"name": "PUSH",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 16893,
											"end": 16907,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 16957,
											"end": 16963,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16949,
											"end": 16955,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16944,
											"end": 16946,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16933,
											"end": 16942,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16929,
											"end": 16947,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16916,
											"end": 16964,
											"name": "CALLDATACOPY",
											"source": 19
										},
										{
											"begin": 16985,
											"end": 17007,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16985,
											"end": 17007,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16985,
											"end": 17007,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16985,
											"end": 17007,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17009,
											"end": 17011,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16981,
											"end": 17012,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16981,
											"end": 17012,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16528,
											"end": 17018,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16528,
											"end": 17018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17023,
											"end": 17148,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 17023,
											"end": 17148,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17088,
											"end": 17097,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 17088,
											"end": 17097,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17088,
											"end": 17097,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 17106,
											"end": 17142,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 17122,
											"end": 17140,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 17122,
											"end": 17140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18279,
											"end": 19493,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 18279,
											"end": 19493,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18788,
											"end": 18813,
											"name": "DUP15",
											"source": 19
										},
										{
											"begin": 18788,
											"end": 18813,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18788,
											"end": 18813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18856,
											"end": 18870,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 18856,
											"end": 18870,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18849,
											"end": 18871,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18844,
											"end": 18846,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18829,
											"end": 18847,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18829,
											"end": 18847,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18822,
											"end": 18872,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18920,
											"end": 18962,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18908,
											"end": 18963,
											"name": "DUP14",
											"source": 19
										},
										{
											"begin": 18908,
											"end": 18963,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18908,
											"end": 18963,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18903,
											"end": 18905,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 18888,
											"end": 18906,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18888,
											"end": 18906,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18881,
											"end": 18964,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "DUP13",
											"source": 19
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 19015,
											"end": 19017,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 19000,
											"end": 19018,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19000,
											"end": 19018,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18775,
											"end": 18778,
											"name": "PUSH",
											"source": 19,
											"value": "1C0"
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19056,
											"end": 19062,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 19050,
											"end": 19053,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 19039,
											"end": 19048,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19035,
											"end": 19054,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19028,
											"end": 19063,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19100,
											"end": 19106,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 19094,
											"end": 19097,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 19083,
											"end": 19092,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19079,
											"end": 19098,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19072,
											"end": 19107,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19144,
											"end": 19150,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 19138,
											"end": 19141,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 19127,
											"end": 19136,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19123,
											"end": 19142,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19116,
											"end": 19151,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19160,
											"end": 19207,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 19202,
											"end": 19205,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 19191,
											"end": 19200,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19187,
											"end": 19206,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19179,
											"end": 19185,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 2926,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2807,
											"end": 2934,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19160,
											"end": 19207,
											"name": "tag",
											"source": 19,
											"value": "669"
										},
										{
											"begin": 19160,
											"end": 19207,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 2926,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 2873,
											"end": 2927,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 19258,
											"end": 19261,
											"name": "PUSH",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 19243,
											"end": 19262,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19243,
											"end": 19262,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2861,
											"end": 2928,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19294,
											"end": 19297,
											"name": "PUSH",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 19279,
											"end": 19298,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19279,
											"end": 19298,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19272,
											"end": 19307,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 19272,
											"end": 19307,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19272,
											"end": 19307,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 19272,
											"end": 19307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19338,
											"end": 19341,
											"name": "PUSH",
											"source": 19,
											"value": "140"
										},
										{
											"begin": 19323,
											"end": 19342,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19323,
											"end": 19342,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19316,
											"end": 19352,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 19316,
											"end": 19352,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19316,
											"end": 19352,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 19316,
											"end": 19352,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19383,
											"end": 19386,
											"name": "PUSH",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 19368,
											"end": 19387,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 19368,
											"end": 19387,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 19361,
											"end": 19397,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19428,
											"end": 19431,
											"name": "PUSH",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 19413,
											"end": 19432,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19413,
											"end": 19432,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19406,
											"end": 19442,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19473,
											"end": 19476,
											"name": "PUSH",
											"source": 19,
											"value": "1A0"
										},
										{
											"begin": 19458,
											"end": 19477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19458,
											"end": 19477,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19458,
											"end": 19477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19451,
											"end": 19487,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18279,
											"end": 19493,
											"name": "SWAP10",
											"source": 19
										},
										{
											"begin": 18279,
											"end": 19493,
											"name": "SWAP9",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18279,
											"end": 19493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21447,
											"end": 21629,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 21447,
											"end": 21629,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21504,
											"end": 21510,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21557,
											"end": 21559,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21545,
											"end": 21554,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21536,
											"end": 21543,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21532,
											"end": 21555,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 21528,
											"end": 21560,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 21525,
											"end": 21577,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 21525,
											"end": 21577,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 21525,
											"end": 21577,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 21573,
											"end": 21574,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21570,
											"end": 21571,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 21563,
											"end": 21575,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 21525,
											"end": 21577,
											"name": "tag",
											"source": 19,
											"value": "676"
										},
										{
											"begin": 21525,
											"end": 21577,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21596,
											"end": 21623,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 21613,
											"end": 21622,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21596,
											"end": 21623,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "541"
										},
										{
											"begin": 21596,
											"end": 21623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21981,
											"end": 22226,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 21981,
											"end": 22226,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22048,
											"end": 22054,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22101,
											"end": 22103,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22089,
											"end": 22098,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22080,
											"end": 22087,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22076,
											"end": 22099,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 22072,
											"end": 22104,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 22069,
											"end": 22121,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 22069,
											"end": 22121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 22069,
											"end": 22121,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 22117,
											"end": 22118,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22114,
											"end": 22115,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 22107,
											"end": 22119,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 22069,
											"end": 22121,
											"name": "tag",
											"source": 19,
											"value": "680"
										},
										{
											"begin": 22069,
											"end": 22121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22149,
											"end": 22158,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22143,
											"end": 22159,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 22168,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 22190,
											"end": 22195,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 22168,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 22168,
											"end": 22196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23314,
											"end": 23626,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 23314,
											"end": 23626,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23393,
											"end": 23399,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23401,
											"end": 23407,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23454,
											"end": 23456,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23442,
											"end": 23451,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23433,
											"end": 23440,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23429,
											"end": 23452,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 23425,
											"end": 23457,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 23422,
											"end": 23474,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 23422,
											"end": 23474,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 23422,
											"end": 23474,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 23470,
											"end": 23471,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23467,
											"end": 23468,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 23460,
											"end": 23472,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 23422,
											"end": 23474,
											"name": "tag",
											"source": 19,
											"value": "686"
										},
										{
											"begin": 23422,
											"end": 23474,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23502,
											"end": 23511,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23496,
											"end": 23512,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 23521,
											"end": 23552,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 23546,
											"end": 23551,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23521,
											"end": 23552,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 23521,
											"end": 23552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23521,
											"end": 23552,
											"name": "tag",
											"source": 19,
											"value": "687"
										},
										{
											"begin": 23521,
											"end": 23552,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23616,
											"end": 23618,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23601,
											"end": 23619,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 23601,
											"end": 23619,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23601,
											"end": 23619,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 23601,
											"end": 23619,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23595,
											"end": 23620,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 23571,
											"end": 23576,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23571,
											"end": 23576,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 23595,
											"end": 23620,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 23595,
											"end": 23620,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23314,
											"end": 23626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23933,
											"end": 24101,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 23933,
											"end": 24101,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24006,
											"end": 24015,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 24006,
											"end": 24015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24006,
											"end": 24015,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 24037,
											"end": 24046,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24037,
											"end": 24046,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24054,
											"end": 24069,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24054,
											"end": 24069,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24054,
											"end": 24069,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 24048,
											"end": 24070,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24048,
											"end": 24070,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 24034,
											"end": 24071,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 24024,
											"end": 24095,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 24024,
											"end": 24095,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24075,
											"end": 24093,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 24075,
											"end": 24093,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 24075,
											"end": 24093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24509,
											"end": 24760,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 24509,
											"end": 24760,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24579,
											"end": 24585,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24632,
											"end": 24634,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24620,
											"end": 24629,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24611,
											"end": 24618,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 24607,
											"end": 24630,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 24603,
											"end": 24635,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 24600,
											"end": 24652,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 24600,
											"end": 24652,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 24600,
											"end": 24652,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 24648,
											"end": 24649,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24645,
											"end": 24646,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 24638,
											"end": 24650,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 24600,
											"end": 24652,
											"name": "tag",
											"source": 19,
											"value": "694"
										},
										{
											"begin": 24600,
											"end": 24652,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24680,
											"end": 24689,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24674,
											"end": 24690,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 24699,
											"end": 24730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 24724,
											"end": 24729,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24699,
											"end": 24730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "532"
										},
										{
											"begin": 24699,
											"end": 24730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 26926,
											"end": 27176,
											"name": "tag",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 26926,
											"end": 27176,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27011,
											"end": 27012,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "tag",
											"source": 19,
											"value": "702"
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27035,
											"end": 27041,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27032,
											"end": 27033,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27029,
											"end": 27042,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "704"
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 27111,
											"end": 27122,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27111,
											"end": 27122,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27111,
											"end": 27122,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27105,
											"end": 27123,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 27092,
											"end": 27103,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27092,
											"end": 27103,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27092,
											"end": 27103,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27085,
											"end": 27124,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27057,
											"end": 27059,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27050,
											"end": 27060,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "702"
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "tag",
											"source": 19,
											"value": "704"
										},
										{
											"begin": 27021,
											"end": 27134,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27168,
											"end": 27169,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27150,
											"end": 27166,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 27150,
											"end": 27166,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27143,
											"end": 27170,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 26926,
											"end": 27176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27181,
											"end": 27510,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 27181,
											"end": 27510,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27222,
											"end": 27225,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27260,
											"end": 27265,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27254,
											"end": 27266,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 27287,
											"end": 27293,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 27282,
											"end": 27285,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27275,
											"end": 27294,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27303,
											"end": 27379,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "706"
										},
										{
											"begin": 27372,
											"end": 27378,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27365,
											"end": 27369,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27360,
											"end": 27363,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 27356,
											"end": 27370,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27349,
											"end": 27353,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27342,
											"end": 27347,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 27338,
											"end": 27354,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27303,
											"end": 27379,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 27303,
											"end": 27379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27303,
											"end": 27379,
											"name": "tag",
											"source": 19,
											"value": "706"
										},
										{
											"begin": 27303,
											"end": 27379,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27424,
											"end": 27426,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 27412,
											"end": 27427,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27429,
											"end": 27495,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 27408,
											"end": 27496,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 27399,
											"end": 27497,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 27399,
											"end": 27497,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 27399,
											"end": 27497,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 27399,
											"end": 27497,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27499,
											"end": 27503,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27395,
											"end": 27504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27395,
											"end": 27504,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 27181,
											"end": 27510,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27181,
											"end": 27510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27515,
											"end": 27803,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 27515,
											"end": 27803,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27690,
											"end": 27696,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27679,
											"end": 27688,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27672,
											"end": 27697,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27733,
											"end": 27735,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 27728,
											"end": 27730,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27717,
											"end": 27726,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27713,
											"end": 27731,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27706,
											"end": 27736,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 27653,
											"end": 27657,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27753,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 27793,
											"end": 27795,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 27782,
											"end": 27791,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 27778,
											"end": 27796,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 27770,
											"end": 27776,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27753,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 27753,
											"end": 27797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 27808,
											"end": 28144,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 27808,
											"end": 28144,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27877,
											"end": 27883,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27930,
											"end": 27932,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 27918,
											"end": 27927,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 27909,
											"end": 27916,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 27905,
											"end": 27928,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 27901,
											"end": 27933,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 27898,
											"end": 27950,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 27898,
											"end": 27950,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "710"
										},
										{
											"begin": 27898,
											"end": 27950,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 27946,
											"end": 27947,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 27943,
											"end": 27944,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 27936,
											"end": 27948,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 27898,
											"end": 27950,
											"name": "tag",
											"source": 19,
											"value": "710"
										},
										{
											"begin": 27898,
											"end": 27950,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 27978,
											"end": 27987,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 27972,
											"end": 27988,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 28028,
											"end": 28094,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28021,
											"end": 28026,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28017,
											"end": 28095,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 28010,
											"end": 28015,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 28007,
											"end": 28096,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 27997,
											"end": 28114,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 27997,
											"end": 28114,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 28110,
											"end": 28111,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28107,
											"end": 28108,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 28100,
											"end": 28112,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 28149,
											"end": 28333,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 28149,
											"end": 28333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28219,
											"end": 28225,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28272,
											"end": 28274,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 28260,
											"end": 28269,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28251,
											"end": 28258,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 28247,
											"end": 28270,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 28243,
											"end": 28275,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 28240,
											"end": 28292,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 28240,
											"end": 28292,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "713"
										},
										{
											"begin": 28240,
											"end": 28292,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 28288,
											"end": 28289,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28285,
											"end": 28286,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 28278,
											"end": 28290,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 28240,
											"end": 28292,
											"name": "tag",
											"source": 19,
											"value": "713"
										},
										{
											"begin": 28240,
											"end": 28292,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28311,
											"end": 28327,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 28311,
											"end": 28327,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 28149,
											"end": 28333,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28149,
											"end": 28333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 28338,
											"end": 28612,
											"name": "tag",
											"source": 19,
											"value": "479"
										},
										{
											"begin": 28338,
											"end": 28612,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 28378,
											"end": 28379,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28404,
											"end": 28405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 28394,
											"end": 28583,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "715"
										},
										{
											"begin": 28394,
											"end": 28583,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 28439,
											"end": 28516,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28436,
											"end": 28437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28429,
											"end": 28517,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28540,
											"end": 28544,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 28537,
											"end": 28538,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 28530,
											"end": 28545,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 28568,
											"end": 28572,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 28565,
											"end": 28566,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 28558,
											"end": 28573,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 28394,
											"end": 28583,
											"name": "tag",
											"source": 19,
											"value": "715"
										},
										{
											"begin": 28394,
											"end": 28583,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28597,
											"end": 28606,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 28597,
											"end": 28606,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 28338,
											"end": 28612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 31237,
											"end": 31524,
											"name": "tag",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 31237,
											"end": 31524,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 31366,
											"end": 31369,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 31404,
											"end": 31410,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 31398,
											"end": 31411,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 31420,
											"end": 31486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 31479,
											"end": 31485,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 31474,
											"end": 31477,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 31467,
											"end": 31471,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 31459,
											"end": 31465,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 31455,
											"end": 31472,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 31420,
											"end": 31486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "546"
										},
										{
											"begin": 31420,
											"end": 31486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 31420,
											"end": 31486,
											"name": "tag",
											"source": 19,
											"value": "724"
										},
										{
											"begin": 31420,
											"end": 31486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 31502,
											"end": 31518,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 31502,
											"end": 31518,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 31502,
											"end": 31518,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 31502,
											"end": 31518,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 31502,
											"end": 31518,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 31237,
											"end": 31524,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31237,
											"end": 31524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 31529,
											"end": 31748,
											"name": "tag",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 31529,
											"end": 31748,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 31678,
											"end": 31680,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 31667,
											"end": 31676,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 31660,
											"end": 31681,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 31641,
											"end": 31645,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 31698,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 31738,
											"end": 31740,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 31727,
											"end": 31736,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 31723,
											"end": 31741,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 31715,
											"end": 31721,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 31698,
											"end": 31742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 31698,
											"end": 31742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"cancelAllOrdersForSender(uint256)": "cbd2ec65",
							"cancelMultipleMakerOrders(uint256[])": "9e53a69a",
							"currencyManager()": "0f747d74",
							"executionManager()": "483abb9f",
							"isUserOrderNonceExecutedOrCancelled(address,uint256)": "31e27e27",
							"matchSellerOrders((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "45ea7231",
							"matchSellerOrdersWETH((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "509a1a41",
							"matchesBuyerOrder((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "63521def",
							"owner()": "8da5cb5b",
							"protocolFeeRecipient()": "64df049e",
							"renounceOwnership()": "715018a6",
							"royaltyFeeManager()": "87e4401f",
							"transferOwnership(address)": "f2fde38b",
							"transferSelectorNFT()": "5e14f68e",
							"updateCurrencyManager(address)": "5ce052d7",
							"updateExecutionManager(address)": "d4ff41dc",
							"updateProtocolFeeRecipient(address)": "1df47f80",
							"updateRoyaltyFeeManager(address)": "c5498769",
							"updateTransferSelectorNFT(address)": "f75ff53f",
							"userMinOrderNonce(address)": "4266581e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currencyManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_executionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyFeeManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinNonce\",\"type\":\"uint256\"}],\"name\":\"CancelAllOrders\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"orderNonces\",\"type\":\"uint256[]\"}],\"name\":\"CancelMultipleOrders\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currencyManager\",\"type\":\"address\"}],\"name\":\"NewCurrencyManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executionManager\",\"type\":\"address\"}],\"name\":\"NewExecutionManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"NewProtocolFeeRecipient\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyFeeManager\",\"type\":\"address\"}],\"name\":\"NewRoyaltyFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"transferSelectorNFT\",\"type\":\"address\"}],\"name\":\"NewTransferSelectorNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"royaltyRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TakerAsk\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TakerBid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minNonce\",\"type\":\"uint256\"}],\"name\":\"cancelAllOrdersForSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"NonceList\",\"type\":\"uint256[]\"}],\"name\":\"cancelMultipleMakerOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currencyManager\",\"outputs\":[{\"internalType\":\"contract TheCurrencyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executionManager\",\"outputs\":[{\"internalType\":\"contract TheExManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"orderNonce\",\"type\":\"uint256\"}],\"name\":\"isUserOrderNonceExecutedOrCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrdersWETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"matchesBuyerOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltyFeeManager\",\"outputs\":[{\"internalType\":\"contract TheRoyaltyManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferSelectorNFT\",\"outputs\":[{\"internalType\":\"contract TheTransferSelector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currencyManager\",\"type\":\"address\"}],\"name\":\"updateCurrencyManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executionManager\",\"type\":\"address\"}],\"name\":\"updateExecutionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_protocolFeeRecipient\",\"type\":\"address\"}],\"name\":\"updateProtocolFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyFeeManager\",\"type\":\"address\"}],\"name\":\"updateRoyaltyFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transferSelectorNFT\",\"type\":\"address\"}],\"name\":\"updateTransferSelectorNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userMinOrderNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/UnemetaMarket.sol\":\"UnemetaMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Manager/UnemetaMarket.sol\":{\"keccak256\":\"0x0fb8e0c1dd8210c483b7a5566b51a4a925e430560218934d26cbc1307aa37626\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc10d30acfbb587182a864025a108db5376072bdb9938ab0e58a1e0c0a39ae30\",\"dweb:/ipfs/QmZZYJw31BPtcB7MRgjQFPrFx5akFzYRLmvVpxt2tEmMC2\"]},\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/Manager/interface/IWETH.sol\":{\"keccak256\":\"0x54b6f68eca905d0b5c70c2c21a1ce3a5451b65e0771280774af4b72330c19f22\",\"license\":\"GNU\",\"urls\":[\"bzz-raw://8143d8187efc92eeefd402e1f14f64cb3891512a3353b2f8e855ec6cae4d1e16\",\"dweb:/ipfs/QmXAD4ZN9GcWfZ3TXhRgeuUFTqAV4kFcgBvsoNe5HwNAK8\"]},\"contracts/Manager/interface/TheCurrencyManager.sol\":{\"keccak256\":\"0x6f05161aa87f4a4c8f10bda2cdab7a3120b13a02a085f48f94d8317bdf0459c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ea4ebb036220ea423c2b939a139f04d1a9f4fa931affc4c0a061118722003e\",\"dweb:/ipfs/QmPKBksf6UfQ4cLik934jnKobDmy72FNFnBmGSDBQwxzcz\"]},\"contracts/Manager/interface/TheExManager.sol\":{\"keccak256\":\"0xf68dcbd29125fed9b86d24ee4a46a90c7311d0e429a9f379336d26c26a05acd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b433798aae0b80257667ca3e4573fd010989623b09b4bbd94fd2fa6885b535bc\",\"dweb:/ipfs/QmPnaMAhD4cs5KUVUAkryxGD9GkwmwGUYSCpN1Fe5xxEqq\"]},\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":{\"keccak256\":\"0x553adb19658a6f5859886444bc1a2b8483e9ec567bd1ad9aedbfb0ba665e2df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fbd253613d3c5845b3132e281f3edb16705a49a6f8fd8b7f35fa4732796c04e\",\"dweb:/ipfs/QmNpYHvqJgv3fktAUovG8xxP7LTCLHAmTTZfj7M6WZXJBC\"]},\"contracts/Manager/interface/TheTransferManager.sol\":{\"keccak256\":\"0x13b412f89afe677f8e49c4fbddf6ebc0af44607381ab8fb2a2caf79a9b2c6a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab98d5a753bbbab25248b7fba410345a5f44ad4465244d6c1aabcde3aa5f15c\",\"dweb:/ipfs/Qmdwa6oSgGBfbagu1B1FLoYfmQyWQjCp8J7PkDESKfxLu5\"]},\"contracts/Manager/interface/TheUnemetaExchange.sol\":{\"keccak256\":\"0x9bfdc938af467ef4e11d5d35d2d9970abb11a15a962fecf896cc29b1c6f93b2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20d4aa9c93a23e742283999c5851b3f99be4c85cfecab468134819d3565b0400\",\"dweb:/ipfs/QmUDpCKKcqPpnNruQSpPDYB63cKUx69ehzcrTuPcdhjkMi\"]},\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":{\"keccak256\":\"0x4c44c47a857835829df5a06aea7d339301f92d6805f07032db6f3ef63b3da306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3397572d8c7f5844d8102851e780c41f8e5b49be6ed43e6f18716dd2fa7fb21b\",\"dweb:/ipfs/QmaxUjtd7Pg7banAzc6AUqcgXEsumHkkqw6XFYgXx14aHM\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]},\"contracts/libraries/SignatureChecker.sol\":{\"keccak256\":\"0x16a8efc1e23b430bc1c41d678681f0ed6613970f3b5550c52b8bc09f630ed6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f4bb0e1a4294c03719757f447cde80b1d36ab89bf5aaad448fd0fd626a9aec\",\"dweb:/ipfs/QmVsgF4TXvvBCoiJy8mrXFDfWdD2KqBZiAYJRzqKqfBThf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 137,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 962,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "protocolFeeRecipient",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 965,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "currencyManager",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(TheCurrencyManager)2257"
							},
							{
								"astId": 968,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "executionManager",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(TheExManager)2294"
							},
							{
								"astId": 971,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "royaltyFeeManager",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(TheRoyaltyManager)2310"
							},
							{
								"astId": 974,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "transferSelectorNFT",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(TheTransferSelector)2368"
							},
							{
								"astId": 978,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "userMinOrderNonce",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 984,
								"contract": "contracts/Manager/UnemetaMarket.sol:UnemetaMarket",
								"label": "_theUserOrderExecutedOrCancelled",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(TheCurrencyManager)2257": {
								"encoding": "inplace",
								"label": "contract TheCurrencyManager",
								"numberOfBytes": "20"
							},
							"t_contract(TheExManager)2294": {
								"encoding": "inplace",
								"label": "contract TheExManager",
								"numberOfBytes": "20"
							},
							"t_contract(TheRoyaltyManager)2310": {
								"encoding": "inplace",
								"label": "contract TheRoyaltyManager",
								"numberOfBytes": "20"
							},
							"t_contract(TheTransferSelector)2368": {
								"encoding": "inplace",
								"label": "contract TheTransferSelector",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"TheExStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "canExecuteBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "canExecuteSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewProtocolFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canExecuteBuy((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "2a75ffee",
							"canExecuteSell((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "d310677d",
							"viewProtocolFee()": "9dd1cda6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"canExecuteBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"canExecuteSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewProtocolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":\"TheExStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/execution/interface/TheExecutionStrategy.sol\":{\"keccak256\":\"0xaca4d6ba74b4465e10421bb142ec8e37e0952cff485fddfb83fa814df31f787d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f42e6454dcdd9f7a2f462f80c5771388f0a2caa4fa1233c343ac5e6c13b524e9\",\"dweb:/ipfs/QmNjfRscybizKpFYuociVV6hBnuxRCeejUfayCasF9YwFx\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/IWETH.sol\":{\"keccak256\":\"0x54b6f68eca905d0b5c70c2c21a1ce3a5451b65e0771280774af4b72330c19f22\",\"license\":\"GNU\",\"urls\":[\"bzz-raw://8143d8187efc92eeefd402e1f14f64cb3891512a3353b2f8e855ec6cae4d1e16\",\"dweb:/ipfs/QmXAD4ZN9GcWfZ3TXhRgeuUFTqAV4kFcgBvsoNe5HwNAK8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"TheCurrencyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "addCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "isCurrencyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								}
							],
							"name": "removeCurrency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedCurrencies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCurrency(address)": "8ab234b6",
							"isCurrencyWhitelisted(address)": "43b938c5",
							"removeCurrency(address)": "c5d3a107",
							"viewCountWhitelistedCurrencies()": "1facfd9c",
							"viewWhitelistedCurrencies(uint256,uint256)": "85f39b0a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"isCurrencyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedCurrencies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheCurrencyManager.sol\":\"TheCurrencyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheCurrencyManager.sol\":{\"keccak256\":\"0x6f05161aa87f4a4c8f10bda2cdab7a3120b13a02a085f48f94d8317bdf0459c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ea4ebb036220ea423c2b939a139f04d1a9f4fa931affc4c0a061118722003e\",\"dweb:/ipfs/QmPKBksf6UfQ4cLik934jnKobDmy72FNFnBmGSDBQwxzcz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"TheExManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "addStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "isStrategyWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "removeStrategy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewCountWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cursor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "size",
									"type": "uint256"
								}
							],
							"name": "viewWhitelistedStrategies",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStrategy(address)": "223e5479",
							"isStrategyWhitelisted(address)": "999ba27c",
							"removeStrategy(address)": "175188e8",
							"viewCountWhitelistedStrategies()": "985e3a2f",
							"viewWhitelistedStrategies(uint256,uint256)": "31fb5b1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"isStrategyWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewCountWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"viewWhitelistedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheExManager.sol\":\"TheExManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheExManager.sol\":{\"keccak256\":\"0xf68dcbd29125fed9b86d24ee4a46a90c7311d0e429a9f379336d26c26a05acd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b433798aae0b80257667ca3e4573fd010989623b09b4bbd94fd2fa6885b535bc\",\"dweb:/ipfs/QmPnaMAhD4cs5KUVUAkryxGD9GkwmwGUYSCpN1Fe5xxEqq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"TheRoyaltyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateRoyaltyFeeAndGetRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateRoyaltyFeeAndGetRecipient(address,uint256,uint256)": "f4f635fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRoyaltyFeeAndGetRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":\"TheRoyaltyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheRoyaltyFeeManager.sol\":{\"keccak256\":\"0x553adb19658a6f5859886444bc1a2b8483e9ec567bd1ad9aedbfb0ba665e2df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fbd253613d3c5845b3132e281f3edb16705a49a6f8fd8b7f35fa4732796c04e\",\"dweb:/ipfs/QmNpYHvqJgv3fktAUovG8xxP7LTCLHAmTTZfj7M6WZXJBC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"TheTransferManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferNonFungibleToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferNonFungibleToken(address,address,address,uint256,uint256)": "33f2fa9f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferNonFungibleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheTransferManager.sol\":\"TheTransferManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheTransferManager.sol\":{\"keccak256\":\"0x13b412f89afe677f8e49c4fbddf6ebc0af44607381ab8fb2a2caf79a9b2c6a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab98d5a753bbbab25248b7fba410345a5f44ad4465244d6c1aabcde3aa5f15c\",\"dweb:/ipfs/Qmdwa6oSgGBfbagu1B1FLoYfmQyWQjCp8J7PkDESKfxLu5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/interface/TheUnemetaExchange.sol": {
				"TheUnemetaExchange": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrders",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerBid",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerAsk",
									"type": "tuple"
								}
							],
							"name": "matchSellerOrdersWETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "taker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										}
									],
									"internalType": "struct OrderTypes.TakerOrder",
									"name": "takerAsk",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isOrderAsk",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "signer",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "collection",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minPercentageToAsk",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "params",
											"type": "bytes"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										}
									],
									"internalType": "struct OrderTypes.MakerOrder",
									"name": "makerBid",
									"type": "tuple"
								}
							],
							"name": "matchesBuyerOrder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"matchSellerOrders((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "45ea7231",
							"matchSellerOrdersWETH((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "509a1a41",
							"matchesBuyerOrder((bool,address,uint256,uint256,uint256,bytes),(bool,address,address,uint256,uint256,uint256,address,address,uint256,uint256,uint256,uint256,bytes,uint8,bytes32,bytes32))": "63521def"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerBid\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerAsk\",\"type\":\"tuple\"}],\"name\":\"matchSellerOrdersWETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct OrderTypes.TakerOrder\",\"name\":\"takerAsk\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isOrderAsk\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPercentageToAsk\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct OrderTypes.MakerOrder\",\"name\":\"makerBid\",\"type\":\"tuple\"}],\"name\":\"matchesBuyerOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/interface/TheUnemetaExchange.sol\":\"TheUnemetaExchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/interface/TheUnemetaExchange.sol\":{\"keccak256\":\"0x9bfdc938af467ef4e11d5d35d2d9970abb11a15a962fecf896cc29b1c6f93b2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20d4aa9c93a23e742283999c5851b3f99be4c85cfecab468134819d3565b0400\",\"dweb:/ipfs/QmUDpCKKcqPpnNruQSpPDYB63cKUx69ehzcrTuPcdhjkMi\"]},\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"TheTransferSelector": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								}
							],
							"name": "checkTransferManagerForToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkTransferManagerForToken(address)": "cc159493"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"}],\"name\":\"checkTransferManagerForToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":\"TheTransferSelector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Manager/trans/interface/TheTransFerSelector.sol\":{\"keccak256\":\"0x4c44c47a857835829df5a06aea7d339301f92d6805f07032db6f3ef63b3da306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3397572d8c7f5844d8102851e780c41f8e5b49be6ed43e6f18716dd2fa7fb21b\",\"dweb:/ipfs/QmaxUjtd7Pg7banAzc6AUqcgXEsumHkkqw6XFYgXx14aHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/OrderTypes.sol": {
				"OrderTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/OrderTypes.sol\":273:2778  library OrderTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d387a344f5fece8880b9352ed2bd6cc36281cd1521bfcb7b0566cbab92afd1064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d387a344f5fece8880b9352ed2bd6cc36281cd1521bfcb7b0566cbab92afd1064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CODESIZE PUSH27 0x344F5FECE8880B9352ED2BD6CC36281CD1521BFCB7B0566CBAB92A REVERT LT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;273:2505:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204d387a344f5fece8880b9352ed2bd6cc36281cd1521bfcb7b0566cbab92afd1064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CODESIZE PUSH27 0x344F5FECE8880B9352ED2BD6CC36281CD1521BFCB7B0566CBAB92A REVERT LT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "273:2505:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"hash(struct OrderTypes.MakerOrder memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 273,
									"end": 2778,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d387a344f5fece8880b9352ed2bd6cc36281cd1521bfcb7b0566cbab92afd1064736f6c63430008110033",
									".code": [
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 273,
											"end": 2778,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/OrderTypes.sol\":\"OrderTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/libraries/OrderTypes.sol\":{\"keccak256\":\"0xae48152a1863cf248af8cca24b276090a6b4e0c19c66e45f40cb9d967aa26220\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f402cb0ac84d24aff0be3adc20fa01666b2c2c67404fc267a04b9681b141e00\",\"dweb:/ipfs/QmZNJn3viekptsYc7fUcH7avRqsNZWX6Unmm9yCT1V3JxZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SignatureChecker.sol": {
				"SignatureChecker": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "SignatureChecker",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SignatureChecker.sol\":321:2651  library SignatureChecker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SignatureChecker.sol\":321:2651  library SignatureChecker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220468af29662bbf41dc59d282458fdd531aa359b2a0b37637f85c18bafe51becf764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220468af29662bbf41dc59d282458fdd531aa359b2a0b37637f85c18bafe51becf764736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID DUP11 CALLCODE SWAP7 PUSH3 0xBBF41D 0xC5 SWAP14 0x28 0x24 PC REVERT 0xD5 BALANCE 0xAA CALLDATALOAD SWAP12 0x2A SIGNEXTEND CALLDATACOPY PUSH4 0x7F85C18B 0xAF 0xE5 SHL 0xEC 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "321:2330:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;321:2330:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220468af29662bbf41dc59d282458fdd531aa359b2a0b37637f85c18bafe51becf764736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID DUP11 CALLCODE SWAP7 PUSH3 0xBBF41D 0xC5 SWAP14 0x28 0x24 PC REVERT 0xD5 BALANCE 0xAA CALLDATALOAD SWAP12 0x2A SIGNEXTEND CALLDATACOPY PUSH4 0x7F85C18B 0xAF 0xE5 SHL 0xEC 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "321:2330:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"verify(bytes32,address,uint8,bytes32,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 321,
									"end": 2651,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220468af29662bbf41dc59d282458fdd531aa359b2a0b37637f85c18bafe51becf764736f6c63430008110033",
									".code": [
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 321,
											"end": 2651,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Manager/UnemetaMarket.sol",
								"contracts/Manager/execution/interface/TheExecutionStrategy.sol",
								"contracts/Manager/interface/IWETH.sol",
								"contracts/Manager/interface/TheCurrencyManager.sol",
								"contracts/Manager/interface/TheExManager.sol",
								"contracts/Manager/interface/TheRoyaltyFeeManager.sol",
								"contracts/Manager/interface/TheTransferManager.sol",
								"contracts/Manager/interface/TheUnemetaExchange.sol",
								"contracts/Manager/trans/interface/TheTransFerSelector.sol",
								"contracts/libraries/OrderTypes.sol",
								"contracts/libraries/SignatureChecker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SignatureChecker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library allows verification of signatures for both EOAs and contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"contracts/libraries/SignatureChecker.sol\":{\"keccak256\":\"0x16a8efc1e23b430bc1c41d678681f0ed6613970f3b5550c52b8bc09f630ed6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f4bb0e1a4294c03719757f447cde80b1d36ab89bf5aaad448fd0fd626a9aec\",\"dweb:/ipfs/QmVsgF4TXvvBCoiJy8mrXFDfWdD2KqBZiAYJRzqKqfBThf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library allows verification of signatures for both EOAs and contracts.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							878
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 879,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 878,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								878
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "117:189:1",
								"text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "IERC1271",
							"nameLocation": "317:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "332:220:1",
										"text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
									},
									"functionSelector": "1626ba7e",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "566:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "591:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "583:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "610:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "597:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "597:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:38:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "651:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "644:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 122,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "644:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:19:1"
									},
									"scope": 126,
									"src": "557:106:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 127,
							"src": "307:358:1",
							"usedErrors": []
						}
					],
					"src": "92:574:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 132,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 135,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 133,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 134,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 137,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 136,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 166,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 150,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 155,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 156,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 159,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 165,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 178,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 187,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 244,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 244,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 244,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 244,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 244,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 244,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							280
						]
					},
					"id": 281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 280,
							"linearizedBaseContracts": [
								280
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1471:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1494:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1519:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1542:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1568:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1585:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1604:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:4"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:4"
									},
									"scope": 280,
									"src": "1446:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1950:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:4"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1988:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:4"
									},
									"scope": 280,
									"src": "1934:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:4"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "2240:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:4"
									},
									"scope": 280,
									"src": "2189:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 281,
							"src": "620:1631:4",
							"usedErrors": []
						}
					],
					"src": "114:2138:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							856
						],
						"IERC20": [
							244
						],
						"IERC20Permit": [
							280
						],
						"SafeERC20": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 245,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 281,
							"src": "164:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 857,
							"src": "211:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 289,
									"libraryName": {
										"id": 287,
										"name": "Address",
										"nameLocations": [
											"737:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 856,
										"src": "737:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:5",
									"typeName": {
										"id": 288,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "865:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "895:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 303,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "925:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 211,
																		"src": "925:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 306,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "950:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "954:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 301,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 299,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "875:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "875:86:5"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 290,
														"name": "IERC20",
														"nameLocations": [
															"794:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "794:6:5"
													},
													"referencedDeclaration": 244,
													"src": "794:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "816:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "836:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:5"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:5"
									},
									"scope": 561,
									"src": "763:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1102:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1132:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 328,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "1162:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 243,
																		"src": "1162:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 331,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1191:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "1197:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1201:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1112:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:5"
											}
										]
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1009:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1009:6:5"
													},
													"referencedDeclaration": 244,
													"src": "1009:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1031:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1053:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1073:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:5"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:5"
									},
									"scope": 561,
									"src": "974:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1581:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1830:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 358,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 356,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 360,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "1877:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 354,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "1846:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "1846:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2001:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 373,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "2031:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2031:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 376,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "2055:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "2064:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 369,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1981:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:5"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1505:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1505:6:5"
													},
													"referencedDeclaration": 244,
													"src": "1505:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1527:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1552:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:5"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:5"
									},
									"scope": 561,
									"src": "1475:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2200:194:5",
										"statements": [
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2210:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 398,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 400,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2264:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 394,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "2233:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$244",
																	"typeString": "contract IERC20"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:5",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 221,
															"src": "2233:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 402,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2275:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2310:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 409,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2340:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2340:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 412,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2364:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "2373:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 407,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 405,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2290:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:5"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2124:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 383,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2124:6:5"
													},
													"referencedDeclaration": 244,
													"src": "2124:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2146:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2171:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:5"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:5"
									},
									"scope": 561,
									"src": "2084:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "2516:370:5",
										"statements": [
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:5",
												"statements": [
													{
														"assignments": [
															429
														],
														"declarations": [
															{
																"constant": false,
																"id": 429,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2550:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 438,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 434,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 432,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "2604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2573:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 221,
																"src": "2573:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2634:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 441,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2650:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:5"
													},
													{
														"assignments": [
															447
														],
														"declarations": [
															{
																"constant": false,
																"id": 447,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2715:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2738:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 449,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2753:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 453,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2792:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 456,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 421,
																					"src": "2822:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 231,
																				"src": "2822:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 459,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2846:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 460,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "2855:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 454,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 452,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "2772:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 463,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:5"
													}
												]
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2440:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 419,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2440:6:5"
													},
													"referencedDeclaration": 244,
													"src": "2440:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2462:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2487:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:5"
									},
									"scope": 561,
									"src": "2400:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3107:257:5",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3117:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"id": 490,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3152:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 488,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3139:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3139:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3181:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3188:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "3197:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 499,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3204:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 500,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3214:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 501,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3217:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 502,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3220:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "3168:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:5"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3232:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3266:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 507,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3253:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3253:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "3290:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 514,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3304:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:5"
											}
										]
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2921:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$280",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 467,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 280,
														"src": "2921:12:5"
													},
													"referencedDeclaration": 280,
													"src": "2921:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$280",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2949:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2972:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2997:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3020:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3046:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3063:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3082:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 482,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:5"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:5"
									},
									"scope": 561,
									"src": "2892:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3817:636:5",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "4166:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4220:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "4200:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 533,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 650,
														"src": "4192:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 542,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4275:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "4271:176:5",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "4298:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 549,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "4370:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 550,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 552,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 547,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 546,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3776:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 524,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "3776:6:5"
													},
													"referencedDeclaration": 244,
													"src": "3776:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3790:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:5"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:5"
									},
									"scope": 561,
									"src": "3747:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 562,
							"src": "707:3748:5",
							"usedErrors": []
						}
					],
					"src": "115:4341:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							856
						]
					},
					"id": 857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 564,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 572,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 571,
												"id": 577,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 856,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 590,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		],
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 588,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 593,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													599,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 598,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 600,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 602,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 856,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "3555:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "3585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 623,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															650
														],
														"referencedDeclaration": 650,
														"src": "3572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 628,
												"nodeType": "Return",
												"src": "3565:67:6"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 856,
									"src": "3466:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "4008:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "4047:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "4055:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 646,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "4064:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 642,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															670,
															720
														],
														"referencedDeclaration": 720,
														"src": "4025:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 641,
												"id": 648,
												"nodeType": "Return",
												"src": "4018:59:6"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:6"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:6"
									},
									"scope": 856,
									"src": "3861:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "4589:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "4636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 665,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "4642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 662,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															670,
															720
														],
														"referencedDeclaration": 720,
														"src": "4606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 668,
												"nodeType": "Return",
												"src": "4599:94:6"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4510:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4537:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:6"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:6"
									},
									"scope": 856,
									"src": "4446:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "5127:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 687,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$856",
																				"typeString": "library Address"
																			}
																		],
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 685,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 690,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "5170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 697,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "5247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 696,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:6"
											},
											{
												"assignments": [
													703,
													705
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "5300:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 702,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 705,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 719,
														"src": "5314:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 704,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"arguments": [
														{
															"id": 710,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "5367:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 706,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "5341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "5360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 714,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "5406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 715,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "5415:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 716,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "5427:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 713,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "5389:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 683,
												"id": 718,
												"nodeType": "Return",
												"src": "5382:58:6"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "4988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5012:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5039:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5062:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:6"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5113:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:6"
									},
									"scope": 856,
									"src": "4948:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "5724:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "5760:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "5768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 730,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															737,
															772
														],
														"referencedDeclaration": 772,
														"src": "5741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 729,
												"id": 735,
												"nodeType": "Return",
												"src": "5734:80:6"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5668:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 724,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:6"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "5710:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:6"
									},
									"scope": 856,
									"src": "5624:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "6163:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 751,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "6192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 750,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "6181:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 749,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:6"
											},
											{
												"assignments": [
													757,
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "6252:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 756,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 771,
														"src": "6266:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 758,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [
														{
															"id": 762,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 760,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "6293:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "6350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 767,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "6359:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 768,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6371:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 765,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "6333:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 748,
												"id": 770,
												"nodeType": "Return",
												"src": "6326:58:6"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6042:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6066:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6093:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 743,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:6"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6149:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:6"
									},
									"scope": 856,
									"src": "6005:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "6667:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "6705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "6713:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 782,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															789,
															824
														],
														"referencedDeclaration": 824,
														"src": "6684:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 781,
												"id": 787,
												"nodeType": "Return",
												"src": "6677:84:6"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "6600:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:6"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "6653:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:6"
									},
									"scope": 856,
									"src": "6570:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "7109:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 803,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "7138:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 802,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "7127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:6"
											},
											{
												"assignments": [
													809,
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "7200:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 808,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "7214:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 810,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"arguments": [
														{
															"id": 814,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "7261:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 812,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "7241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "7300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 819,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "7309:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 820,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "7321:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 817,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "7283:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 800,
												"id": 822,
												"nodeType": "Return",
												"src": "7276:58:6"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7017:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7044:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7095:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:6"
									},
									"scope": 856,
									"src": "6954:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "7721:582:6",
										"statements": [
											{
												"condition": {
													"id": 836,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 827,
													"src": "7735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 852,
													"nodeType": "Block",
													"src": "7792:505:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 840,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "7876:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 850,
																"nodeType": "Block",
																"src": "8234:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 847,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 831,
																					"src": "8259:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 846,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 849,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:6"
																	}
																]
															},
															"id": 851,
															"nodeType": "IfStatement",
															"src": "7872:415:6",
															"trueBody": {
																"id": 845,
																"nodeType": "Block",
																"src": "7899:329:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:6"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 829,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 829,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 844,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 853,
												"nodeType": "IfStatement",
												"src": "7731:566:6",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "7744:42:6",
													"statements": [
														{
															"expression": {
																"id": 837,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "7765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 835,
															"id": 838,
															"nodeType": "Return",
															"src": "7758:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7596:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 826,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7618:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 830,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7707:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:6"
									},
									"scope": 856,
									"src": "7561:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 857,
							"src": "194:8111:6",
							"usedErrors": []
						}
					],
					"src": "101:8205:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							878
						]
					},
					"id": 879,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 859,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 878,
							"linearizedBaseContracts": [
								878
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 864,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 863,
												"id": 866,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 878,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 873,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 872,
												"id": 875,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 878,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 879,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"contracts/Manager/UnemetaMarket.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/UnemetaMarket.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						],
						"IWETH": [
							2220
						],
						"OrderTypes": [
							2464
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeERC20": [
							561
						],
						"SignatureChecker": [
							2588
						],
						"TheCurrencyManager": [
							2257
						],
						"TheExManager": [
							2294
						],
						"TheExStrategy": [
							2200
						],
						"TheRoyaltyManager": [
							2310
						],
						"TheTransferManager": [
							2326
						],
						"TheTransferSelector": [
							2368
						],
						"TheUnemetaExchange": [
							2358
						],
						"UnemetaMarket": [
							2160
						]
					},
					"id": 2161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 880,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 113,
							"src": "58:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 881,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "66:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 167,
							"src": "126:85:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 883,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 166,
										"src": "134:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 887,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 562,
							"src": "212:90:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 885,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 244,
										"src": "220:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 886,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 561,
										"src": "228:9:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheCurrencyManager.sol",
							"file": "./interface/TheCurrencyManager.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2258,
							"src": "304:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 888,
										"name": "TheCurrencyManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2257,
										"src": "312:18:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheExManager.sol",
							"file": "./interface/TheExManager.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2295,
							"src": "375:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 890,
										"name": "TheExManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2294,
										"src": "383:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
							"file": "./execution/interface/TheExecutionStrategy.sol",
							"id": 893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2201,
							"src": "434:77:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 892,
										"name": "TheExStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2200,
										"src": "442:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheRoyaltyFeeManager.sol",
							"file": "./interface/TheRoyaltyFeeManager.sol",
							"id": 895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2311,
							"src": "512:71:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 894,
										"name": "TheRoyaltyManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2310,
										"src": "520:17:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheUnemetaExchange.sol",
							"file": "./interface/TheUnemetaExchange.sol",
							"id": 897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2359,
							"src": "584:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 896,
										"name": "TheUnemetaExchange",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2358,
										"src": "592:18:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/TheTransferManager.sol",
							"file": "./interface/TheTransferManager.sol",
							"id": 899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2327,
							"src": "655:70:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 898,
										"name": "TheTransferManager",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2326,
										"src": "663:18:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/trans/interface/TheTransFerSelector.sol",
							"file": "./trans/interface/TheTransFerSelector.sol",
							"id": 901,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2369,
							"src": "726:78:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 900,
										"name": "TheTransferSelector",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2368,
										"src": "734:19:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Manager/interface/IWETH.sol",
							"file": "./interface/IWETH.sol",
							"id": 903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2221,
							"src": "805:44:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 902,
										"name": "IWETH",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2220,
										"src": "813:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../libraries/OrderTypes.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2465,
							"src": "851:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 904,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2464,
										"src": "859:10:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SignatureChecker.sol",
							"file": "../libraries/SignatureChecker.sol",
							"id": 907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2589,
							"src": "907:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 906,
										"name": "SignatureChecker",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2588,
										"src": "915:16:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 908,
										"name": "TheUnemetaExchange",
										"nameLocations": [
											"1021:18:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2358,
										"src": "1021:18:8"
									},
									"id": 909,
									"nodeType": "InheritanceSpecifier",
									"src": "1021:18:8"
								},
								{
									"baseName": {
										"id": 910,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1041:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "1041:15:8"
									},
									"id": 911,
									"nodeType": "InheritanceSpecifier",
									"src": "1041:15:8"
								},
								{
									"baseName": {
										"id": 912,
										"name": "Ownable",
										"nameLocations": [
											"1058:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "1058:7:8"
									},
									"id": 913,
									"nodeType": "InheritanceSpecifier",
									"src": "1058:7:8"
								}
							],
							"canonicalName": "UnemetaMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2160,
							"linearizedBaseContracts": [
								2160,
								112,
								878,
								166,
								2358
							],
							"name": "UnemetaMarket",
							"nameLocation": "1004:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 917,
									"libraryName": {
										"id": 914,
										"name": "SafeERC20",
										"nameLocations": [
											"1101:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "1101:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1095:27:8",
									"typeName": {
										"id": 916,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 915,
											"name": "IERC20",
											"nameLocations": [
												"1115:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "1115:6:8"
										},
										"referencedDeclaration": 244,
										"src": "1115:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 921,
									"libraryName": {
										"id": 918,
										"name": "OrderTypes",
										"nameLocations": [
											"1133:10:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2464,
										"src": "1133:10:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1127:43:8",
									"typeName": {
										"id": 920,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 919,
											"name": "OrderTypes.MakerOrder",
											"nameLocations": [
												"1148:10:8",
												"1159:10:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2406,
											"src": "1148:21:8"
										},
										"referencedDeclaration": 2406,
										"src": "1148:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
											"typeString": "struct OrderTypes.MakerOrder"
										}
									}
								},
								{
									"global": false,
									"id": 925,
									"libraryName": {
										"id": 922,
										"name": "OrderTypes",
										"nameLocations": [
											"1181:10:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2464,
										"src": "1181:10:8"
									},
									"nodeType": "UsingForDirective",
									"src": "1175:43:8",
									"typeName": {
										"id": 924,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 923,
											"name": "OrderTypes.TakerOrder",
											"nameLocations": [
												"1196:10:8",
												"1207:10:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2419,
											"src": "1196:21:8"
										},
										"referencedDeclaration": 2419,
										"src": "1196:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
											"typeString": "struct OrderTypes.TakerOrder"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "1e7178d84f0b0825c65795cd62e7972809ad3aac6917843aaec596161b2c0a97",
									"id": 931,
									"name": "CancelAllOrders",
									"nameLocation": "1254:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1286:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1270:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMinNonce",
												"nameLocation": "1300:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1292:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:43:8"
									},
									"src": "1248:65:8"
								},
								{
									"anonymous": false,
									"eventSelector": "fa0ae5d80fe3763c880a3839fab0294171a6f730d1f82c4cd5392c6f67b41732",
									"id": 938,
									"name": "CancelMultipleOrders",
									"nameLocation": "1350:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1387:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1371:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderNonces",
												"nameLocation": "1403:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1393:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 934,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1393:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 935,
													"nodeType": "ArrayTypeName",
													"src": "1393:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1370:45:8"
									},
									"src": "1344:72:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b4f5db40df3aced29e88a4babbc3b46e305e07d34098525d18b1497056e63838",
									"id": 942,
									"name": "NewCurrencyManager",
									"nameLocation": "1463:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"indexed": true,
												"mutability": "mutable",
												"name": "currencyManager",
												"nameLocation": "1498:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "1482:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:33:8"
									},
									"src": "1457:58:8"
								},
								{
									"anonymous": false,
									"eventSelector": "36e2a376eabc3bc60cb88f29c288f53e36874a95a7f407330ab4f166b0905698",
									"id": 946,
									"name": "NewExecutionManager",
									"nameLocation": "1563:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionManager",
												"nameLocation": "1599:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1583:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:34:8"
									},
									"src": "1557:60:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8cffb07faa2874440346743bdc0a86b06c3335cc47dc49b327d10e77b73ceb10",
									"id": 950,
									"name": "NewProtocolFeeRecipient",
									"nameLocation": "1683:23:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "protocolFeeRecipient",
												"nameLocation": "1723:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1707:36:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:38:8"
									},
									"src": "1677:68:8"
								},
								{
									"anonymous": false,
									"eventSelector": "80e3874461ebbd918ac3e81da0a92e5e51387d70f337237c9123e48d20e5a508",
									"id": 954,
									"name": "NewRoyaltyFeeManager",
									"nameLocation": "1798:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "royaltyFeeManager",
												"nameLocation": "1835:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "1819:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1818:35:8"
									},
									"src": "1792:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "205d78ab41afe80bd6b6aaa5d7599d5300ff8690da3ab1302c1b552f7baf7d8c",
									"id": 958,
									"name": "NewTransferSelectorNFT",
									"nameLocation": "1898:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"indexed": true,
												"mutability": "mutable",
												"name": "transferSelectorNFT",
												"nameLocation": "1937:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "1921:35:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:37:8"
									},
									"src": "1892:66:8"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 960,
									"mutability": "immutable",
									"name": "WETH",
									"nameLocation": "2018:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "1993:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 959,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1993:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64df049e",
									"id": 962,
									"mutability": "mutable",
									"name": "protocolFeeRecipient",
									"nameLocation": "2077:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2062:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 961,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2062:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f747d74",
									"id": 965,
									"mutability": "mutable",
									"name": "currencyManager",
									"nameLocation": "2131:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2105:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
										"typeString": "contract TheCurrencyManager"
									},
									"typeName": {
										"id": 964,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 963,
											"name": "TheCurrencyManager",
											"nameLocations": [
												"2105:18:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2257,
											"src": "2105:18:8"
										},
										"referencedDeclaration": 2257,
										"src": "2105:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
											"typeString": "contract TheCurrencyManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "483abb9f",
									"id": 968,
									"mutability": "mutable",
									"name": "executionManager",
									"nameLocation": "2172:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2152:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheExManager_$2294",
										"typeString": "contract TheExManager"
									},
									"typeName": {
										"id": 967,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 966,
											"name": "TheExManager",
											"nameLocations": [
												"2152:12:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2294,
											"src": "2152:12:8"
										},
										"referencedDeclaration": 2294,
										"src": "2152:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheExManager_$2294",
											"typeString": "contract TheExManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87e4401f",
									"id": 971,
									"mutability": "mutable",
									"name": "royaltyFeeManager",
									"nameLocation": "2219:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2194:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
										"typeString": "contract TheRoyaltyManager"
									},
									"typeName": {
										"id": 970,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 969,
											"name": "TheRoyaltyManager",
											"nameLocations": [
												"2194:17:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2310,
											"src": "2194:17:8"
										},
										"referencedDeclaration": 2310,
										"src": "2194:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
											"typeString": "contract TheRoyaltyManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5e14f68e",
									"id": 974,
									"mutability": "mutable",
									"name": "transferSelectorNFT",
									"nameLocation": "2269:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2242:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
										"typeString": "contract TheTransferSelector"
									},
									"typeName": {
										"id": 973,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 972,
											"name": "TheTransferSelector",
											"nameLocations": [
												"2242:19:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2368,
											"src": "2242:19:8"
										},
										"referencedDeclaration": 2368,
										"src": "2242:19:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
											"typeString": "contract TheTransferSelector"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4266581e",
									"id": 978,
									"mutability": "mutable",
									"name": "userMinOrderNonce",
									"nameLocation": "2363:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2328:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 977,
										"keyType": {
											"id": 975,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2336:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2328:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 976,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2347:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 984,
									"mutability": "mutable",
									"name": "_theUserOrderExecutedOrCancelled",
									"nameLocation": "2489:32:8",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "2436:85:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 983,
										"keyType": {
											"id": 979,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2444:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2436:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueType": {
											"id": 982,
											"keyType": {
												"id": 980,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2463:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2455:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueType": {
												"id": 981,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2474:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "27c4f0403323142b599832f26acd21c74a9e5b809f2215726e244a4ac588cd7d",
									"id": 996,
									"name": "RoyaltyPayment",
									"nameLocation": "2572:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"indexed": true,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "2612:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2596:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2596:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2669:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2653:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": true,
												"mutability": "mutable",
												"name": "royaltyRecipient",
												"nameLocation": "2713:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2697:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2697:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2774:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2766:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2811:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "2803:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2803:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:245:8"
									},
									"src": "2566:266:8"
								},
								{
									"anonymous": false,
									"eventSelector": "68cd251d4d267c6e2034ff0088b990352b97b2002c0476587d0c4da889c11330",
									"id": 1018,
									"name": "TakerAsk",
									"nameLocation": "2870:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderHash",
												"nameLocation": "2896:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2888:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderNonce",
												"nameLocation": "2923:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2915:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "taker",
												"nameLocation": "2959:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2943:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "maker",
												"nameLocation": "2990:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2974:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "3021:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3005:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3005:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "3047:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3039:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3073:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3065:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3065:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3101:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3093:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3126:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3118:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3118:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3150:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "3142:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3142:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:283:8"
									},
									"src": "2864:298:8"
								},
								{
									"anonymous": false,
									"eventSelector": "95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be",
									"id": 1040,
									"name": "TakerBid",
									"nameLocation": "3200:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderHash",
												"nameLocation": "3226:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3218:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1019,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "orderNonce",
												"nameLocation": "3253:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3245:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3245:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "taker",
												"nameLocation": "3289:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3273:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3273:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "maker",
												"nameLocation": "3320:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3304:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3304:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "3351:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3335:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3335:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "3377:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3369:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "3403:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3395:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3431:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3423:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3456:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3448:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3480:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3472:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:283:8"
									},
									"src": "3194:298:8"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "4219:274:8",
										"statements": [
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1053,
														"name": "currencyManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "4229:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1055,
																"name": "_currencyManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "4266:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1054,
															"name": "TheCurrencyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "4247:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheCurrencyManager_$2257_$",
																"typeString": "type(contract TheCurrencyManager)"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4247:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"src": "4229:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
														"typeString": "contract TheCurrencyManager"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "4229:54:8"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "executionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "4293:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1061,
																"name": "_executionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "4325:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1060,
															"name": "TheExManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "4312:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheExManager_$2294_$",
																"typeString": "type(contract TheExManager)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4312:31:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"src": "4293:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheExManager_$2294",
														"typeString": "contract TheExManager"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "4293:50:8"
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "royaltyFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4353:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1067,
																"name": "_royaltyFeeManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1046,
																"src": "4391:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1066,
															"name": "TheRoyaltyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "4373:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheRoyaltyManager_$2310_$",
																"typeString": "type(contract TheRoyaltyManager)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4373:37:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"src": "4353:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
														"typeString": "contract TheRoyaltyManager"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "4353:57:8"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4420:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "4427:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4420:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "4420:12:8"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1075,
														"name": "protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "4442:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1076,
														"name": "_protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4465:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4442:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "4442:44:8"
											}
										]
									},
									"id": 1080,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_currencyManager",
												"nameLocation": "3950:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3942:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_executionManager",
												"nameLocation": "4003:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "3995:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "_royaltyFeeManager",
												"nameLocation": "4058:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4050:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "_WETH",
												"nameLocation": "4116:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4108:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_protocolFeeRecipient",
												"nameLocation": "4154:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4146:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3932:286:8"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4219:0:8"
									},
									"scope": 2160,
									"src": "3921:572:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2339
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "4885:1952:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"expression": {
																			"id": 1093,
																			"name": "makerAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "4904:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																				"typeString": "struct OrderTypes.MakerOrder calldata"
																			}
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4913:10:8",
																		"memberName": "isOrderAsk",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2375,
																		"src": "4904:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4903:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "4929:20:8",
																		"subExpression": {
																			"expression": {
																				"id": 1096,
																				"name": "takerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "4930:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																					"typeString": "struct OrderTypes.TakerOrder calldata"
																				}
																			},
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4939:10:8",
																			"memberName": "isOrderAsk",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2408,
																			"src": "4930:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4928:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4903:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722041626f7574204f726465722053696465",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4952:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															},
															"value": "Error About Order Side"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4895:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4895:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "4895:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1105,
																	"name": "makerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "5025:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5034:8:8",
																"memberName": "currency",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2389,
																"src": "5025:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1107,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "5046:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5025:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e6379206d7573742062652057455448",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5052:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5",
																"typeString": "literal_string \"Currency must be WETH\""
															},
															"value": "Currency must be WETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a38bfab1cad9308a884ccb7301e5d80752874026f45411ed213e652ce3713d5",
																"typeString": "literal_string \"Currency must be WETH\""
															}
														],
														"id": 1104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5017:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5017:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "5017:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1113,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5094:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5098:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5094:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1115,
																	"name": "takerBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "5108:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																		"typeString": "struct OrderTypes.TakerOrder calldata"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5117:5:8",
																"memberName": "taker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2410,
																"src": "5108:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5094:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f72646572206d757374206265207468652073656e646572",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															},
															"value": "Order must be the sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															}
														],
														"id": 1112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5086:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5086:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "5086:65:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1121,
															"name": "takerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "5220:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5229:5:8",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2412,
														"src": "5220:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1123,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5237:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5241:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5237:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5220:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1154,
													"nodeType": "Block",
													"src": "5365:86:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1146,
																				"name": "takerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "5387:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																					"typeString": "struct OrderTypes.TakerOrder calldata"
																				}
																			},
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5396:5:8",
																			"memberName": "price",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2412,
																			"src": "5387:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1148,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5405:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5409:5:8",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "5405:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5387:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d73672e76616c756520697320746f6f2068696768",
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5416:23:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350",
																			"typeString": "literal_string \"Msg.value is too high\""
																		},
																		"value": "Msg.value is too high"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_975f2c59760ff13c8714869b8f22615d5e725afd78ab172220286ba3f4292350",
																			"typeString": "literal_string \"Msg.value is too high\""
																		}
																	],
																	"id": 1145,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5379:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5379:61:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "5379:61:8"
														}
													]
												},
												"id": 1155,
												"nodeType": "IfStatement",
												"src": "5216:235:8",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "5248:111:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1130,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5292:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5296:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5292:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1134,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5312:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																					"typeString": "contract UnemetaMarket"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																					"typeString": "contract UnemetaMarket"
																				}
																			],
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5304:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1132,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5304:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5304:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1136,
																						"name": "takerBid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1083,
																						"src": "5320:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																							"typeString": "struct OrderTypes.TakerOrder calldata"
																						}
																					},
																					"id": 1137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5329:5:8",
																					"memberName": "price",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2412,
																					"src": "5320:14:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"expression": {
																						"id": 1138,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "5337:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5341:5:8",
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"src": "5337:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5320:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1141,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5319:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1127,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "5269:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1126,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "5262:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5262:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5275:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "5262:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5262:86:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "5262:86:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1157,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "5490:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "IWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2220,
																	"src": "5484:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH_$2220_$",
																		"typeString": "type(contract IWETH)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:11:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$2220",
																	"typeString": "contract IWETH"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5496:7:8",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2205,
															"src": "5484:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1160,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5512:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5516:5:8",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5512:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5484:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5484:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "5484:40:8"
											},
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "askHash",
														"nameLocation": "5586:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5578:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1165,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5578:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1167,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5596:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5605:4:8",
														"memberName": "hash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2463,
														"src": "5596:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_MakerOrder_$2406_memory_ptr_$",
															"typeString": "function (struct OrderTypes.MakerOrder memory) pure returns (bytes32)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5596:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5578:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5636:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														{
															"id": 1173,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "5646:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1171,
														"name": "_validateOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "5621:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_MakerOrder_$2406_calldata_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (struct OrderTypes.MakerOrder calldata,bytes32) view"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5621:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "5621:33:8"
											},
											{
												"assignments": [
													1177,
													1179,
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "isExecutionValid",
														"nameLocation": "5711:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5706:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5706:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "5737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5729:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5729:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5754:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "5746:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5746:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": {
													"arguments": [
														{
															"id": 1187,
															"name": "takerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "5821:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														{
															"id": 1188,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5831:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															},
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1183,
																		"name": "makerAsk",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "5778:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5787:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "5778:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1182,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "5764:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5764:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5806:14:8",
														"memberName": "canExecuteSell",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2194,
														"src": "5764:56:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_struct$_TakerOrder_$2419_memory_ptr_$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct OrderTypes.TakerOrder memory,struct OrderTypes.MakerOrder memory) view external returns (bool,uint256,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5764:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5705:135:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "isExecutionValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "5859:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53747261746567792073686f756c642062652076616c6964",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5877:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															},
															"value": "Strategy should be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5851:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5851:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "5851:53:8"
											},
											{
												"expression": {
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1196,
																"name": "_theUserOrderExecutedOrCancelled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "6004:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 1201,
															"indexExpression": {
																"expression": {
																	"id": 1197,
																	"name": "makerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "6037:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6046:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "6037:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6004:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1202,
														"indexExpression": {
															"expression": {
																"id": 1199,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6054:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6063:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "6054:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6004:65:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6072:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6004:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "6004:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1207,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6155:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6164:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "6155:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1209,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6186:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6195:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "6186:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6219:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1212,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6240:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6249:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "6240:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1214,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6269:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6278:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "6269:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1216,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6297:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6306:18:8",
															"memberName": "minPercentageToAsk",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2397,
															"src": "6297:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1206,
														"name": "_transferFeesAndFundsWithWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "6112:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,uint256,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:222:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "6112:222:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1221,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6408:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6417:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "6408:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1223,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6441:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "6441:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1225,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6470:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6479:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "6470:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6498:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1228,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "6519:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "_transferNonFungibleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "6369:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6369:157:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "6369:157:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1232,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "6564:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1233,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6585:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6594:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "6585:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1235,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6613:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6622:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "6613:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1237,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6641:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6650:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "6641:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1239,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6670:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6679:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "6670:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1241,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6701:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6710:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "6701:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1243,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "6732:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6741:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "6732:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "6765:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1246,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "6786:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1247,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "6806:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6815:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "6806:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1231,
														"name": "TakerBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6542:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,address,address,address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6542:288:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "EmitStatement",
												"src": "6537:293:8"
											}
										]
									},
									"functionSelector": "509a1a41",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "nonReentrant",
												"nameLocations": [
													"4872:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "4872:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4872:12:8"
										}
									],
									"name": "matchSellerOrdersWETH",
									"nameLocation": "4720:21:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1088,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4863:8:8"
									},
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "4782:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4751:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 1082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1081,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"4751:10:8",
															"4762:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "4751:21:8"
													},
													"referencedDeclaration": 2419,
													"src": "4751:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "4831:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4800:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1084,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"4800:10:8",
															"4811:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "4800:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "4800:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:104:8"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4885:0:8"
									},
									"scope": 2160,
									"src": "4711:2126:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2348
									],
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "7188:1620:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"expression": {
																			"id": 1265,
																			"name": "makerAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "7266:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																				"typeString": "struct OrderTypes.MakerOrder calldata"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7275:10:8",
																		"memberName": "isOrderAsk",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2375,
																		"src": "7266:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7265:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "7291:20:8",
																		"subExpression": {
																			"expression": {
																				"id": 1268,
																				"name": "takerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "7292:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																					"typeString": "struct OrderTypes.TakerOrder calldata"
																				}
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7301:10:8",
																			"memberName": "isOrderAsk",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2408,
																			"src": "7292:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7290:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7265:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722041626f7574204f726465722053696465",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7314:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															},
															"value": "Error About Order Side"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7257:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7257:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "7257:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1277,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7398:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7402:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7398:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1279,
																	"name": "takerBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "7412:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																		"typeString": "struct OrderTypes.TakerOrder calldata"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7421:5:8",
																"memberName": "taker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2410,
																"src": "7412:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7398:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f72646572206d757374206265207468652073656e646572",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7428:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															},
															"value": "Order must be the sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															}
														],
														"id": 1276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7390:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7390:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "7390:65:8"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "askHash",
														"nameLocation": "7505:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7497:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1285,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7497:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1287,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7515:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7524:4:8",
														"memberName": "hash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2463,
														"src": "7515:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_MakerOrder_$2406_memory_ptr_$",
															"typeString": "function (struct OrderTypes.MakerOrder memory) pure returns (bytes32)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7515:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7497:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1292,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7555:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														{
															"id": 1293,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "7565:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1291,
														"name": "_validateOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "7540:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_MakerOrder_$2406_calldata_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (struct OrderTypes.MakerOrder calldata,bytes32) view"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7540:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "7540:33:8"
											},
											{
												"assignments": [
													1297,
													1299,
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "isExecutionValid",
														"nameLocation": "7601:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7596:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1296,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7596:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1299,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "7627:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7619:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7619:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7644:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "7636:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7636:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"id": 1307,
															"name": "takerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "7711:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														{
															"id": 1308,
															"name": "makerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7721:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															},
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1303,
																		"name": "makerAsk",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "7668:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7677:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "7668:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1302,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "7654:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7654:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7696:14:8",
														"memberName": "canExecuteSell",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2194,
														"src": "7654:56:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_struct$_TakerOrder_$2419_memory_ptr_$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct OrderTypes.TakerOrder memory,struct OrderTypes.MakerOrder memory) view external returns (bool,uint256,uint256)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7654:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7595:135:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "isExecutionValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "7784:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53747261746567792073686f756c642062652076616c6964",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7802:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															},
															"value": "Strategy should be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															}
														],
														"id": 1311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7776:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7776:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "7776:53:8"
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1316,
																"name": "_theUserOrderExecutedOrCancelled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "7929:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 1321,
															"indexExpression": {
																"expression": {
																	"id": 1317,
																	"name": "makerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "7962:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7971:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "7962:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7929:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1322,
														"indexExpression": {
															"expression": {
																"id": 1319,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "7979:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7988:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "7979:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7929:65:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7997:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7929:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "7929:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1327,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8072:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8081:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "8072:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1329,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8103:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8112:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8103:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8136:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1332,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8157:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8166:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "8157:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8188:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8192:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8188:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1336,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8212:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8221:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "8212:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1338,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8241:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8250:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "8241:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1340,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8269:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8278:18:8",
															"memberName": "minPercentageToAsk",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2397,
															"src": "8269:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "_transferFeesAndFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "8037:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,address,address,uint256,uint256)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8037:269:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "8037:269:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1345,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8379:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8388:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8379:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1347,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8412:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8421:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "8412:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1349,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8441:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8450:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "8441:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8469:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1352,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "8490:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1344,
														"name": "_transferNonFungibleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "8340:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8340:157:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "8340:157:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1356,
															"name": "askHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "8535:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1357,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8556:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8565:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "8556:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1359,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8584:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8593:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "8584:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1361,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8612:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8621:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "8612:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1363,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8641:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8650:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "8641:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1365,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8672:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8681:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "8672:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1367,
																"name": "makerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8703:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8712:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8703:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "8736:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "8757:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1371,
																"name": "takerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "8777:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8786:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "8777:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1355,
														"name": "TakerBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "8513:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,address,address,address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:288:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "EmitStatement",
												"src": "8508:293:8"
											}
										]
									},
									"functionSelector": "45ea7231",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1261,
												"name": "nonReentrant",
												"nameLocations": [
													"7171:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "7171:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7171:12:8"
										}
									],
									"name": "matchSellerOrders",
									"nameLocation": "7041:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7158:8:8"
									},
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "7090:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "7059:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 1254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1253,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"7059:10:8",
															"7070:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "7059:21:8"
													},
													"referencedDeclaration": 2419,
													"src": "7059:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "7131:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "7100:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1257,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1256,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"7100:10:8",
															"7111:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "7100:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "7100:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7058:82:8"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7188:0:8"
									},
									"scope": 2160,
									"src": "7032:1776:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2357
									],
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "9157:1735:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "9288:20:8",
																		"subExpression": {
																			"expression": {
																				"id": 1389,
																				"name": "makerBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "9289:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																					"typeString": "struct OrderTypes.MakerOrder calldata"
																				}
																			},
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9298:10:8",
																			"memberName": "isOrderAsk",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2375,
																			"src": "9289:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9287:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"expression": {
																			"id": 1393,
																			"name": "takerAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1379,
																			"src": "9314:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																				"typeString": "struct OrderTypes.TakerOrder calldata"
																			}
																		},
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9323:10:8",
																		"memberName": "isOrderAsk",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2408,
																		"src": "9314:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1395,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9313:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9287:47:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722041626f7574204f726465722053696465",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9336:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															},
															"value": "Error About Order Side"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11ded03e325cba3ff71a59fa4be05b7d331af6a334f3c4855987c3332192f1c6",
																"typeString": "literal_string \"Error About Order Side\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9279:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9279:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "9279:82:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1401,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9420:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9424:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9420:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1403,
																	"name": "takerAsk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "9434:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																		"typeString": "struct OrderTypes.TakerOrder calldata"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9443:5:8",
																"memberName": "taker",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2410,
																"src": "9434:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9420:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f72646572206d757374206265207468652073656e646572",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9450:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															},
															"value": "Order must be the sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b4172954035b38ddd27888f15d99dc5fc7e697d8c107b08349a330285a4cac0",
																"typeString": "literal_string \"Order must be the sender\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9412:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9412:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "9412:65:8"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "bidHash",
														"nameLocation": "9529:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9521:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1409,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9521:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1411,
															"name": "makerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "9539:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9548:4:8",
														"memberName": "hash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2463,
														"src": "9539:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_MakerOrder_$2406_memory_ptr_$",
															"typeString": "function (struct OrderTypes.MakerOrder memory) pure returns (bytes32)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9539:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9521:33:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"name": "makerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "9621:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														},
														{
															"id": 1417,
															"name": "bidHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "9631:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1415,
														"name": "_validateOrder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "9606:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_MakerOrder_$2406_calldata_ptr_$_t_bytes32_$returns$__$",
															"typeString": "function (struct OrderTypes.MakerOrder calldata,bytes32) view"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9606:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "9606:33:8"
											},
											{
												"assignments": [
													1421,
													1423,
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "isExecutionValid",
														"nameLocation": "9720:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9715:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1420,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9715:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "9746:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9738:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9738:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "9763:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1499,
														"src": "9755:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9755:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1434,
												"initialValue": {
													"arguments": [
														{
															"id": 1431,
															"name": "takerAsk",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "9829:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															}
														},
														{
															"id": 1432,
															"name": "makerBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "9839:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																"typeString": "struct OrderTypes.TakerOrder calldata"
															},
															{
																"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																"typeString": "struct OrderTypes.MakerOrder calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1427,
																		"name": "makerBid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "9787:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9796:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "9787:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1426,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "9773:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9773:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9815:13:8",
														"memberName": "canExecuteBuy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "9773:55:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_struct$_TakerOrder_$2419_memory_ptr_$_t_struct$_MakerOrder_$2406_memory_ptr_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct OrderTypes.TakerOrder memory,struct OrderTypes.MakerOrder memory) view external returns (bool,uint256,uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9773:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9714:134:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1436,
															"name": "isExecutionValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "9867:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53747261746567792073686f756c642062652076616c6964",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9885:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															},
															"value": "Strategy should be valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1be51c0497ab6d0d9f17bd9547bfff20c0eb90c6460858eb153413a13b76c483",
																"typeString": "literal_string \"Strategy should be valid\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9859:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9859:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "9859:53:8"
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1440,
																"name": "_theUserOrderExecutedOrCancelled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "10012:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 1445,
															"indexExpression": {
																"expression": {
																	"id": 1441,
																	"name": "makerBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "10045:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10054:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "10045:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10012:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1446,
														"indexExpression": {
															"expression": {
																"id": 1443,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10062:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10071:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "10062:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10012:65:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10080:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10012:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "10012:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1451,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10158:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10167:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "10158:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10191:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10195:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10191:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1455,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10215:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10224:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "10215:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10244:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1458,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "10265:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1450,
														"name": "_transferNonFungibleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "10119:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10119:153:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "10119:153:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1462,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10343:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10352:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "10343:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1464,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10374:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10383:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "10374:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10407:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1467,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10428:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10437:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "10428:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1469,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10459:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10468:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "10459:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1471,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10488:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10497:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "10488:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1473,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10516:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10525:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "10516:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1475,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10544:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10553:18:8",
															"memberName": "minPercentageToAsk",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2416,
															"src": "10544:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1461,
														"name": "_transferFeesAndFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "10308:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,address,address,address,uint256,uint256)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10308:273:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "10308:273:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1480,
															"name": "bidHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "10619:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1481,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10640:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10649:5:8",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2391,
															"src": "10640:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1483,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10668:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10677:5:8",
															"memberName": "taker",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "10668:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1485,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10696:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10705:6:8",
															"memberName": "signer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2377,
															"src": "10696:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1487,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10725:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10734:8:8",
															"memberName": "strategy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2387,
															"src": "10725:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1489,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10756:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10765:8:8",
															"memberName": "currency",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2389,
															"src": "10756:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1491,
																"name": "makerBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10787:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																	"typeString": "struct OrderTypes.MakerOrder calldata"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10796:10:8",
															"memberName": "collection",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "10787:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "10820:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "10841:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1495,
																"name": "takerAsk",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "10861:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
																	"typeString": "struct OrderTypes.TakerOrder calldata"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10870:5:8",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2412,
															"src": "10861:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1479,
														"name": "TakerAsk",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "10597:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,address,address,address,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10597:288:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "EmitStatement",
												"src": "10592:293:8"
											}
										]
									},
									"functionSelector": "63521def",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1386,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1385,
												"name": "nonReentrant",
												"nameLocations": [
													"9140:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "9140:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9140:12:8"
										}
									],
									"name": "matchesBuyerOrder",
									"nameLocation": "9010:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1384,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9127:8:8"
									},
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "9059:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "9028:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 1378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1377,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"9028:10:8",
															"9039:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "9028:21:8"
													},
													"referencedDeclaration": 2419,
													"src": "9028:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "9100:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "9069:39:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"9069:10:8",
															"9080:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "9069:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "9069:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9027:82:8"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9157:0:8"
									},
									"scope": 2160,
									"src": "9001:1891:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "11105:414:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1506,
																"name": "minNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "11123:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"baseExpression": {
																	"id": 1507,
																	"name": "userMinOrderNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "11134:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1510,
																"indexExpression": {
																	"expression": {
																		"id": 1508,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11152:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11156:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11152:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11134:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11123:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f776572207468616e2063757272656e74",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11165:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
															},
															"value": "Cancel Order nonce cannot lower than current"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11115:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11115:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "11115:97:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "minNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "11230:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1517,
																		"name": "userMinOrderNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "11241:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1520,
																	"indexExpression": {
																		"expression": {
																			"id": 1518,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11259:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11263:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11259:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11241:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "353030303030",
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11273:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500000_by_1",
																		"typeString": "int_const 500000"
																	},
																	"value": "500000"
																},
																"src": "11241:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11230:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742063616e63656c20746f6f206d616e79206f7264657273",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11281:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec",
																"typeString": "literal_string \"Cannot cancel too many orders\""
															},
															"value": "Cannot cancel too many orders"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5241aaf8a4dd6b9fed24caa7d8de4bb9d984658bf28904e48b50abe5c6f2c3ec",
																"typeString": "literal_string \"Cannot cancel too many orders\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11222:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "11222:91:8"
											},
											{
												"expression": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1527,
															"name": "userMinOrderNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "11419:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1530,
														"indexExpression": {
															"expression": {
																"id": 1528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11437:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11441:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11437:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11419:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1531,
														"name": "minNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "11451:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11419:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "11419:40:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11491:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11495:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11491:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "minNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "11503:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1534,
														"name": "CancelAllOrders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "11475:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11475:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "EmitStatement",
												"src": "11470:42:8"
											}
										]
									},
									"functionSelector": "cbd2ec65",
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelAllOrdersForSender",
									"nameLocation": "11053:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "minNonce",
												"nameLocation": "11086:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "11078:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11077:18:8"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11105:0:8"
									},
									"scope": 2160,
									"src": "11044:475:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "11762:399:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1548,
																	"name": "NonceList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "11780:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11790:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11780:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11799:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11780:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420626520656d7074792043616e63656c206c697374",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11802:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50",
																"typeString": "literal_string \"Cannot be empty Cancel list\""
															},
															"value": "Cannot be empty Cancel list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8064d09f12cb040f7a9c27873ae1c847f70a94cf541ecdcea80f860223a3f50",
																"typeString": "literal_string \"Cannot be empty Cancel list\""
															}
														],
														"id": 1547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11772:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11772:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "11772:60:8"
											},
											{
												"body": {
													"id": 1589,
													"nodeType": "Block",
													"src": "11890:206:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1567,
																				"name": "NonceList",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1544,
																				"src": "11912:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1569,
																			"indexExpression": {
																				"id": 1568,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1556,
																				"src": "11922:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11912:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1570,
																				"name": "userMinOrderNonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "11928:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1573,
																			"indexExpression": {
																				"expression": {
																					"id": 1571,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11946:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1572,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "11950:6:8",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11946:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11928:29:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11912:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e63656c204f72646572206e6f6e63652063616e6e6f74206c6f776572207468616e2063757272656e74",
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11959:46:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																			"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
																		},
																		"value": "Cancel Order nonce cannot lower than current"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1a6834f00389aa89820575be393df882c67da95ce0ecd0433ecdea9f443852b8",
																			"typeString": "literal_string \"Cancel Order nonce cannot lower than current\""
																		}
																	],
																	"id": 1566,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11904:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11904:102:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "11904:102:8"
														},
														{
															"expression": {
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1578,
																			"name": "_theUserOrderExecutedOrCancelled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 984,
																			"src": "12020:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(uint256 => bool))"
																			}
																		},
																		"id": 1584,
																		"indexExpression": {
																			"expression": {
																				"id": 1579,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "12053:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12057:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "12053:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12020:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 1585,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1581,
																			"name": "NonceList",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "12065:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1583,
																		"indexExpression": {
																			"id": 1582,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1556,
																			"src": "12075:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12065:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12020:58:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12081:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "12020:65:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1588,
															"nodeType": "ExpressionStatement",
															"src": "12020:65:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1559,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "11863:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1560,
															"name": "NonceList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "11867:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11877:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11867:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11863:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1590,
												"initializationExpression": {
													"assignments": [
														1556
													],
													"declarations": [
														{
															"constant": false,
															"id": 1556,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11856:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1590,
															"src": "11848:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1555,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11848:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1558,
													"initialValue": {
														"hexValue": "30",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11860:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11848:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11885:3:8",
														"subExpression": {
															"id": 1563,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "11885:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1565,
													"nodeType": "ExpressionStatement",
													"src": "11885:3:8"
												},
												"nodeType": "ForStatement",
												"src": "11843:253:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1592,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12132:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12136:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12132:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1594,
															"name": "NonceList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "12144:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1591,
														"name": "CancelMultipleOrders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "12111:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12111:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "EmitStatement",
												"src": "12106:48:8"
											}
										]
									},
									"functionSelector": "9e53a69a",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelMultipleMakerOrders",
									"nameLocation": "11697:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "NonceList",
												"nameLocation": "11742:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "11723:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1542,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11723:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1543,
													"nodeType": "ArrayTypeName",
													"src": "11723:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11722:30:8"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11762:0:8"
									},
									"scope": 2160,
									"src": "11688:473:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "12563:118:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1607,
															"name": "_theUserOrderExecutedOrCancelled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "12624:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(uint256 => bool))"
															}
														},
														"id": 1609,
														"indexExpression": {
															"id": 1608,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "12657:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12624:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 1611,
													"indexExpression": {
														"id": 1610,
														"name": "orderNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "12663:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12624:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1612,
												"nodeType": "Return",
												"src": "12617:57:8"
											}
										]
									},
									"functionSelector": "31e27e27",
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserOrderNonceExecutedOrCancelled",
									"nameLocation": "12464:35:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "12508:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "12500:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "orderNonce",
												"nameLocation": "12522:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "12514:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12514:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12499:34:8"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "12557:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12557:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12556:6:8"
									},
									"scope": 2160,
									"src": "12455:226:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "13547:1618:8",
										"statements": [
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "finalSellerAmount",
														"nameLocation": "13599:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "13591:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13591:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1636,
												"initialValue": {
													"id": 1635,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1628,
													"src": "13619:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13591:34:8"
											},
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "protocolFeeAmount",
														"nameLocation": "13694:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "13686:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13686:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1643,
												"initialValue": {
													"arguments": [
														{
															"id": 1640,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "13736:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1641,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "13746:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1639,
														"name": "_calculateProtocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "13714:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13714:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13686:67:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1644,
																	"name": "protocolFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "14022:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14054:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14046:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1645,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14046:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14046:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14022:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1650,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14021:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1651,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "14062:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14083:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14062:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1654,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14061:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14021:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1670,
												"nodeType": "IfStatement",
												"src": "14017:227:8",
												"trueBody": {
													"id": 1669,
													"nodeType": "Block",
													"src": "14087:157:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1660,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "14135:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1661,
																		"name": "protocolFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "14141:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1662,
																		"name": "protocolFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "14163:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1657,
																				"name": "currency",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "14108:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1656,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "14101:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14101:16:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14118:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "14101:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14101:80:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1664,
															"nodeType": "ExpressionStatement",
															"src": "14101:80:8"
														},
														{
															"expression": {
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1665,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "14195:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1666,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "14216:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14195:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1668,
															"nodeType": "ExpressionStatement",
															"src": "14195:38:8"
														}
													]
												}
											},
											{
												"assignments": [
													1672,
													1674
												],
												"declarations": [
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "royaltyFeeRecipient",
														"nameLocation": "14302:19:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "14294:27:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1671,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14294:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1674,
														"mutability": "mutable",
														"name": "royaltyFeeAmount",
														"nameLocation": "14331:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "14323:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14323:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1677,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "14413:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1678,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "14425:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1679,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "14434:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1675,
															"name": "royaltyFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "14351:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
																"typeString": "contract TheRoyaltyManager"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14378:34:8",
														"memberName": "calculateRoyaltyFeeAndGetRecipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2309,
														"src": "14351:61:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) view external returns (address,uint256)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14351:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14293:148:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1682,
																	"name": "royaltyFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "14537:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14568:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14560:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1683,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14560:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14560:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14537:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1688,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14536:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1689,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "14576:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14596:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14576:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1692,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14575:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14536:62:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "14532:326:8",
												"trueBody": {
													"id": 1715,
													"nodeType": "Block",
													"src": "14600:258:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "14648:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1699,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "14654:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1700,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "14675:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1695,
																				"name": "currency",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "14621:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1694,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "14614:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14614:16:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14631:16:8",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 338,
																	"src": "14614:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14614:78:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1702,
															"nodeType": "ExpressionStatement",
															"src": "14614:78:8"
														},
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1703,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "14706:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1704,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "14727:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14706:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "14706:37:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1708,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "14778:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1709,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "14790:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1710,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "14799:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1711,
																		"name": "currency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "14820:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1712,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "14830:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1707,
																	"name": "RoyaltyPayment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "14763:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,address,address,uint256)"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14763:84:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1714,
															"nodeType": "EmitStatement",
															"src": "14758:89:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1718,
																			"name": "finalSellerAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1634,
																			"src": "14950:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3130303030",
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14970:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10000"
																		},
																		"src": "14950:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1721,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14949:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1722,
																			"name": "minPercentageToAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1630,
																			"src": "14981:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1723,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "15002:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14981:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14980:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14949:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652066656520697320746f6f206869676820666f72207468652073656c6c6572",
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15011:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															},
															"value": "The fee is too high for the seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															}
														],
														"id": 1717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14941:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14941:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "14941:107:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1734,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "15129:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1735,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "15135:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1736,
															"name": "finalSellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "15139:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1731,
																	"name": "currency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "15102:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1730,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "15095:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15095:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15112:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "15095:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15095:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "15095:62:8"
											}
										]
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFeesAndFunds",
									"nameLocation": "13303:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "13342:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13334:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13334:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "13368:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13360:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13360:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13396:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13388:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13388:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "13421:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13413:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13413:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13447:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13439:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13439:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13469:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13461:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13461:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13489:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13481:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "minPercentageToAsk",
												"nameLocation": "13513:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "13505:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13324:213:8"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13547:0:8"
									},
									"scope": 2160,
									"src": "13294:1871:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "15828:1582:8",
										"statements": [
											{
												"assignments": [
													1756
												],
												"declarations": [
													{
														"constant": false,
														"id": 1756,
														"mutability": "mutable",
														"name": "finalSellerAmount",
														"nameLocation": "15883:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "15875:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15875:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1758,
												"initialValue": {
													"id": 1757,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1750,
													"src": "15903:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15875:34:8"
											},
											{
												"assignments": [
													1760
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "protocolFeeAmount",
														"nameLocation": "15978:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "15970:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1759,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15970:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"arguments": [
														{
															"id": 1762,
															"name": "strategy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "16020:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1763,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "16030:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "_calculateProtocolFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "15998:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15998:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15970:67:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1766,
																	"name": "protocolFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "16307:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16339:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16331:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1767,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16331:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16331:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16307:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1772,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16306:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1773,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "16347:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16368:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16347:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1776,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16346:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16306:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "IfStatement",
												"src": "16302:213:8",
												"trueBody": {
													"id": 1790,
													"nodeType": "Block",
													"src": "16372:143:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1782,
																		"name": "protocolFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "16412:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1783,
																		"name": "protocolFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "16434:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1779,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "16393:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1778,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "16386:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16386:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16399:12:8",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "16386:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16386:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1785,
															"nodeType": "ExpressionStatement",
															"src": "16386:66:8"
														},
														{
															"expression": {
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1786,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "16466:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1787,
																	"name": "protocolFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1760,
																	"src": "16487:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16466:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1789,
															"nodeType": "ExpressionStatement",
															"src": "16466:38:8"
														}
													]
												}
											},
											{
												"assignments": [
													1793,
													1795
												],
												"declarations": [
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "royaltyFeeRecipient",
														"nameLocation": "16570:19:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "16562:27:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1792,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16562:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "royaltyFeeAmount",
														"nameLocation": "16599:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "16591:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16591:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"arguments": [
														{
															"id": 1798,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "16681:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1799,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "16693:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1800,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "16702:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1796,
															"name": "royaltyFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "16619:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
																"typeString": "contract TheRoyaltyManager"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16646:34:8",
														"memberName": "calculateRoyaltyFeeAndGetRecipient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2309,
														"src": "16619:61:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) view external returns (address,uint256)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16619:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16561:148:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1803,
																	"name": "royaltyFeeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1793,
																	"src": "16805:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16836:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16828:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1804,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16828:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16828:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16805:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1809,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16804:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1810,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "16844:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16864:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16844:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16843:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16804:62:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1839,
												"nodeType": "IfStatement",
												"src": "16800:317:8",
												"trueBody": {
													"id": 1838,
													"nodeType": "Block",
													"src": "16868:249:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1819,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1793,
																		"src": "16908:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1820,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "16929:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1816,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "16889:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1815,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "16882:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16882:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$244",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16895:12:8",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "16882:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16882:64:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1822,
															"nodeType": "ExpressionStatement",
															"src": "16882:64:8"
														},
														{
															"expression": {
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1823,
																	"name": "finalSellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1756,
																	"src": "16960:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1824,
																	"name": "royaltyFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "16981:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16960:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1826,
															"nodeType": "ExpressionStatement",
															"src": "16960:37:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1828,
																		"name": "collection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1744,
																		"src": "17032:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1829,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "17044:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1830,
																		"name": "royaltyFeeRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1793,
																		"src": "17053:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1833,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "17082:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17074:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17074:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17074:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1835,
																		"name": "royaltyFeeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1795,
																		"src": "17089:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1827,
																	"name": "RoyaltyPayment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "17017:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,address,address,uint256)"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17017:89:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1837,
															"nodeType": "EmitStatement",
															"src": "17012:94:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1841,
																			"name": "finalSellerAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "17210:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3130303030",
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17230:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10000"
																		},
																		"src": "17210:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17209:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1845,
																			"name": "minPercentageToAsk",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1752,
																			"src": "17241:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1846,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "17262:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17241:27:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17240:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17209:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652066656520697320746f6f206869676820666f72207468652073656c6c6572",
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17271:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															},
															"value": "The fee is too high for the seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8ad25fddd31cfc341ecbb86aae4d24e0b5568a0f81669311911b40b5c0269b7",
																"typeString": "literal_string \"The fee is too high for the seller\""
															}
														],
														"id": 1840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17201:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17201:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "17201:107:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1857,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "17380:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1858,
															"name": "finalSellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "17384:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "17361:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1853,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "17354:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17354:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17367:12:8",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "17354:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$244_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17354:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "17354:48:8"
											}
										]
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFeesAndFundsWithWETH",
									"nameLocation": "15624:29:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "15671:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15663:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15663:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "15697:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15689:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15725:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15717:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15717:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15750:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15742:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15742:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15770:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15762:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15762:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "minPercentageToAsk",
												"nameLocation": "15794:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "15786:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15786:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15653:165:8"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15828:0:8"
									},
									"scope": 2160,
									"src": "15615:1795:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "17886:412:8",
										"statements": [
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "Manager",
														"nameLocation": "17957:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1903,
														"src": "17949:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1875,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17949:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"arguments": [
														{
															"id": 1879,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "18016:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1877,
															"name": "transferSelectorNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "17967:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
																"typeString": "contract TheTransferSelector"
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17987:28:8",
														"memberName": "checkTransferManagerForToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2367,
														"src": "17967:48:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
															"typeString": "function (address) view external returns (address)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17967:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17949:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1883,
																"name": "Manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "18088:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18107:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18099:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1884,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18099:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18099:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18088:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e277420666f756e74207472616e73666572206d616e61676572",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18111:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e",
																"typeString": "literal_string \"Can't fount transfer manager\""
															},
															"value": "Can't fount transfer manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46317fc75068a21173356e172563b05b8e695a7a9841eea87419a42bced24e8e",
																"typeString": "literal_string \"Can't fount transfer manager\""
															}
														],
														"id": 1882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18080:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18080:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "18080:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1896,
															"name": "collection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "18253:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "18265:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "18271:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "18275:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1900,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "18284:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1893,
																	"name": "Manager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1876,
																	"src": "18219:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1892,
																"name": "TheTransferManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "18200:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheTransferManager_$2326_$",
																	"typeString": "type(contract TheTransferManager)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18200:27:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheTransferManager_$2326",
																"typeString": "contract TheTransferManager"
															}
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18228:24:8",
														"memberName": "transferNonFungibleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2325,
														"src": "18200:52:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256) external"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18200:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "18200:91:8"
											}
										]
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferNonFungibleToken",
									"nameLocation": "17726:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "17769:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17761:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17761:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17797:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17789:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17789:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17819:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17811:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17811:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17839:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17831:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17864:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "17856:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17856:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17751:125:8"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17886:0:8"
									},
									"scope": 2160,
									"src": "17717:581:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "18651:130:8",
										"statements": [
											{
												"assignments": [
													1914
												],
												"declarations": [
													{
														"constant": false,
														"id": 1914,
														"mutability": "mutable",
														"name": "protocolFee",
														"nameLocation": "18669:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1928,
														"src": "18661:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1913,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18661:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1916,
																	"name": "theStrategy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1906,
																	"src": "18697:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1915,
																"name": "TheExStrategy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "18683:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_TheExStrategy_$2200_$",
																	"typeString": "type(contract TheExStrategy)"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18683:26:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TheExStrategy_$2200",
																"typeString": "contract TheExStrategy"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18710:15:8",
														"memberName": "viewProtocolFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2199,
														"src": "18683:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18683:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18661:66:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1921,
																	"name": "protocolFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1914,
																	"src": "18745:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1922,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "18759:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18745:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1924,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18744:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18769:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "18744:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1912,
												"id": 1927,
												"nodeType": "Return",
												"src": "18737:37:8"
											}
										]
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateProtocolFee",
									"nameLocation": "18560:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "theStrategy",
												"nameLocation": "18590:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "18582:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18611:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "18603:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18581:37:8"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "18642:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18642:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18641:9:8"
									},
									"scope": 2160,
									"src": "18551:230:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "19102:2022:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "19238:58:8",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1938,
																					"name": "_theUserOrderExecutedOrCancelled",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "19239:32:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(uint256 => bool))"
																					}
																				},
																				"id": 1941,
																				"indexExpression": {
																					"expression": {
																						"id": 1939,
																						"name": "Make",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1932,
																						"src": "19272:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																							"typeString": "struct OrderTypes.MakerOrder calldata"
																						}
																					},
																					"id": 1940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "19277:6:8",
																					"memberName": "signer",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2377,
																					"src": "19272:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "19239:45:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																					"typeString": "mapping(uint256 => bool)"
																				}
																			},
																			"id": 1944,
																			"indexExpression": {
																				"expression": {
																					"id": 1942,
																					"name": "Make",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1932,
																					"src": "19285:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																						"typeString": "struct OrderTypes.MakerOrder calldata"
																					}
																				},
																				"id": 1943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19290:5:8",
																				"memberName": "nonce",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2391,
																				"src": "19285:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19239:57:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19237:60:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1947,
																				"name": "Make",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1932,
																				"src": "19314:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																					"typeString": "struct OrderTypes.MakerOrder calldata"
																				}
																			},
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "19319:5:8",
																			"memberName": "nonce",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2391,
																			"src": "19314:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1949,
																				"name": "userMinOrderNonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "19328:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1952,
																			"indexExpression": {
																				"expression": {
																					"id": 1950,
																					"name": "Make",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1932,
																					"src": "19346:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																						"typeString": "struct OrderTypes.MakerOrder calldata"
																					}
																				},
																				"id": 1951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "19351:6:8",
																				"memberName": "signer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2377,
																				"src": "19346:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19328:30:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "19314:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1954,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19313:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19237:122:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f726465723a204d61746368696e67206f726465722065787069726564",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19373:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c",
																"typeString": "literal_string \"Order: Matching order expired\""
															},
															"value": "Order: Matching order expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76be0b1fa50713da90c0af8c13f3afb0308ae500cda9e1c4c153feaeb237952c",
																"typeString": "literal_string \"Order: Matching order expired\""
															}
														],
														"id": 1937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19162:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19162:252:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "19162:252:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1960,
																	"name": "Make",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "19474:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19479:6:8",
																"memberName": "signer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2377,
																"src": "19474:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19497:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19489:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1962,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "19489:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19489:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "19474:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865204f72646572207369676e65722063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19501:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d",
																"typeString": "literal_string \"The Order signer cannot be the zero address\""
															},
															"value": "The Order signer cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_855d91cca0bbd23d0d46b2241c221c68f9f085632f57757ff594a6e929c9a06d",
																"typeString": "literal_string \"The Order signer cannot be the zero address\""
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19466:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19466:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "19466:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1971,
																	"name": "Make",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "19611:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																		"typeString": "struct OrderTypes.MakerOrder calldata"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19616:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "19611:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19625:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19611:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206f7264657220616d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19628:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e",
																"typeString": "literal_string \"The order amount should be greater than 0\""
															},
															"value": "The order amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf8cc841daf87d6abd99167ebe88f3584a528e930293b53e034c1c2ba777d32e",
																"typeString": "literal_string \"The order amount should be greater than 0\""
															}
														],
														"id": 1970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19603:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19603:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "19603:69:8"
											},
											{
												"assignments": [
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "Domain",
														"nameLocation": "19691:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "19683:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1978,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "19683:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19749:66:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
																		"typeString": "int_const 6307...(69 digits omitted)...1551"
																	},
																	"value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
																},
																{
																	"hexValue": "307832653334343533393366323131643131643766383864333235626332366365373839373662346465636433393032396665623230326439623430396663336335",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19944:66:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1",
																		"typeString": "int_const 2089...(69 digits omitted)...6421"
																	},
																	"value": "0x2e3445393f211d11d7f88d325bc26ce78976b4decd39029feb202d9b409fc3c5"
																},
																{
																	"hexValue": "307863383965666461613534633066323063376164663631323838326466303935306635613935313633376530333037636463623463363732663239386238626336",
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20070:66:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1",
																		"typeString": "int_const 9074...(69 digits omitted)...1126"
																	},
																	"value": "0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6"
																},
																{
																	"expression": {
																		"id": 1986,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "20209:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20215:7:8",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "20209:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1990,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20248:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																				"typeString": "contract UnemetaMarket"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_UnemetaMarket_$2160",
																				"typeString": "contract UnemetaMarket"
																			}
																		],
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20240:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1988,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20240:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20240:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
																		"typeString": "int_const 6307...(69 digits omitted)...1551"
																	},
																	{
																		"typeIdentifier": "t_rational_20898744846061914927725651026493891126521542386169122009201150268276830356421_by_1",
																		"typeString": "int_const 2089...(69 digits omitted)...6421"
																	},
																	{
																		"typeIdentifier": "t_rational_90743482286830539503240959006302832933333810038750515972785732718729991261126_by_1",
																		"typeString": "int_const 9074...(69 digits omitted)...1126"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1981,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19721:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "19725:6:8",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "19721:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19721:546:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1980,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "19698:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19698:579:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19683:594:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1998,
																	"name": "Hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "20536:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1999,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20565:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20570:6:8",
																	"memberName": "signer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2377,
																	"src": "20565:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2001,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20612:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20617:1:8",
																	"memberName": "v",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2401,
																	"src": "20612:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"expression": {
																		"id": 2003,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20680:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20685:1:8",
																	"memberName": "r",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2403,
																	"src": "20680:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2005,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20704:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20709:1:8",
																	"memberName": "s",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2405,
																	"src": "20704:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2007,
																	"name": "Domain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "20728:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1996,
																	"name": "SignatureChecker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "20482:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SignatureChecker_$2588_$",
																		"typeString": "type(library SignatureChecker)"
																	}
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20512:6:8",
																"memberName": "verify",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2587,
																"src": "20482:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address,uint8,bytes32,bytes32,bytes32) view returns (bool)"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20482:266:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e61747572653a20496e76616c6964",
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20762:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75",
																"typeString": "literal_string \"Signature: Invalid\""
															},
															"value": "Signature: Invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66e9e7013ee50e4d13dfe461d1d4948cf40fe54b3cac22cb4d1d37efae66ec75",
																"typeString": "literal_string \"Signature: Invalid\""
															}
														],
														"id": 1995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20461:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20461:331:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "20461:331:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2015,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "20892:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20897:8:8",
																	"memberName": "currency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2389,
																	"src": "20892:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2013,
																	"name": "currencyManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "20854:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
																		"typeString": "contract TheCurrencyManager"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20870:21:8",
																"memberName": "isCurrencyWhitelisted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2239,
																"src": "20854:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20854:52:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420696e2043757272656e63792077686974656c697374",
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20908:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49",
																"typeString": "literal_string \" Not in Currency whitelist\""
															},
															"value": " Not in Currency whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e523d21e66b9bc548ab43fb484001a5605aa50aedbc761490f219887c2f2b49",
																"typeString": "literal_string \" Not in Currency whitelist\""
															}
														],
														"id": 2012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20846:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20846:91:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "20846:91:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2024,
																		"name": "Make",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "21072:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
																			"typeString": "struct OrderTypes.MakerOrder calldata"
																		}
																	},
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "21077:8:8",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "21072:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2022,
																	"name": "executionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "21033:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TheExManager_$2294",
																		"typeString": "contract TheExManager"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "21050:21:8",
																"memberName": "isStrategyWhitelisted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2276,
																"src": "21033:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21033:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "204e6f7420696e2053747261746567792077686974656c697374",
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21088:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a",
																"typeString": "literal_string \" Not in Strategy whitelist\""
															},
															"value": " Not in Strategy whitelist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3241c5622d44a70029a5743bdd75b40227ab0c746145c0346c641cac07421f8a",
																"typeString": "literal_string \" Not in Strategy whitelist\""
															}
														],
														"id": 2021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21025:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21025:92:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2029,
												"nodeType": "ExpressionStatement",
												"src": "21025:92:8"
											}
										]
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOrder",
									"nameLocation": "19022:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "Make",
												"nameLocation": "19068:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "19037:35:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 1931,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1930,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"19037:10:8",
															"19048:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "19037:21:8"
													},
													"referencedDeclaration": 2406,
													"src": "19037:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "Hash",
												"nameLocation": "19082:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "19074:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19074:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19036:51:8"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19102:0:8"
									},
									"scope": 2160,
									"src": "19013:2111:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "21356:206:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2039,
																"name": "_currencyManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "21374:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21402:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21394:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2040,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21394:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21394:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21374:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21406:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21366:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21366:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "21366:74:8"
											},
											{
												"expression": {
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2048,
														"name": "currencyManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "21450:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2050,
																"name": "_currencyManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2033,
																"src": "21487:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2049,
															"name": "TheCurrencyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "21468:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheCurrencyManager_$2257_$",
																"typeString": "type(contract TheCurrencyManager)"
															}
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21468:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
															"typeString": "contract TheCurrencyManager"
														}
													},
													"src": "21450:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheCurrencyManager_$2257",
														"typeString": "contract TheCurrencyManager"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "21450:54:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2055,
															"name": "_currencyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "21538:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2054,
														"name": "NewCurrencyManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "21519:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21519:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "EmitStatement",
												"src": "21514:41:8"
											}
										]
									},
									"functionSelector": "5ce052d7",
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2036,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2035,
												"name": "onlyOwner",
												"nameLocations": [
													"21346:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "21346:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "21346:9:8"
										}
									],
									"name": "updateCurrencyManager",
									"nameLocation": "21289:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "_currencyManager",
												"nameLocation": "21319:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "21311:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21311:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21310:26:8"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21356:0:8"
									},
									"scope": 2160,
									"src": "21280:282:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "21797:205:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2067,
																"name": "_executionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "21815:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21844:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21836:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2068,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21836:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21836:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21815:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21848:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21807:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21807:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "21807:75:8"
											},
											{
												"expression": {
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2076,
														"name": "executionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "21892:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2078,
																"name": "_executionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "21924:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2077,
															"name": "TheExManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2294,
															"src": "21911:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheExManager_$2294_$",
																"typeString": "type(contract TheExManager)"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21911:31:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheExManager_$2294",
															"typeString": "contract TheExManager"
														}
													},
													"src": "21892:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheExManager_$2294",
														"typeString": "contract TheExManager"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "21892:50:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2083,
															"name": "_executionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "21977:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2082,
														"name": "NewExecutionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "21957:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21957:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2085,
												"nodeType": "EmitStatement",
												"src": "21952:43:8"
											}
										]
									},
									"functionSelector": "d4ff41dc",
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2063,
												"name": "onlyOwner",
												"nameLocations": [
													"21787:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "21787:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "21787:9:8"
										}
									],
									"name": "updateExecutionManager",
									"nameLocation": "21728:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "_executionManager",
												"nameLocation": "21759:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "21751:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21751:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21750:27:8"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21797:0:8"
									},
									"scope": 2160,
									"src": "21719:283:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2102,
										"nodeType": "Block",
										"src": "22263:122:8",
										"statements": [
											{
												"expression": {
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2094,
														"name": "protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "22273:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2095,
														"name": "_protocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2089,
														"src": "22296:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22273:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2097,
												"nodeType": "ExpressionStatement",
												"src": "22273:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2099,
															"name": "_protocolFeeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "22356:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2098,
														"name": "NewProtocolFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "22332:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22332:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "EmitStatement",
												"src": "22327:51:8"
											}
										]
									},
									"functionSelector": "1df47f80",
									"id": 2103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2091,
												"name": "onlyOwner",
												"nameLocations": [
													"22253:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22253:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "22253:9:8"
										}
									],
									"name": "updateProtocolFeeRecipient",
									"nameLocation": "22186:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "_protocolFeeRecipient",
												"nameLocation": "22221:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "22213:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22213:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22212:31:8"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22263:0:8"
									},
									"scope": 2160,
									"src": "22177:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "22622:215:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2111,
																"name": "_royaltyFeeManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "22640:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22670:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22662:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22662:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22662:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22640:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22674:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22632:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22632:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "22632:76:8"
											},
											{
												"expression": {
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2120,
														"name": "royaltyFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "22718:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2122,
																"name": "_royaltyFeeManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "22756:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2121,
															"name": "TheRoyaltyManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "22738:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheRoyaltyManager_$2310_$",
																"typeString": "type(contract TheRoyaltyManager)"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22738:37:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
															"typeString": "contract TheRoyaltyManager"
														}
													},
													"src": "22718:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheRoyaltyManager_$2310",
														"typeString": "contract TheRoyaltyManager"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "22718:57:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2127,
															"name": "_royaltyFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "22811:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2126,
														"name": "NewRoyaltyFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "22790:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22790:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "EmitStatement",
												"src": "22785:45:8"
											}
										]
									},
									"functionSelector": "c5498769",
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2107,
												"name": "onlyOwner",
												"nameLocations": [
													"22612:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "22612:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "22612:9:8"
										}
									],
									"name": "updateRoyaltyFeeManager",
									"nameLocation": "22551:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "_royaltyFeeManager",
												"nameLocation": "22583:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "22575:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22575:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22574:28:8"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22622:0:8"
									},
									"scope": 2160,
									"src": "22542:295:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "23077:227:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2139,
																"name": "_transferSelectorNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "23095:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23127:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23119:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2140,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23119:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23119:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23095:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742075706461746520746f2061206e756c6c2061646472657373",
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23131:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															},
															"value": "Cannot update to a null address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9e165c6416e3be73498719ac1395e6fa2c4c3a33f911884ca908ff352be1ed0",
																"typeString": "literal_string \"Cannot update to a null address\""
															}
														],
														"id": 2138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23087:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23087:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "23087:78:8"
											},
											{
												"expression": {
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2148,
														"name": "transferSelectorNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "23175:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
															"typeString": "contract TheTransferSelector"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2150,
																"name": "_transferSelectorNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "23217:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2149,
															"name": "TheTransferSelector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "23197:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TheTransferSelector_$2368_$",
																"typeString": "type(contract TheTransferSelector)"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23197:41:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
															"typeString": "contract TheTransferSelector"
														}
													},
													"src": "23175:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TheTransferSelector_$2368",
														"typeString": "contract TheTransferSelector"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "23175:63:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2155,
															"name": "_transferSelectorNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "23276:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2154,
														"name": "NewTransferSelectorNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "23253:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23253:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2157,
												"nodeType": "EmitStatement",
												"src": "23248:49:8"
											}
										]
									},
									"functionSelector": "f75ff53f",
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2135,
												"name": "onlyOwner",
												"nameLocations": [
													"23067:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "23067:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "23067:9:8"
										}
									],
									"name": "updateTransferSelectorNFT",
									"nameLocation": "23002:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "_transferSelectorNFT",
												"nameLocation": "23036:20:8",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "23028:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23028:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23027:30:8"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23077:0:8"
									},
									"scope": 2160,
									"src": "22993:311:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2161,
							"src": "995:22312:8",
							"usedErrors": []
						}
					],
					"src": "33:23276:8"
				},
				"id": 8
			},
			"contracts/Manager/execution/interface/TheExecutionStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/execution/interface/TheExecutionStrategy.sol",
					"exportedSymbols": {
						"OrderTypes": [
							2464
						],
						"TheExStrategy": [
							2200
						]
					},
					"id": 2201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../../libraries/OrderTypes.sol",
							"id": 2164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2201,
							"sourceUnit": 2465,
							"src": "57:61:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2163,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2464,
										"src": "65:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2200,
							"linearizedBaseContracts": [
								2200
							],
							"name": "TheExStrategy",
							"nameLocation": "130:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2a75ffee",
									"id": 2179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuy",
									"nameLocation": "159:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "204:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "173:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2165,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"173:10:9",
															"184:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "173:21:9"
													},
													"referencedDeclaration": 2419,
													"src": "173:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "245:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "214:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2168,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"214:10:9",
															"225:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "214:21:9"
													},
													"referencedDeclaration": 2406,
													"src": "214:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:82:9"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "315:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "333:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "354:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:70:9"
									},
									"scope": 2200,
									"src": "150:222:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d310677d",
									"id": 2194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteSell",
									"nameLocation": "387:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "433:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "402:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2180,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"402:10:9",
															"413:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "402:21:9"
													},
													"referencedDeclaration": 2419,
													"src": "402:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "474:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "443:39:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2183,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"443:10:9",
															"454:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "443:21:9"
													},
													"referencedDeclaration": 2406,
													"src": "443:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:82:9"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "544:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "562:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "583:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:70:9"
									},
									"scope": 2200,
									"src": "378:223:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dd1cda6",
									"id": 2199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewProtocolFee",
									"nameLocation": "616:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:9"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "657:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:9"
									},
									"scope": 2200,
									"src": "607:59:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2201,
							"src": "120:548:9",
							"usedErrors": []
						}
					],
					"src": "32:637:9"
				},
				"id": 9
			},
			"contracts/Manager/interface/IWETH.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/IWETH.sol",
					"exportedSymbols": {
						"IWETH": [
							2220
						]
					},
					"id": 2221,
					"license": "GNU",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2202,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2220,
							"linearizedBaseContracts": [
								2220
							],
							"name": "IWETH",
							"nameLocation": "68:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 2205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "89:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "96:2:10"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "115:0:10"
									},
									"scope": 2220,
									"src": "80:36:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "131:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "148:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "140:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "160:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "152:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:27:10"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "185:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "185:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:6:10"
									},
									"scope": 2220,
									"src": "122:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 2219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "206:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:9:10"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:10"
									},
									"scope": 2220,
									"src": "197:36:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2221,
							"src": "58:177:10",
							"usedErrors": []
						}
					],
					"src": "32:204:10"
				},
				"id": 10
			},
			"contracts/Manager/interface/TheCurrencyManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheCurrencyManager.sol",
					"exportedSymbols": {
						"TheCurrencyManager": [
							2257
						]
					},
					"id": 2258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheCurrencyManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2257,
							"linearizedBaseContracts": [
								2257
							],
							"name": "TheCurrencyManager",
							"nameLocation": "67:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8ab234b6",
									"id": 2227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCurrency",
									"nameLocation": "101:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "121:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "113:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:18:11"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:0:11"
									},
									"scope": 2257,
									"src": "92:48:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5d3a107",
									"id": 2232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeCurrency",
									"nameLocation": "155:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "178:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "170:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:18:11"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "196:0:11"
									},
									"scope": 2257,
									"src": "146:51:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "43b938c5",
									"id": 2239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCurrencyWhitelisted",
									"nameLocation": "212:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "242:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "234:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:18:11"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "275:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "275:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:6:11"
									},
									"scope": 2257,
									"src": "203:78:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f39b0a",
									"id": 2251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedCurrencies",
									"nameLocation": "296:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "330:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "322:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "346:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "338:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:30:11"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "375:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2245,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "375:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2246,
													"nodeType": "ArrayTypeName",
													"src": "375:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "393:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:27:11"
									},
									"scope": 2257,
									"src": "287:115:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1facfd9c",
									"id": 2256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedCurrencies",
									"nameLocation": "417:30:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:11"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "473:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:9:11"
									},
									"scope": 2257,
									"src": "408:74:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2258,
							"src": "57:427:11",
							"usedErrors": []
						}
					],
					"src": "32:453:11"
				},
				"id": 11
			},
			"contracts/Manager/interface/TheExManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheExManager.sol",
					"exportedSymbols": {
						"TheExManager": [
							2294
						]
					},
					"id": 2295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2259,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheExManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2294,
							"linearizedBaseContracts": [
								2294
							],
							"name": "TheExManager",
							"nameLocation": "67:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "223e5479",
									"id": 2264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addStrategy",
									"nameLocation": "95:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "115:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "107:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:18:12"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "133:0:12"
									},
									"scope": 2294,
									"src": "86:48:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "175188e8",
									"id": 2269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeStrategy",
									"nameLocation": "149:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "172:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "164:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:18:12"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "190:0:12"
									},
									"scope": 2294,
									"src": "140:51:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "999ba27c",
									"id": 2276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isStrategyWhitelisted",
									"nameLocation": "206:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "236:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "228:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "227:18:12"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "269:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:6:12"
									},
									"scope": 2294,
									"src": "197:78:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31fb5b1f",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewWhitelistedStrategies",
									"nameLocation": "290:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "cursor",
												"nameLocation": "324:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "316:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "size",
												"nameLocation": "340:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "332:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:30:12"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "369:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2282,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "369:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2283,
													"nodeType": "ArrayTypeName",
													"src": "369:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "387:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:27:12"
									},
									"scope": 2294,
									"src": "281:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "985e3a2f",
									"id": 2293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "viewCountWhitelistedStrategies",
									"nameLocation": "411:30:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "441:2:12"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "467:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:9:12"
									},
									"scope": 2294,
									"src": "402:74:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2295,
							"src": "57:421:12",
							"usedErrors": []
						}
					],
					"src": "32:447:12"
				},
				"id": 12
			},
			"contracts/Manager/interface/TheRoyaltyFeeManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheRoyaltyFeeManager.sol",
					"exportedSymbols": {
						"TheRoyaltyManager": [
							2310
						]
					},
					"id": 2311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheRoyaltyManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2310,
							"linearizedBaseContracts": [
								2310
							],
							"name": "TheRoyaltyManager",
							"nameLocation": "67:17:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f4f635fa",
									"id": 2309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRoyaltyFeeAndGetRecipient",
									"nameLocation": "100:34:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "152:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "144:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "180:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "172:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "205:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "197:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:83:13"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "241:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "250:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:18:13"
									},
									"scope": 2310,
									"src": "91:168:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2311,
							"src": "57:204:13",
							"usedErrors": []
						}
					],
					"src": "32:230:13"
				},
				"id": 13
			},
			"contracts/Manager/interface/TheTransferManager.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheTransferManager.sol",
					"exportedSymbols": {
						"TheTransferManager": [
							2326
						]
					},
					"id": 2327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheTransferManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2326,
							"linearizedBaseContracts": [
								2326
							],
							"name": "TheTransferManager",
							"nameLocation": "67:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "33f2fa9f",
									"id": 2325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNonFungibleToken",
									"nameLocation": "101:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "143:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "135:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "171:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "163:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "193:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "185:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "213:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "205:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "238:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "230:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "230:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:125:14"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:0:14"
									},
									"scope": 2326,
									"src": "92:168:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2327,
							"src": "57:205:14",
							"usedErrors": []
						}
					],
					"src": "32:231:14"
				},
				"id": 14
			},
			"contracts/Manager/interface/TheUnemetaExchange.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/interface/TheUnemetaExchange.sol",
					"exportedSymbols": {
						"OrderTypes": [
							2464
						],
						"TheUnemetaExchange": [
							2358
						]
					},
					"id": 2359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "contracts/libraries/OrderTypes.sol",
							"file": "../../libraries/OrderTypes.sol",
							"id": 2330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2359,
							"sourceUnit": 2465,
							"src": "57:58:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2329,
										"name": "OrderTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2464,
										"src": "65:10:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheUnemetaExchange",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2358,
							"linearizedBaseContracts": [
								2358
							],
							"name": "TheUnemetaExchange",
							"nameLocation": "127:18:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "509a1a41",
									"id": 2339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matchSellerOrdersWETH",
									"nameLocation": "161:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "223:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "192:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2331,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"192:10:15",
															"203:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "192:21:15"
													},
													"referencedDeclaration": 2419,
													"src": "192:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "272:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "241:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2334,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"241:10:15",
															"252:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "241:21:15"
													},
													"referencedDeclaration": 2406,
													"src": "241:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "182:104:15"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:0:15"
									},
									"scope": 2358,
									"src": "152:152:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "45ea7231",
									"id": 2348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matchSellerOrders",
									"nameLocation": "319:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "takerBid",
												"nameLocation": "368:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "337:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2340,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"337:10:15",
															"348:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "337:21:15"
													},
													"referencedDeclaration": 2419,
													"src": "337:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "makerAsk",
												"nameLocation": "409:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "378:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2343,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"378:10:15",
															"389:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "378:21:15"
													},
													"referencedDeclaration": 2406,
													"src": "378:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:82:15"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:15"
									},
									"scope": 2358,
									"src": "310:126:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "63521def",
									"id": 2357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "matchesBuyerOrder",
									"nameLocation": "451:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "takerAsk",
												"nameLocation": "500:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "469:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TakerOrder_$2419_calldata_ptr",
													"typeString": "struct OrderTypes.TakerOrder"
												},
												"typeName": {
													"id": 2350,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2349,
														"name": "OrderTypes.TakerOrder",
														"nameLocations": [
															"469:10:15",
															"480:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2419,
														"src": "469:21:15"
													},
													"referencedDeclaration": 2419,
													"src": "469:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TakerOrder_$2419_storage_ptr",
														"typeString": "struct OrderTypes.TakerOrder"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "makerBid",
												"nameLocation": "541:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "510:39:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_calldata_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2352,
														"name": "OrderTypes.MakerOrder",
														"nameLocations": [
															"510:10:15",
															"521:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "510:21:15"
													},
													"referencedDeclaration": 2406,
													"src": "510:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:82:15"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:15"
									},
									"scope": 2358,
									"src": "442:126:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2359,
							"src": "117:453:15",
							"usedErrors": []
						}
					],
					"src": "32:539:15"
				},
				"id": 15
			},
			"contracts/Manager/trans/interface/TheTransFerSelector.sol": {
				"ast": {
					"absolutePath": "contracts/Manager/trans/interface/TheTransFerSelector.sol",
					"exportedSymbols": {
						"TheTransferSelector": [
							2368
						]
					},
					"id": 2369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TheTransferSelector",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2368,
							"linearizedBaseContracts": [
								2368
							],
							"name": "TheTransferSelector",
							"nameLocation": "67:19:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cc159493",
									"id": 2367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkTransferManagerForToken",
									"nameLocation": "102:28:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "139:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "131:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "131:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "130:20:16"
									},
									"returnParameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "174:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "173:9:16"
									},
									"scope": 2368,
									"src": "93:90:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2369,
							"src": "57:128:16",
							"usedErrors": []
						}
					],
					"src": "32:154:16"
				},
				"id": 16
			},
			"contracts/libraries/OrderTypes.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/OrderTypes.sol",
					"exportedSymbols": {
						"OrderTypes": [
							2464
						]
					},
					"id": 2465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OrderTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2464,
							"linearizedBaseContracts": [
								2464
							],
							"name": "OrderTypes",
							"nameLocation": "281:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2373,
									"mutability": "constant",
									"name": "MAKER_ORDER_HASH",
									"nameLocation": "573:16:17",
									"nodeType": "VariableDeclaration",
									"scope": 2464,
									"src": "547:111:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2371,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834303236316164653533326661316432633732393364663330616161646239623363363136666165353235613062353664336434313163383431613835303238",
										"id": 2372,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "592:66:17",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_29015347937064319049656096072445641795799588500519861140121276013747802492968_by_1",
											"typeString": "int_const 2901...(69 digits omitted)...2968"
										},
										"value": "0x40261ade532fa1d2c7293df30aaadb9b3c616fae525a0b56d3d411c841a85028"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "OrderTypes.MakerOrder",
									"id": 2406,
									"members": [
										{
											"constant": false,
											"id": 2375,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "698:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "693:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2374,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "693:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2377,
											"mutability": "mutable",
											"name": "signer",
											"nameLocation": "758:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "750:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2376,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2379,
											"mutability": "mutable",
											"name": "collection",
											"nameLocation": "811:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "803:18:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2378,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "803:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2381,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "861:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "853:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2380,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "853:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2383,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "904:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "896:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2382,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "896:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2385,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "948:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "940:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2384,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "940:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2387,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "1048:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1040:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2386,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1040:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2389,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "1154:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1146:16:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2388,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1146:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2391,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1205:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1197:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2390,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1197:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2393,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1339:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1331:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2392,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2395,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1392:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1384:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2394,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1384:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2397,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1441:18:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1433:26:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2396,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1433:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2399,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "1551:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1545:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2398,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1545:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2401,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "1598:1:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1592:7:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2400,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1592:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2403,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "1644:1:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1636:9:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2402,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1636:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2405,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "1679:1:17",
											"nodeType": "VariableDeclaration",
											"scope": 2406,
											"src": "1671:9:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2404,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1671:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MakerOrder",
									"nameLocation": "672:10:17",
									"nodeType": "StructDefinition",
									"scope": 2464,
									"src": "665:1038:17",
									"visibility": "public"
								},
								{
									"canonicalName": "OrderTypes.TakerOrder",
									"id": 2419,
									"members": [
										{
											"constant": false,
											"id": 2408,
											"mutability": "mutable",
											"name": "isOrderAsk",
											"nameLocation": "1742:10:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1737:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2407,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1737:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2410,
											"mutability": "mutable",
											"name": "taker",
											"nameLocation": "1802:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1794:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2409,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1794:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2412,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1839:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1831:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2411,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1831:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2414,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1894:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1886:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2413,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1886:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2416,
											"mutability": "mutable",
											"name": "minPercentageToAsk",
											"nameLocation": "1919:18:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "1911:26:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2415,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1911:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2418,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "2032:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2419,
											"src": "2026:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2417,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2026:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TakerOrder",
									"nameLocation": "1716:10:17",
									"nodeType": "StructDefinition",
									"scope": 2464,
									"src": "1709:368:17",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "2160:616:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2430,
																	"name": "MAKER_ORDER_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "2236:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2431,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2270:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2281:10:17",
																	"memberName": "isOrderAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2375,
																	"src": "2270:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"id": 2433,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2309:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2320:6:17",
																	"memberName": "signer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2377,
																	"src": "2309:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2435,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2344:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2355:10:17",
																	"memberName": "collection",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2379,
																	"src": "2344:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2437,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2383:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2394:5:17",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2381,
																	"src": "2383:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2439,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2417:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2428:7:17",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2383,
																	"src": "2417:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2441,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2453:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2464:6:17",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2385,
																	"src": "2453:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2443,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2488:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2499:8:17",
																	"memberName": "strategy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2387,
																	"src": "2488:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2445,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2525:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2536:8:17",
																	"memberName": "currency",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2389,
																	"src": "2525:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2447,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2562:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2573:5:17",
																	"memberName": "nonce",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2391,
																	"src": "2562:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2449,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2596:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2607:9:17",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2393,
																	"src": "2596:20:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2451,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2634:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2645:7:17",
																	"memberName": "endTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2395,
																	"src": "2634:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2453,
																		"name": "makerOrder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "2670:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																			"typeString": "struct OrderTypes.MakerOrder memory"
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2681:18:17",
																	"memberName": "minPercentageToAsk",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2397,
																	"src": "2670:29:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 2456,
																				"name": "makerOrder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2422,
																				"src": "2727:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
																					"typeString": "struct OrderTypes.MakerOrder memory"
																				}
																			},
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2738:6:17",
																			"memberName": "params",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2399,
																			"src": "2727:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2455,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2717:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2717:28:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2428,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2208:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2212:6:17",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2208:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2208:551:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2427,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2185:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:584:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2426,
												"id": 2461,
												"nodeType": "Return",
												"src": "2170:599:17"
											}
										]
									},
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "2093:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "makerOrder",
												"nameLocation": "2116:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2098:28:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MakerOrder_$2406_memory_ptr",
													"typeString": "struct OrderTypes.MakerOrder"
												},
												"typeName": {
													"id": 2421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2420,
														"name": "MakerOrder",
														"nameLocations": [
															"2098:10:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2406,
														"src": "2098:10:17"
													},
													"referencedDeclaration": 2406,
													"src": "2098:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MakerOrder_$2406_storage_ptr",
														"typeString": "struct OrderTypes.MakerOrder"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:30:17"
									},
									"returnParameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2151:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:9:17"
									},
									"scope": 2464,
									"src": "2084:692:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2465,
							"src": "273:2505:17",
							"usedErrors": []
						}
					],
					"src": "32:2747:17"
				},
				"id": 17
			},
			"contracts/libraries/SignatureChecker.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SignatureChecker.sol",
					"exportedSymbols": {
						"Address": [
							856
						],
						"IERC1271": [
							126
						],
						"SignatureChecker": [
							2588
						]
					},
					"id": 2589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2466,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2589,
							"sourceUnit": 857,
							"src": "57:66:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2467,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 856,
										"src": "65:7:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"id": 2470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2589,
							"sourceUnit": 127,
							"src": "124:73:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2469,
										"name": "IERC1271",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 126,
										"src": "132:8:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureChecker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2471,
								"nodeType": "StructuredDocumentation",
								"src": "199:121:18",
								"text": " @title SignatureChecker\n @notice This library allows verification of signatures for both EOAs and contracts."
							},
							"fullyImplemented": true,
							"id": 2588,
							"linearizedBaseContracts": [
								2588
							],
							"name": "SignatureChecker",
							"nameLocation": "329:16:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "820:639:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2487,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "1077:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1069:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2485,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1069:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1069:10:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1083:66:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...7168"
																},
																"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
															},
															"src": "1069:80:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20496e76616c6964207320706172616d65746572",
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1163:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323",
																"typeString": "literal_string \" Invalid s parameter\""
															},
															"value": " Invalid s parameter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc92f13dbab1b757956b66b82417dd1342a853afe29b8dbb6783b4f1589ff323",
																"typeString": "literal_string \" Invalid s parameter\""
															}
														],
														"id": 2484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1048:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:147:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "1048:147:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "1214:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3237",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1219:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_27_by_1",
																		"typeString": "int_const 27"
																	},
																	"value": "27"
																},
																"src": "1214:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2498,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2475,
																	"src": "1225:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3238",
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1230:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_28_by_1",
																		"typeString": "int_const 28"
																	},
																	"value": "28"
																},
																"src": "1225:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1214:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207620706172616d65746572",
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1234:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0",
																"typeString": "literal_string \"Invalid v parameter\""
															},
															"value": "Invalid v parameter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_177445aa01cd0610a9bc255d1601614b74840050216ddb41f6f5b7e3a2b9e0e0",
																"typeString": "literal_string \"Invalid v parameter\""
															}
														],
														"id": 2494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1206:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1206:50:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "1206:50:18"
											},
											{
												"assignments": [
													2506
												],
												"declarations": [
													{
														"constant": false,
														"id": 2506,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "1337:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 2526,
														"src": "1329:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1329:7:18",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2513,
												"initialValue": {
													"arguments": [
														{
															"id": 2508,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "1356:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2509,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2475,
															"src": "1362:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2510,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2477,
															"src": "1365:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2511,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "1368:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2507,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1346:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:24:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1329:41:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2515,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2506,
																"src": "1388:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1398:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2516,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1398:7:18",
																		"typeDescriptions": {}
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1398:10:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1388:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "20496e76616c6964207369676e6572",
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1410:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0",
																"typeString": "literal_string \" Invalid signer\""
															},
															"value": " Invalid signer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22bce9c87085099ff95e9e698486d37a158129edd73e4c18d69a8f77004e92b0",
																"typeString": "literal_string \" Invalid signer\""
															}
														],
														"id": 2514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1380:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1380:48:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2523,
												"nodeType": "ExpressionStatement",
												"src": "1380:48:18"
											},
											{
												"expression": {
													"id": 2524,
													"name": "signer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2506,
													"src": "1446:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2483,
												"id": 2525,
												"nodeType": "Return",
												"src": "1439:13:18"
											}
										]
									},
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "697:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "722:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "714:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "742:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "736:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2474,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "736:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "761:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "753:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "780:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "772:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2478,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:83:18"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "811:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:9:18"
									},
									"scope": 2588,
									"src": "688:771:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "1928:721:18",
										"statements": [
											{
												"assignments": [
													2545
												],
												"declarations": [
													{
														"constant": false,
														"id": 2545,
														"mutability": "mutable",
														"name": "digest",
														"nameLocation": "2105:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 2586,
														"src": "2097:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2544,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2097:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2554,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 2550,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2539,
																	"src": "2153:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2551,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2529,
																	"src": "2170:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2547,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2124:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2128:12:18",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2124:16:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2124:51:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2546,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2114:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2114:62:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2097:79:18"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 2557,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "2269:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2555,
															"name": "Address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2250:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Address_$856_$",
																"typeString": "type(library Address)"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2258:10:18",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 579,
														"src": "2250:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2250:26:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2584,
													"nodeType": "Block",
													"src": "2510:133:18",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2576,
																			"name": "digest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2545,
																			"src": "2606:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 2577,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2533,
																			"src": "2614:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		{
																			"id": 2578,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "2617:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 2579,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2537,
																			"src": "2620:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2575,
																		"name": "recover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2527,
																		"src": "2598:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																			"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																		}
																	},
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2598:24:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2581,
																	"name": "signer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2531,
																	"src": "2626:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2598:34:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 2543,
															"id": 2583,
															"nodeType": "Return",
															"src": "2591:41:18"
														}
													]
												},
												"id": 2585,
												"nodeType": "IfStatement",
												"src": "2246:397:18",
												"trueBody": {
													"id": 2574,
													"nodeType": "Block",
													"src": "2278:226:18",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2563,
																			"name": "digest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2545,
																			"src": "2445:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 2566,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2535,
																					"src": "2470:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2567,
																					"name": "s",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "2473:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"id": 2568,
																					"name": "v",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2533,
																					"src": "2476:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"expression": {
																					"id": 2564,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2453:3:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2457:12:18",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "2453:16:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2453:25:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2560,
																					"name": "signer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2531,
																					"src": "2420:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2559,
																				"name": "IERC1271",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 126,
																				"src": "2411:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC1271_$126_$",
																					"typeString": "type(contract IERC1271)"
																				}
																			},
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2411:16:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC1271_$126",
																				"typeString": "contract IERC1271"
																			}
																		},
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2428:16:18",
																		"memberName": "isValidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 125,
																		"src": "2411:33:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																			"typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
																		}
																	},
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2411:68:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30783136323662613765",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2483:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_371636862_by_1",
																		"typeString": "int_const 371636862"
																	},
																	"value": "0x1626ba7e"
																},
																"src": "2411:82:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 2543,
															"id": 2573,
															"nodeType": "Return",
															"src": "2404:89:18"
														}
													]
												}
											}
										]
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1752:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1776:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1768:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2528,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1798:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1790:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1820:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1814:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1814:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1839:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1831:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1858:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1850:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "1877:15:18",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1869:23:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1758:140:18"
									},
									"returnParameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "1922:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1922:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:6:18"
									},
									"scope": 2588,
									"src": "1743:906:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2589,
							"src": "321:2330:18",
							"usedErrors": []
						}
					],
					"src": "32:2620:18"
				},
				"id": 18
			}
		}
	}
}